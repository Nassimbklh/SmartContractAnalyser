#!/bin/bash
# Script pour ex√©cuter tous les tests dans test_env

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Fonction pour afficher une section
print_section() {
    echo -e "\n${YELLOW}=======================================${NC}"
    echo -e "${YELLOW}$1${NC}"
    echo -e "${YELLOW}=======================================${NC}\n"
}

# Fonction pour ex√©cuter un test
run_test() {
    local script=$1
    local name=$2

    print_section "üîé Lancement du test: $name"
    python3 "$script"
    local code=$?

    if [ $code -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $name OK${NC}"
    else
        echo -e "${RED}‚ùå $name √©chou√© (code $code)${NC}"
        all_ok=false
    fi
}

# Initialiser le statut global
all_ok=true

# Aller dans le dossier du script
cd "$(dirname "$0")" || { echo "Impossible d'acc√©der au dossier test_env"; exit 1; }

echo -e "${GREEN}üöÄ D√©marrage de tous les tests...${NC}"

# Tests
run_test "test_environment.py" "Test Environnement"
run_test "test_backend_api.py" "Test API Backend"

if [ -z "$DATABASE_URL" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è DATABASE_URL non d√©fini, test BDD ignor√©.${NC}"
    echo -e "${YELLOW}üí° Pour activer : export DATABASE_URL=\"postgresql://user:password@host:port/db\"${NC}"
else
    run_test "test_database.py" "Test Base de Donn√©es"
fi

run_test "test_frontend.py" "Test Frontend"

# R√©sultat final
print_section "R√©sum√© final"

if [ "$all_ok" = true ]; then
    echo -e "${GREEN}üéâ Tous les tests sont pass√©s avec succ√®s !${NC}"
    exit 0
else
    echo -e "${RED}üí• Certains tests ont √©chou√©. V√©rifie les logs ci-dessus.${NC}"
    exit 1
fi