2025-07-09 13:47:50,499 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 13:47:50,656 - app - INFO - Application started
2025-07-09 14:41:30,045 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 14:41:30,183 - app - INFO - Application started
2025-07-09 14:42:49,716 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 14:42:49,825 - app - INFO - Application started
2025-07-09 14:57:53,819 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 14:57:53,959 - app - INFO - Application started
2025-07-09 15:04:47,180 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 15:04:47,307 - app - INFO - Application started
2025-07-09 15:10:01,053 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 15:10:01,171 - app - INFO - Application started
2025-07-09 15:10:34,335 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:10:34,336 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:10:34,336 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:10:34,336 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:10:34,376 - api.auth - INFO - Received register request with method: POST
2025-07-09 15:10:34,376 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'keep-alive', 'Accept': 'application/json', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://98.66.153.29:4456/', 'Content-Length': '148', 'Accept-Language': 'fr-FR,fr;q=0.9'}
2025-07-09 15:10:34,377 - api.auth - INFO - Request content type: application/json
2025-07-09 15:10:34,377 - api.auth - INFO - Processing JSON request
2025-07-09 15:10:34,377 - api.auth - INFO - Attempting to register user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b6
2025-07-09 15:10:34,552 - api.auth - INFO - Registration successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b6
2025-07-09 15:10:34,553 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:10:34,553 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:10:34,553 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:10:34,553 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:11:42,315 - api.auth - INFO - Received register request with method: POST
2025-07-09 15:11:42,315 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'keep-alive', 'Accept': 'application/json', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://98.66.153.29:4456/', 'Content-Length': '144', 'Accept-Language': 'fr-FR,fr;q=0.9'}
2025-07-09 15:11:42,315 - api.auth - INFO - Request content type: application/json
2025-07-09 15:11:42,315 - api.auth - INFO - Processing JSON request
2025-07-09 15:11:42,316 - api.auth - INFO - Attempting to register user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:11:42,475 - api.auth - INFO - Registration successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:11:42,475 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:11:42,475 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:11:42,475 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:11:42,475 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:11:58,786 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:11:58,786 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:11:58,786 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:11:58,786 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:11:58,823 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:11:58,823 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'keep-alive', 'Accept': 'application/json', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15', 'Referer': 'http://98.66.153.29:4456/', 'Content-Length': '89', 'Accept-Language': 'fr-FR,fr;q=0.9'}
2025-07-09 15:11:58,824 - api.auth - INFO - Request content type: application/json
2025-07-09 15:11:58,824 - api.auth - INFO - Processing JSON request
2025-07-09 15:11:58,824 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:11:58,970 - api.auth - INFO - Authentication successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:11:58,971 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:11:58,971 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:11:58,971 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:11:58,971 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:05,029 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:05,029 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:05,029 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:05,030 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:12:05,067 - api.contract - INFO - Received analyze request from wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:12:05,069 - api.contract - INFO - Analyzing code snippet
2025-07-09 15:12:05,075 - api.contract - INFO - Starting contract analysis for user: 9
2025-07-09 15:12:05,075 - services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpmysy31jw.sol
2025-07-09 15:12:05,076 - services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-07-09 15:12:05,076 - services.contract_service - INFO - Compiling contract...
2025-07-09 15:12:05,119 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-07-09 15:12:05,264 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-07-09 15:12:05,265 - solcx - INFO - Using solc version 0.8.0
2025-07-09 15:12:05,537 - services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-07-09 15:12:05,537 - services.contract_service - INFO - Deploying 1 contracts...
2025-07-09 15:12:05,693 - services.contract_service - INFO - Contract VulnerableBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-07-09 15:12:05,693 - services.contract_service - INFO - Setting up contract VulnerableBank...
2025-07-09 15:12:05,868 - services.contract_service - INFO - Contract VulnerableBank setup completed
2025-07-09 15:12:05,868 - services.contract_service - INFO - Funding contract VulnerableBank for attack testing...
2025-07-09 15:12:06,034 - services.contract_service - INFO - Contract VulnerableBank funded
2025-07-09 15:12:06,034 - services.contract_service - INFO - Building contract observation...
2025-07-09 15:12:06,202 - services.contract_service - INFO - Contract observation built successfully
2025-07-09 15:12:06,202 - services.contract_service - INFO - Generating attack strategy...
2025-07-09 15:12:06,203 - services.contract_service - INFO - Running Slither analysis...
2025-07-09 15:12:08,780 - services.contract_service - WARNING - Failed to run Slither analysis: Command '['slither', '/tmp/tmpmysy31jw.sol', '--json', '/tmp/slither/tmpmysy31jw.json', '--ignore-compile']' returned non-zero exit status 1.
2025-07-09 15:12:08,783 - services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 155, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 106, in run_slither
    raise subprocess.CalledProcessError(result_json.returncode, cmd_json)
subprocess.CalledProcessError: Command '['slither', '/tmp/tmpmysy31jw.sol', '--json', '/tmp/slither/tmpmysy31jw.json', '--ignore-compile']' returned non-zero exit status 1.

2025-07-09 15:12:08,783 - modules.attack_generator - INFO - Starting complete attack strategy generation
2025-07-09 15:12:08,783 - modules.attack_generator - INFO - Contract name: VulnerableBank
2025-07-09 15:12:08,783 - modules.attack_generator - INFO - Using step number: 0 for model selection
2025-07-09 15:12:08,783 - modules.attack_generator - INFO - 🔍 Step 1: Analyzing contracts for vulnerabilities...
2025-07-09 15:12:08,784 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 15:12:08,784 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 15:12:08,784 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 15:12:09,807 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:09,808 - openai._base_client - INFO - Retrying request to /chat/completions in 0.427426 seconds
2025-07-09 15:12:11,459 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:11,460 - openai._base_client - INFO - Retrying request to /chat/completions in 0.767858 seconds
2025-07-09 15:12:13,767 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:13,768 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:13,777 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - Contract analysis completed in 4.99 seconds
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - No vulnerabilities found in the contract
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - ⚔️ Step 2: Generating attack code...
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 15:12:13,778 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 15:12:14,073 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:14,073 - openai._base_client - INFO - Retrying request to /chat/completions in 0.397781 seconds
2025-07-09 15:12:14,647 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:14,648 - openai._base_client - INFO - Retrying request to /chat/completions in 0.780185 seconds
2025-07-09 15:12:16,536 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:16,537 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:16,538 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:16,538 - modules.attack_generator - INFO - Attack code generation completed in 2.76 seconds
2025-07-09 15:12:16,538 - modules.attack_generator - INFO - No attack code was generated
2025-07-09 15:12:16,538 - modules.attack_generator - INFO - Total attack strategy generation completed in 7.75 seconds
2025-07-09 15:12:16,538 - modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-07-09 15:12:16,539 - services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpmysy31jw.sol",\n  "contracts": [\n    {\n      "contract_name": "VulnerableBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "deposit",\n          "outputs": [],\n          "stateMutability": "payable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deposit",\n          "signature": "deposit()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "payable",\n          "payable": true,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw(uint256)",\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99984355880000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 0\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 3000000000000000000\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getBalance": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VulnerableBank {\\n    mapping(address => uint256) public balances;\\n\\n    // D\\u00e9p\\u00f4t d\'Ether\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    // Retrait vuln\\u00e9rable\\n    function withdraw(uint256 _amount) public {\\n        require(balances[msg.sender] >= _amount, \\"Insufficient balance\\");\\n\\n        // \\u26a0\\ufe0f Transfert d\'abord\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\"\\");\\n        require(sent, \\"Failed to send Ether\\");\\n\\n        // \\u2705 Mise \\u00e0 jour APR\\u00c8S (c\'est le bug !)\\n        balances[msg.sender] -= _amount;\\n    }\\n\\n    // Voir son solde\\n    function getBalance() public view returns (uint256) {\\n        return balances[msg.sender];\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'contract_analysis': '', 'vulnerability_assessment': '', 'exploitation_requirements': '', 'analysis_duration': 4.993640899658203}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: \n\nVulnerability Assessment: \n\nExploitation Requirements: \n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'code': '', 'code_type': 'solidity', 'attack_duration': 2.759681224822998}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpmysy31jw.sol",\n  "contracts": [\n    {\n      "contract_name": "VulnerableBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "deposit",\n          "outputs": [],\n          "stateMutability": "payable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deposit",\n          "signature": "deposit()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "payable",\n          "payable": true,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw(uint256)",\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99984355880000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 0\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 3000000000000000000\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getBalance": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VulnerableBank {\\n    mapping(address => uint256) public balances;\\n\\n    // D\\u00e9p\\u00f4t d\'Ether\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    // Retrait vuln\\u00e9rable\\n    function withdraw(uint256 _amount) public {\\n        require(balances[msg.sender] >= _amount, \\"Insufficient balance\\");\\n\\n        // \\u26a0\\ufe0f Transfert d\'abord\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\"\\");\\n        require(sent, \\"Failed to send Ether\\");\\n\\n        // \\u2705 Mise \\u00e0 jour APR\\u00c8S (c\'est le bug !)\\n        balances[msg.sender] -= _amount;\\n    }\\n\\n    // Voir son solde\\n    function getBalance() public view returns (uint256) {\\n        return balances[msg.sender];\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'reasoning': '', 'summary': '', 'code': '', 'code_type': 'solidity', 'duration': 7.753322124481201}
2025-07-09 15:12:16,539 - services.contract_service - INFO - Has exploit code: False
2025-07-09 15:12:16,539 - services.contract_service - INFO - No vulnerabilities mentioned: False
2025-07-09 15:12:16,539 - services.contract_service - INFO - Final vulnerability determination: False
2025-07-09 15:12:16,539 - services.contract_service - INFO - Attack strategy summary: 
2025-07-09 15:12:16,540 - services.contract_service - INFO - Analysis completed with status: OK
2025-07-09 15:12:16,540 - services.contract_service - INFO - Temporary file /tmp/tmpmysy31jw.sol removed
2025-07-09 15:12:16,555 - api.contract - INFO - Report saved with filename: VulnerableBank_2025-07-09_15-12, status: OK
2025-07-09 15:12:16,556 - api.contract - INFO - Analysis completed successfully, returning report
2025-07-09 15:12:16,556 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:16,556 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:16,556 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:16,556 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:18,139 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:18,140 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:18,140 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:18,140 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:12:18,208 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:18,208 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:18,208 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:18,208 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:24,985 - api.contract - INFO - Received analyze request from wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:12:24,986 - api.contract - INFO - Analyzing code snippet
2025-07-09 15:12:24,991 - api.contract - INFO - Starting contract analysis for user: 9
2025-07-09 15:12:24,991 - services.contract_service - INFO - Created temporary file for contract code: /tmp/tmp1q91maxa.sol
2025-07-09 15:12:24,993 - services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-07-09 15:12:24,993 - services.contract_service - INFO - Compiling contract...
2025-07-09 15:12:25,008 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.4.17+commit.bdeb9e52
2025-07-09 15:12:25,192 - solcx - INFO - solc 0.4.17 successfully installed at: /root/.solcx/solc-v0.4.17
2025-07-09 15:12:25,192 - solcx - INFO - Using solc version 0.4.17
2025-07-09 15:12:26,624 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:26,624 - openai._base_client - INFO - Retrying request to /chat/completions in 0.421586 seconds
2025-07-09 15:12:27,226 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:27,227 - openai._base_client - INFO - Retrying request to /chat/completions in 0.772031 seconds
2025-07-09 15:12:29,054 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:29,319 - services.contract_service - INFO - Compilation result: 4 contracts compiled
2025-07-09 15:12:29,319 - services.contract_service - INFO - Deploying 4 contracts...
2025-07-09 15:12:29,442 - services.contract_service - INFO - Contract Ownable deployed at 0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7
2025-07-09 15:12:29,442 - services.contract_service - INFO - Setting up contract Ownable...
2025-07-09 15:12:29,479 - services.contract_service - INFO - Contract Ownable setup completed
2025-07-09 15:12:29,479 - services.contract_service - INFO - Funding contract Ownable for attack testing...
2025-07-09 15:12:29,525 - services.contract_service - INFO - Contract Ownable funded
2025-07-09 15:12:29,652 - services.contract_service - INFO - Contract Pausable deployed at 0xe982E462b094850F12AF94d21D470e21bE9D0E9C
2025-07-09 15:12:29,652 - services.contract_service - INFO - Setting up contract Pausable...
2025-07-09 15:12:29,715 - services.contract_service - INFO - Contract Pausable setup completed
2025-07-09 15:12:29,715 - services.contract_service - INFO - Funding contract Pausable for attack testing...
2025-07-09 15:12:29,765 - services.contract_service - INFO - Contract Pausable funded
2025-07-09 15:12:29,874 - services.contract_service - INFO - Contract SafeMath deployed at 0x59d3631c86BbE35EF041872d502F218A39FBa150
2025-07-09 15:12:29,874 - services.contract_service - INFO - Setting up contract SafeMath...
2025-07-09 15:12:29,883 - services.contract_service - INFO - Contract SafeMath setup completed
2025-07-09 15:12:29,883 - services.contract_service - INFO - Funding contract SafeMath for attack testing...
2025-07-09 15:12:29,937 - services.contract_service - INFO - Contract SafeMath funded
2025-07-09 15:12:30,136 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:30,137 - openai._base_client - INFO - Retrying request to /chat/completions in 0.414586 seconds
2025-07-09 15:12:30,755 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:30,756 - openai._base_client - INFO - Retrying request to /chat/completions in 0.982548 seconds
2025-07-09 15:12:31,927 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:32,125 - services.contract_service - INFO - Contract TetherToken deployed at 0x0290FB167208Af455bB137780163b7B7a9a10C16
2025-07-09 15:12:32,125 - services.contract_service - INFO - Setting up contract TetherToken...
2025-07-09 15:12:33,205 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:33,205 - openai._base_client - INFO - Retrying request to /chat/completions in 0.449346 seconds
2025-07-09 15:12:34,971 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:34,972 - openai._base_client - INFO - Retrying request to /chat/completions in 0.842350 seconds
2025-07-09 15:12:37,037 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:37,401 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:37,402 - openai._base_client - INFO - Retrying request to /chat/completions in 0.380825 seconds
2025-07-09 15:12:37,989 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:37,989 - openai._base_client - INFO - Retrying request to /chat/completions in 0.866459 seconds
2025-07-09 15:12:39,064 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:39,338 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:39,339 - openai._base_client - INFO - Retrying request to /chat/completions in 0.488627 seconds
2025-07-09 15:12:40,011 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:40,011 - openai._base_client - INFO - Retrying request to /chat/completions in 0.994370 seconds
2025-07-09 15:12:41,473 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:41,588 - services.contract_service - INFO - Contract TetherToken setup completed
2025-07-09 15:12:41,588 - services.contract_service - INFO - Funding contract TetherToken for attack testing...
2025-07-09 15:12:41,636 - services.contract_service - INFO - Contract TetherToken funded
2025-07-09 15:12:41,636 - services.contract_service - INFO - Building contract observation...
2025-07-09 15:12:42,504 - services.contract_service - INFO - Contract observation built successfully
2025-07-09 15:12:42,505 - services.contract_service - INFO - Generating attack strategy...
2025-07-09 15:12:42,505 - services.contract_service - INFO - Running Slither analysis...
2025-07-09 15:12:42,759 - services.contract_service - WARNING - Failed to run Slither analysis: Command '['solc-select', 'versions']' returned non-zero exit status 1.
2025-07-09 15:12:42,762 - services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 155, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 69, in run_slither
    ensure_solc_version(solc_version)
  File "/app/modules/slither_scan.py", line 47, in ensure_solc_version
    out = subprocess.check_output(["solc-select", "versions"], text=True)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 466, in check_output
    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/subprocess.py", line 571, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['solc-select', 'versions']' returned non-zero exit status 1.

2025-07-09 15:12:42,762 - modules.attack_generator - INFO - Starting complete attack strategy generation
2025-07-09 15:12:42,762 - modules.attack_generator - INFO - Contract name: Ownable
2025-07-09 15:12:42,762 - modules.attack_generator - INFO - Using step number: 0 for model selection
2025-07-09 15:12:42,762 - modules.attack_generator - INFO - 🔍 Step 1: Analyzing contracts for vulnerabilities...
2025-07-09 15:12:42,766 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 15:12:42,766 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 15:12:42,766 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 15:12:43,100 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:43,100 - openai._base_client - INFO - Retrying request to /chat/completions in 0.447481 seconds
2025-07-09 15:12:44,351 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:44,351 - openai._base_client - INFO - Retrying request to /chat/completions in 0.964318 seconds
2025-07-09 15:12:45,522 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:45,523 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - Contract analysis completed in 2.76 seconds
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - No vulnerabilities found in the contract
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - ⚔️ Step 2: Generating attack code...
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 15:12:45,524 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 15:12:45,674 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:45,674 - openai._base_client - INFO - Retrying request to /chat/completions in 0.407644 seconds
2025-07-09 15:12:46,272 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:46,273 - openai._base_client - INFO - Retrying request to /chat/completions in 0.883629 seconds
2025-07-09 15:12:47,353 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 15:12:47,353 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:47,355 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 15:12:47,355 - modules.attack_generator - INFO - Attack code generation completed in 1.83 seconds
2025-07-09 15:12:47,355 - modules.attack_generator - INFO - No attack code was generated
2025-07-09 15:12:47,355 - modules.attack_generator - INFO - Total attack strategy generation completed in 4.59 seconds
2025-07-09 15:12:47,355 - modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-07-09 15:12:47,358 - services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp1q91maxa.sol",\n  "contracts": [\n    {\n      "contract_name": "Ownable",\n      "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",\n      "abi": [\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        }\n      ],\n      "functions": [\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "Pausable",\n      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",\n      "abi": [\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "unpause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "paused",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "pause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Pause",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Unpause",\n          "type": "event"\n        }\n      ],\n      "functions": [\n        {\n          "name": "unpause",\n          "signature": "unpause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "paused",\n          "signature": "paused()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "pause",\n          "signature": "pause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [\n        {\n          "name": "Pause",\n          "inputs": []\n        },\n        {\n          "name": "Unpause",\n          "inputs": []\n        }\n      ],\n      "accounts_balances": {\n        "0xe982E462b094850F12AF94d21D470e21bE9D0E9C": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "paused": false,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "SafeMath",\n      "address": "0x59d3631c86BbE35EF041872d502F218A39FBa150",\n      "abi": [],\n      "functions": [],\n      "events": [],\n      "accounts_balances": {\n        "0x59d3631c86BbE35EF041872d502F218A39FBa150": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "TetherToken",\n      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",\n      "abi": [\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "name",\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_upgradedAddress",\n              "type": "address"\n            }\n          ],\n          "name": "deprecate",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_spender",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "approve",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "deprecated",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_evilUser",\n              "type": "address"\n            }\n          ],\n          "name": "addBlackList",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "totalSupply",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_from",\n              "type": "address"\n            },\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "transferFrom",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "upgradedAddress",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "decimals",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "maximumFee",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "_totalSupply",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "unpause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "_maker",\n              "type": "address"\n            }\n          ],\n          "name": "getBlackListStatus",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            },\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "allowed",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "paused",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "who",\n              "type": "address"\n            }\n          ],\n          "name": "balanceOf",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "pause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "getOwner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "symbol",\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "transfer",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "name": "newMaxFee",\n              "type": "uint256"\n            }\n          ],\n          "name": "setParams",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "issue",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "redeem",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "_owner",\n              "type": "address"\n            },\n            {\n              "name": "_spender",\n              "type": "address"\n            }\n          ],\n          "name": "allowance",\n          "outputs": [\n            {\n              "name": "remaining",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "basisPointsRate",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "isBlackListed",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_clearedUser",\n              "type": "address"\n            }\n          ],\n          "name": "removeBlackList",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "MAX_UINT",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_blackListedUser",\n              "type": "address"\n            }\n          ],\n          "name": "destroyBlackFunds",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "name": "_initialSupply",\n              "type": "uint256"\n            },\n            {\n              "name": "_name",\n              "type": "string"\n            },\n            {\n              "name": "_symbol",\n              "type": "string"\n            },\n            {\n              "name": "_decimals",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "Issue",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "Redeem",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "newAddress",\n              "type": "address"\n            }\n          ],\n          "name": "Deprecate",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "feeBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "maxFee",\n              "type": "uint256"\n            }\n          ],\n          "name": "Params",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_blackListedUser",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "_balance",\n              "type": "uint256"\n            }\n          ],\n          "name": "DestroyedBlackFunds",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ],\n          "name": "AddedBlackList",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ],\n          "name": "RemovedBlackList",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Pause",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Unpause",\n          "type": "event"\n        }\n      ],\n      "functions": [\n        {\n          "name": "name",\n          "signature": "name()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deprecate",\n          "signature": "deprecate(address)",\n          "inputs": [\n            {\n              "name": "_upgradedAddress",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "approve",\n          "signature": "approve(address, uint256)",\n          "inputs": [\n            {\n              "name": "_spender",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deprecated",\n          "signature": "deprecated()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "addBlackList",\n          "signature": "addBlackList(address)",\n          "inputs": [\n            {\n              "name": "_evilUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "totalSupply",\n          "signature": "totalSupply()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferFrom",\n          "signature": "transferFrom(address, address, uint256)",\n          "inputs": [\n            {\n              "name": "_from",\n              "type": "address"\n            },\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "upgradedAddress",\n          "signature": "upgradedAddress()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "decimals",\n          "signature": "decimals()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "maximumFee",\n          "signature": "maximumFee()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "_totalSupply",\n          "signature": "_totalSupply()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "unpause",\n          "signature": "unpause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBlackListStatus",\n          "signature": "getBlackListStatus(address)",\n          "inputs": [\n            {\n              "name": "_maker",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "allowed",\n          "signature": "allowed(address, address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            },\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "paused",\n          "signature": "paused()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "balanceOf",\n          "signature": "balanceOf(address)",\n          "inputs": [\n            {\n              "name": "who",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "pause",\n          "signature": "pause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getOwner",\n          "signature": "getOwner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "symbol",\n          "signature": "symbol()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transfer",\n          "signature": "transfer(address, uint256)",\n          "inputs": [\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "setParams",\n          "signature": "setParams(uint256, uint256)",\n          "inputs": [\n            {\n              "name": "newBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "name": "newMaxFee",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "issue",\n          "signature": "issue(uint256)",\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "redeem",\n          "signature": "redeem(uint256)",\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "allowance",\n          "signature": "allowance(address, address)",\n          "inputs": [\n            {\n              "name": "_owner",\n              "type": "address"\n            },\n            {\n              "name": "_spender",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "remaining",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "basisPointsRate",\n          "signature": "basisPointsRate()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "isBlackListed",\n          "signature": "isBlackListed(address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "removeBlackList",\n          "signature": "removeBlackList(address)",\n          "inputs": [\n            {\n              "name": "_clearedUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "MAX_UINT",\n          "signature": "MAX_UINT()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "destroyBlackFunds",\n          "signature": "destroyBlackFunds(address)",\n          "inputs": [\n            {\n              "name": "_blackListedUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [\n        {\n          "name": "Issue",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Redeem",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Deprecate",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "newAddress",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "Params",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "feeBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "maxFee",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "DestroyedBlackFunds",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_blackListedUser",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "_balance",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "AddedBlackList",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "RemovedBlackList",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "Approval",\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Transfer",\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Pause",\n          "inputs": []\n        },\n        {\n          "name": "Unpause",\n          "inputs": []\n        }\n      ],\n      "accounts_balances": {\n        "0x0290FB167208Af455bB137780163b7B7a9a10C16": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "name": "test",\n        "deprecated": false,\n        "totalSupply": 1,\n        "upgradedAddress": "0x0000000000000000000000000000000000000000",\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 1\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 0\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "decimals": 1,\n        "maximumFee": 10,\n        "_totalSupply": 1,\n        "getBlackListStatus": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": false\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": false\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": false\n          }\n        ],\n        "paused": false,\n        "balanceOf": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 1\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 0\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getOwner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n        "symbol": "test",\n        "basisPointsRate": 1,\n        "isBlackListed": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": false\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": false\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": false\n          }\n        ],\n        "MAX_UINT": 115792089237316195423570985008687907853269984665640564039457584007913129639935\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'contract_analysis': '', 'vulnerability_assessment': '', 'exploitation_requirements': '', 'analysis_duration': 2.75760555267334}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: \n\nVulnerability Assessment: \n\nExploitation Requirements: \n\n\nTarget Contract Address: 0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.4.17\n", 'attack_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'code': '', 'code_type': 'solidity', 'attack_duration': 1.8302974700927734}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmp1q91maxa.sol",\n  "contracts": [\n    {\n      "contract_name": "Ownable",\n      "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",\n      "abi": [\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        }\n      ],\n      "functions": [\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "Pausable",\n      "address": "0xe982E462b094850F12AF94d21D470e21bE9D0E9C",\n      "abi": [\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "unpause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "paused",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "pause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Pause",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Unpause",\n          "type": "event"\n        }\n      ],\n      "functions": [\n        {\n          "name": "unpause",\n          "signature": "unpause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "paused",\n          "signature": "paused()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "pause",\n          "signature": "pause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [\n        {\n          "name": "Pause",\n          "inputs": []\n        },\n        {\n          "name": "Unpause",\n          "inputs": []\n        }\n      ],\n      "accounts_balances": {\n        "0xe982E462b094850F12AF94d21D470e21bE9D0E9C": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "paused": false,\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1"\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "SafeMath",\n      "address": "0x59d3631c86BbE35EF041872d502F218A39FBa150",\n      "abi": [],\n      "functions": [],\n      "events": [],\n      "accounts_balances": {\n        "0x59d3631c86BbE35EF041872d502F218A39FBa150": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    },\n    {\n      "contract_name": "TetherToken",\n      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",\n      "abi": [\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "name",\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_upgradedAddress",\n              "type": "address"\n            }\n          ],\n          "name": "deprecate",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_spender",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "approve",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "deprecated",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_evilUser",\n              "type": "address"\n            }\n          ],\n          "name": "addBlackList",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "totalSupply",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_from",\n              "type": "address"\n            },\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "transferFrom",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "upgradedAddress",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "decimals",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "maximumFee",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "_totalSupply",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "unpause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "_maker",\n              "type": "address"\n            }\n          ],\n          "name": "getBlackListStatus",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            },\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "allowed",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "paused",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "who",\n              "type": "address"\n            }\n          ],\n          "name": "balanceOf",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [],\n          "name": "pause",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "getOwner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "owner",\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "symbol",\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "name": "transfer",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "name": "newMaxFee",\n              "type": "uint256"\n            }\n          ],\n          "name": "setParams",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "issue",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "redeem",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "_owner",\n              "type": "address"\n            },\n            {\n              "name": "_spender",\n              "type": "address"\n            }\n          ],\n          "name": "allowance",\n          "outputs": [\n            {\n              "name": "remaining",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "basisPointsRate",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "isBlackListed",\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_clearedUser",\n              "type": "address"\n            }\n          ],\n          "name": "removeBlackList",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": true,\n          "inputs": [],\n          "name": "MAX_UINT",\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "name": "transferOwnership",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "constant": false,\n          "inputs": [\n            {\n              "name": "_blackListedUser",\n              "type": "address"\n            }\n          ],\n          "name": "destroyBlackFunds",\n          "outputs": [],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "name": "_initialSupply",\n              "type": "uint256"\n            },\n            {\n              "name": "_name",\n              "type": "string"\n            },\n            {\n              "name": "_symbol",\n              "type": "string"\n            },\n            {\n              "name": "_decimals",\n              "type": "uint256"\n            }\n          ],\n          "payable": false,\n          "stateMutability": "nonpayable",\n          "type": "constructor"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "Issue",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "Redeem",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "newAddress",\n              "type": "address"\n            }\n          ],\n          "name": "Deprecate",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "feeBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "maxFee",\n              "type": "uint256"\n            }\n          ],\n          "name": "Params",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_blackListedUser",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "_balance",\n              "type": "uint256"\n            }\n          ],\n          "name": "DestroyedBlackFunds",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ],\n          "name": "AddedBlackList",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ],\n          "name": "RemovedBlackList",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Pause",\n          "type": "event"\n        },\n        {\n          "anonymous": false,\n          "inputs": [],\n          "name": "Unpause",\n          "type": "event"\n        }\n      ],\n      "functions": [\n        {\n          "name": "name",\n          "signature": "name()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deprecate",\n          "signature": "deprecate(address)",\n          "inputs": [\n            {\n              "name": "_upgradedAddress",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "approve",\n          "signature": "approve(address, uint256)",\n          "inputs": [\n            {\n              "name": "_spender",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deprecated",\n          "signature": "deprecated()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "addBlackList",\n          "signature": "addBlackList(address)",\n          "inputs": [\n            {\n              "name": "_evilUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "totalSupply",\n          "signature": "totalSupply()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferFrom",\n          "signature": "transferFrom(address, address, uint256)",\n          "inputs": [\n            {\n              "name": "_from",\n              "type": "address"\n            },\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "upgradedAddress",\n          "signature": "upgradedAddress()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "decimals",\n          "signature": "decimals()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "maximumFee",\n          "signature": "maximumFee()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "_totalSupply",\n          "signature": "_totalSupply()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "unpause",\n          "signature": "unpause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBlackListStatus",\n          "signature": "getBlackListStatus(address)",\n          "inputs": [\n            {\n              "name": "_maker",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "allowed",\n          "signature": "allowed(address, address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            },\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "paused",\n          "signature": "paused()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "balanceOf",\n          "signature": "balanceOf(address)",\n          "inputs": [\n            {\n              "name": "who",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "pause",\n          "signature": "pause()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getOwner",\n          "signature": "getOwner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "owner",\n          "signature": "owner()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "symbol",\n          "signature": "symbol()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "string"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transfer",\n          "signature": "transfer(address, uint256)",\n          "inputs": [\n            {\n              "name": "_to",\n              "type": "address"\n            },\n            {\n              "name": "_value",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "setParams",\n          "signature": "setParams(uint256, uint256)",\n          "inputs": [\n            {\n              "name": "newBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "name": "newMaxFee",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "issue",\n          "signature": "issue(uint256)",\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "redeem",\n          "signature": "redeem(uint256)",\n          "inputs": [\n            {\n              "name": "amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "allowance",\n          "signature": "allowance(address, address)",\n          "inputs": [\n            {\n              "name": "_owner",\n              "type": "address"\n            },\n            {\n              "name": "_spender",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "remaining",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "basisPointsRate",\n          "signature": "basisPointsRate()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "isBlackListed",\n          "signature": "isBlackListed(address)",\n          "inputs": [\n            {\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "name": "",\n              "type": "bool"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "removeBlackList",\n          "signature": "removeBlackList(address)",\n          "inputs": [\n            {\n              "name": "_clearedUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "MAX_UINT",\n          "signature": "MAX_UINT()",\n          "inputs": [],\n          "outputs": [\n            {\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "transferOwnership",\n          "signature": "transferOwnership(address)",\n          "inputs": [\n            {\n              "name": "newOwner",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "destroyBlackFunds",\n          "signature": "destroyBlackFunds(address)",\n          "inputs": [\n            {\n              "name": "_blackListedUser",\n              "type": "address"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [\n        {\n          "name": "Issue",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Redeem",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "amount",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Deprecate",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "newAddress",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "Params",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "feeBasisPoints",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "maxFee",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "DestroyedBlackFunds",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_blackListedUser",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "_balance",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "AddedBlackList",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "RemovedBlackList",\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "_user",\n              "type": "address"\n            }\n          ]\n        },\n        {\n          "name": "Approval",\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Transfer",\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ]\n        },\n        {\n          "name": "Pause",\n          "inputs": []\n        },\n        {\n          "name": "Unpause",\n          "inputs": []\n        }\n      ],\n      "accounts_balances": {\n        "0x0290FB167208Af455bB137780163b7B7a9a10C16": 0,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99856554580000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 0,\n        "_contract_eth_balance_eth": 0,\n        "name": "test",\n        "deprecated": false,\n        "totalSupply": 1,\n        "upgradedAddress": "0x0000000000000000000000000000000000000000",\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 1\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 0\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "decimals": 1,\n        "maximumFee": 10,\n        "_totalSupply": 1,\n        "getBlackListStatus": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": false\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": false\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": false\n          }\n        ],\n        "paused": false,\n        "balanceOf": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 1\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 0\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getOwner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n        "owner": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n        "symbol": "test",\n        "basisPointsRate": 1,\n        "isBlackListed": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": false\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": false\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": false\n          }\n        ],\n        "MAX_UINT": 115792089237316195423570985008687907853269984665640564039457584007913129639935\n      },\n      "source_code_snippet": "pragma solidity ^0.4.17;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that throw on error\\n */\\nlibrary SafeMath {\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = a * b;\\n        assert(c / a == b);\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\'t hold\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        assert(b <= a);\\n        return a - b;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        assert(c >= a);\\n        return c;\\n    }\\n}\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\"user permissions\\".\\n */\\ncontract Ownable {\\n    address public owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    function Ownable() public {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner != address(0)) {\\n            owner = newOwner;\\n        }\\n    }\\n\\n}\\n\\n/**\\n * @title ERC20Basic\\n * @dev Simpler version of ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20Basic {\\n    uint public _totalSupply;\\n    function totalSupply() public constant returns (uint);\\n    function balanceOf(address who) public constant returns (uint);\\n    function transfer(address to, uint value) public;\\n    event Transfer(address indexed from, address indexed to, uint value);\\n}\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract ERC20 is ERC20Basic {\\n    function allowance(address owner, address spender) public constant returns (uint);\\n    function transferFrom(address from, address to, uint value) public;\\n    function approve(address spender, uint value) public;\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n}\\n\\n/**\\n * @title Basic token\\n * @dev Basic version of StandardToken, with no allowances.\\n */\\ncontract BasicToken is Ownable, ERC20Basic {\\n    using SafeMath for uint;\\n\\n    mapping(address => uint) public balances;\\n\\n    // additional variables for use if transaction fees ever became necessary\\n    uint public basisPointsRate = 0;\\n    uint public maximumFee = 0;\\n\\n    /**\\n    * @dev Fix for the ERC20 short address attack.\\n    */\\n    modifier onlyPayloadSize(uint size) {\\n        require(!(msg.data.length < size + 4));\\n        _;\\n    }\\n\\n    /**\\n    * @dev transfer token for a specified address\\n    * @param _to The address to transfer to.\\n    * @param _value The amount to be transferred.\\n    */\\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[msg.sender] = balances[msg.sender].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(msg.sender, owner, fee);\\n        }\\n        Transfer(msg.sender, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Gets the balance of the specified address.\\n    * @param _owner The address to query the the balance of.\\n    * @return An uint representing the amount owned by the passed address.\\n    */\\n    function balanceOf(address _owner) public constant returns (uint balance) {\\n        return balances[_owner];\\n    }\\n\\n}\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * @dev https://github.com/ethereum/EIPs/issues/20\\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n */\\ncontract StandardToken is BasicToken, ERC20 {\\n\\n    mapping (address => mapping (address => uint)) public allowed;\\n\\n    uint public constant MAX_UINT = 2**256 - 1;\\n\\n    /**\\n    * @dev Transfer tokens from one address to another\\n    * @param _from address The address which you want to send tokens from\\n    * @param _to address The address which you want to transfer to\\n    * @param _value uint the amount of tokens to be transferred\\n    */\\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\\n        var _allowance = allowed[_from][msg.sender];\\n\\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\\n        // if (_value > _allowance) throw;\\n\\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\\n        if (fee > maximumFee) {\\n            fee = maximumFee;\\n        }\\n        if (_allowance < MAX_UINT) {\\n            allowed[_from][msg.sender] = _allowance.sub(_value);\\n        }\\n        uint sendAmount = _value.sub(fee);\\n        balances[_from] = balances[_from].sub(_value);\\n        balances[_to] = balances[_to].add(sendAmount);\\n        if (fee > 0) {\\n            balances[owner] = balances[owner].add(fee);\\n            Transfer(_from, owner, fee);\\n        }\\n        Transfer(_from, _to, sendAmount);\\n    }\\n\\n    /**\\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n    * @param _spender The address which will spend the funds.\\n    * @param _value The amount of tokens to be spent.\\n    */\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\\n\\n        allowed[msg.sender][_spender] = _value;\\n        Approval(msg.sender, _spender, _value);\\n    }\\n\\n    /**\\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\\n    * @param _owner address The address which owns the funds.\\n    * @param _spender address The address which will spend the funds.\\n    * @return A uint specifying the amount of tokens still available for the spender.\\n    */\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n}\\n\\n\\n/**\\n * @title Pausable\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\n */\\ncontract Pausable is Ownable {\\n  event Pause();\\n  event Unpause();\\n\\n  bool public paused = false;\\n\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is not paused.\\n   */\\n  modifier whenNotPaused() {\\n    require(!paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev Modifier to make a function callable only when the contract is paused.\\n   */\\n  modifier whenPaused() {\\n    require(paused);\\n    _;\\n  }\\n\\n  /**\\n   * @dev called by the owner to pause, triggers stopped state\\n   */\\n  function pause() onlyOwner whenNotPaused public {\\n    paused = true;\\n    Pause();\\n  }\\n\\n  /**\\n   * @dev called by the owner to unpause, returns to normal state\\n   */\\n  function unpause() onlyOwner whenPaused public {\\n    paused = false;\\n    Unpause();\\n  }\\n}\\n\\ncontract BlackList is Ownable, BasicToken {\\n\\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\n    function getBlackListStatus(address _maker) external constant returns (bool) {\\n        return isBlackListed[_maker];\\n    }\\n\\n    function getOwner() external constant returns (address) {\\n        return owner;\\n    }\\n\\n    mapping (address => bool) public isBlackListed;\\n    \\n    function addBlackList (address _evilUser) public onlyOwner {\\n        isBlackListed[_evilUser] = true;\\n        AddedBlackList(_evilUser);\\n    }\\n\\n    function removeBlackList (address _clearedUser) public onlyOwner {\\n        isBlackListed[_clearedUser] = false;\\n        RemovedBlackList(_clearedUser);\\n    }\\n\\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\\n        require(isBlackListed[_blackListedUser]);\\n        uint dirtyFunds = balanceOf(_blackListedUser);\\n        balances[_blackListedUser] = 0;\\n        _totalSupply -= dirtyFunds;\\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\n    }\\n\\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\\n\\n    event AddedBlackList(address _user);\\n\\n    event RemovedBlackList(address _user);\\n\\n}\\n\\ncontract UpgradedStandardToken is StandardToken{\\n    // those methods are called by the legacy contract\\n    // and they must ensure msg.sender to be the contract address\\n    function transferByLegacy(address from, address to, uint value) public;\\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\\n    function approveByLegacy(address from, address spender, uint value) public;\\n}\\n\\ncontract TetherToken is Pausable, StandardToken, BlackList {\\n\\n    string public name;\\n    string public symbol;\\n    uint public decimals;\\n    address public upgradedAddress;\\n    bool public deprecated;\\n\\n    //  The contract can be initialized with a number of tokens\\n    //  All the tokens are deposited to the owner address\\n    //\\n    // @param _balance Initial supply of the contract\\n    // @param _name Token Name\\n    // @param _symbol Token symbol\\n    // @param _decimals Token decimals\\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\\n        _totalSupply = _initialSupply;\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        balances[owner] = _initialSupply;\\n        deprecated = false;\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transfer(address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[msg.sender]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\\n        } else {\\n            return super.transfer(_to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\\n        require(!isBlackListed[_from]);\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\\n        } else {\\n            return super.transferFrom(_from, _to, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function balanceOf(address who) public constant returns (uint) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\n        } else {\\n            return super.balanceOf(who);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\\n        if (deprecated) {\\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\\n        } else {\\n            return super.approve(_spender, _value);\\n        }\\n    }\\n\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\\n        } else {\\n            return super.allowance(_owner, _spender);\\n        }\\n    }\\n\\n    // deprecate current contract in favour of a new one\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\n        deprecated = true;\\n        upgradedAddress = _upgradedAddress;\\n        Deprecate(_upgradedAddress);\\n    }\\n\\n    // deprecate current contract if favour of a new one\\n    function totalSupply() public constant returns (uint) {\\n        if (deprecated) {\\n            return StandardToken(upgradedAddress).totalSupply();\\n        } else {\\n            return _totalSupply;\\n        }\\n    }\\n\\n    // Issue a new amount of tokens\\n    // these tokens are deposited into the owner address\\n    //\\n    // @param _amount Number of tokens to be issued\\n    function issue(uint amount) public onlyOwner {\\n        require(_totalSupply + amount > _totalSupply);\\n        require(balances[owner] + amount > balances[owner]);\\n\\n        balances[owner] += amount;\\n        _totalSupply += amount;\\n        Issue(amount);\\n    }\\n\\n    // Redeem tokens.\\n    // These tokens are withdrawn from the owner address\\n    // if the balance must be enough to cover the redeem\\n    // or the call will fail.\\n    // @param _amount Number of tokens to be issued\\n    function redeem(uint amount) public onlyOwner {\\n        require(_totalSupply >= amount);\\n        require(balances[owner] >= amount);\\n\\n        _totalSupply -= amount;\\n        balances[owner] -= amount;\\n        Redeem(amount);\\n    }\\n\\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\n        require(newBasisPoints < 20);\\n        require(newMaxFee < 50);\\n\\n        basisPointsRate = newBasisPoints;\\n        maximumFee = newMaxFee.mul(10**decimals);\\n\\n        Params(basisPointsRate, maximumFee);\\n    }\\n\\n    // Called when new token are issued\\n    event Issue(uint amount);\\n\\n    // Called when tokens are redeemed\\n    event Redeem(uint amount);\\n\\n    // Called when contract is deprecated\\n    event Deprecate(address newAddress);\\n\\n    // Called if contract ever adds fees\\n    event Params(uint feeBasisPoints, uint maxFee);\\n}",\n      "solc_version": "0.4.17"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'reasoning': '', 'summary': '', 'code': '', 'code_type': 'solidity', 'duration': 4.587903022766113}
2025-07-09 15:12:47,359 - services.contract_service - INFO - Has exploit code: False
2025-07-09 15:12:47,359 - services.contract_service - INFO - No vulnerabilities mentioned: False
2025-07-09 15:12:47,359 - services.contract_service - INFO - Final vulnerability determination: False
2025-07-09 15:12:47,360 - services.contract_service - INFO - Attack strategy summary: 
2025-07-09 15:12:47,360 - services.contract_service - INFO - Analysis completed with status: OK
2025-07-09 15:12:47,360 - services.contract_service - INFO - Temporary file /tmp/tmp1q91maxa.sol removed
2025-07-09 15:12:47,371 - api.contract - INFO - Report saved with filename: Ownable_2025-07-09_15-12, status: OK
2025-07-09 15:12:47,371 - api.contract - INFO - Analysis completed successfully, returning report
2025-07-09 15:12:47,371 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:47,371 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:47,371 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:47,371 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:48,032 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:48,032 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:48,032 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:48,032 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:53,865 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:53,865 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:53,865 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:53,866 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:12:53,906 - api.feedback - INFO - Réception d'un retour depuis le portefeuille: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:12:53,932 - api.feedback - INFO - Retour sauvegardé avec ID: 1, statut: OK, poids de la requête: 3.0
2025-07-09 15:12:53,932 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:53,933 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:53,933 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:53,933 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:12:57,389 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:12:57,389 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:12:57,389 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:12:57,389 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:04,438 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:04,439 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:04,439 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:04,439 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:27,537 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:27,538 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:27,538 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:27,538 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization, content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:13:27,552 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:13:27,552 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '90', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweDEyRjA0NTNDN2E5RDRGMWI4RjAwRTFBYkYwOTJiM2FCMmMzRDlkM0UiLCJleHAiOjE3NTIwNjIyMDV9.Kg3ONNeNbzhmbS2SCSZ4u2pI8YOGbqu80slr6jZKvEs', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 15:13:27,553 - api.auth - INFO - Request content type: application/json
2025-07-09 15:13:27,553 - api.auth - INFO - Processing JSON request
2025-07-09 15:13:27,553 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 
2025-07-09 15:13:27,558 - api.auth - WARNING - Invalid credentials for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 , error: Invalid credentials
2025-07-09 15:13:27,558 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:27,558 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:27,558 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:27,558 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:28,725 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:13:28,725 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '90', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweDEyRjA0NTNDN2E5RDRGMWI4RjAwRTFBYkYwOTJiM2FCMmMzRDlkM0UiLCJleHAiOjE3NTIwNjIyMDV9.Kg3ONNeNbzhmbS2SCSZ4u2pI8YOGbqu80slr6jZKvEs', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 15:13:28,725 - api.auth - INFO - Request content type: application/json
2025-07-09 15:13:28,725 - api.auth - INFO - Processing JSON request
2025-07-09 15:13:28,725 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 
2025-07-09 15:13:28,729 - api.auth - WARNING - Invalid credentials for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 , error: Invalid credentials
2025-07-09 15:13:28,729 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:28,730 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:28,730 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:28,730 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:40,569 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:13:40,569 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '90', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweDEyRjA0NTNDN2E5RDRGMWI4RjAwRTFBYkYwOTJiM2FCMmMzRDlkM0UiLCJleHAiOjE3NTIwNjIyMDV9.Kg3ONNeNbzhmbS2SCSZ4u2pI8YOGbqu80slr6jZKvEs', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 15:13:40,569 - api.auth - INFO - Request content type: application/json
2025-07-09 15:13:40,569 - api.auth - INFO - Processing JSON request
2025-07-09 15:13:40,569 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 
2025-07-09 15:13:40,576 - api.auth - WARNING - Invalid credentials for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 , error: Invalid credentials
2025-07-09 15:13:40,576 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:40,576 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:40,576 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:40,576 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:41,269 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:13:41,269 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '90', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweDEyRjA0NTNDN2E5RDRGMWI4RjAwRTFBYkYwOTJiM2FCMmMzRDlkM0UiLCJleHAiOjE3NTIwNjIyMDV9.Kg3ONNeNbzhmbS2SCSZ4u2pI8YOGbqu80slr6jZKvEs', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 15:13:41,269 - api.auth - INFO - Request content type: application/json
2025-07-09 15:13:41,269 - api.auth - INFO - Processing JSON request
2025-07-09 15:13:41,269 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 
2025-07-09 15:13:41,273 - api.auth - WARNING - Invalid credentials for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4 , error: Invalid credentials
2025-07-09 15:13:41,273 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:41,273 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:41,273 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:41,274 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:13:55,594 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:13:55,594 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '89', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3YWxsZXQiOiIweDEyRjA0NTNDN2E5RDRGMWI4RjAwRTFBYkYwOTJiM2FCMmMzRDlkM0UiLCJleHAiOjE3NTIwNjIyMDV9.Kg3ONNeNbzhmbS2SCSZ4u2pI8YOGbqu80slr6jZKvEs', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 15:13:55,594 - api.auth - INFO - Request content type: application/json
2025-07-09 15:13:55,594 - api.auth - INFO - Processing JSON request
2025-07-09 15:13:55,595 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:13:55,739 - api.auth - INFO - Authentication successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:13:55,739 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:13:55,739 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:13:55,739 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:13:55,739 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:14:01,799 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:01,799 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:01,800 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:01,800 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:14:01,801 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:01,801 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:01,801 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:01,801 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'authorization'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:14:01,832 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:01,832 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:01,833 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:01,833 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:14:01,855 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:01,855 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:01,855 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:01,855 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:14:15,196 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:15,196 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:15,196 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:15,196 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Access-Control-Allow-Headers', 'content-type'), ('Access-Control-Max-Age', 86400), ('Access-Control-Allow-Methods', 'DELETE, GET, OPTIONS, PATCH, POST, PUT'), ('Vary', 'Origin')])
2025-07-09 15:14:15,249 - api.auth - INFO - Received login request with method: POST
2025-07-09 15:14:15,250 - api.auth - INFO - Request headers: {'Host': '98.66.153.29:4455', 'Connection': 'keep-alive', 'Content-Length': '89', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Dnt': '1', 'Content-Type': 'application/json', 'Origin': 'http://98.66.153.29:4456', 'Referer': 'http://98.66.153.29:4456/', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'fr-FR,fr;q=0.9'}
2025-07-09 15:14:15,250 - api.auth - INFO - Request content type: application/json
2025-07-09 15:14:15,250 - api.auth - INFO - Processing JSON request
2025-07-09 15:14:15,250 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:14:15,399 - api.auth - INFO - Authentication successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 15:14:15,400 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:14:15,400 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:14:15,400 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:14:15,400 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:21:43,267 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 15:21:43,392 - app - INFO - Application started
2025-07-09 15:56:53,602 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:56:53,603 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:56:53,604 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:56:53,604 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 15:56:53,629 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 15:56:53,629 - flask_cors.core - DEBUG - CORS request received with 'Origin' http://98.66.153.29:4456
2025-07-09 15:56:53,629 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 15:56:53,629 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'http://98.66.153.29:4456'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:14:43,603 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 16:14:43,736 - app - INFO - Application started
2025-07-09 16:17:35,289 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 16:17:35,446 - app - INFO - Application started
2025-07-09 16:21:34,730 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 16:21:34,869 - app - INFO - Application started
2025-07-09 16:25:50,271 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 16:25:50,348 - app - INFO - Application started
2025-07-09 16:33:42,246 - flask_cors.extension - DEBUG - Configuring CORS with resources: {'/*': {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}}
2025-07-09 16:33:42,417 - app - INFO - Application started
2025-07-09 16:34:34,953 - api.auth - INFO - Received login request with method: POST
2025-07-09 16:34:34,954 - api.auth - INFO - Request headers: {'Host': 'www.sca.ovh', 'X-Real-Ip': '91.174.208.52', 'X-Forwarded-For': '91.174.208.52', 'X-Forwarded-Proto': 'https', 'Connection': 'close', 'Content-Length': '79', 'Sec-Ch-Ua-Platform': '"Windows"', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Sec-Ch-Ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"', 'Content-Type': 'application/json', 'Sec-Ch-Ua-Mobile': '?0', 'Origin': 'https://www.sca.ovh', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'https://www.sca.ovh/login', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 16:34:34,955 - api.auth - INFO - Request content type: application/json
2025-07-09 16:34:34,955 - api.auth - INFO - Processing JSON request
2025-07-09 16:34:34,955 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:34:34,979 - api.auth - WARNING - Invalid credentials for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4, error: Invalid credentials
2025-07-09 16:34:34,980 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:34:34,980 - flask_cors.core - DEBUG - CORS request received with 'Origin' https://www.sca.ovh
2025-07-09 16:34:34,980 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 16:34:34,980 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'https://www.sca.ovh'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:34:50,484 - api.auth - INFO - Received register request with method: POST
2025-07-09 16:34:50,485 - api.auth - INFO - Request headers: {'Host': 'www.sca.ovh', 'X-Real-Ip': '91.174.208.52', 'X-Forwarded-For': '91.174.208.52', 'X-Forwarded-Proto': 'https', 'Connection': 'close', 'Content-Length': '134', 'Sec-Ch-Ua-Platform': '"Windows"', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Sec-Ch-Ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"', 'Content-Type': 'application/json', 'Sec-Ch-Ua-Mobile': '?0', 'Origin': 'https://www.sca.ovh', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'https://www.sca.ovh/register', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 16:34:50,485 - api.auth - INFO - Request content type: application/json
2025-07-09 16:34:50,485 - api.auth - INFO - Processing JSON request
2025-07-09 16:34:50,485 - api.auth - INFO - Attempting to register user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:34:50,644 - api.auth - INFO - Registration successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:34:50,645 - flask_cors.extension - DEBUG - Request to ''/register'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:34:50,645 - flask_cors.core - DEBUG - CORS request received with 'Origin' https://www.sca.ovh
2025-07-09 16:34:50,645 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 16:34:50,645 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'https://www.sca.ovh'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:35:01,957 - api.auth - INFO - Received login request with method: POST
2025-07-09 16:35:01,957 - api.auth - INFO - Request headers: {'Host': 'www.sca.ovh', 'X-Real-Ip': '91.174.208.52', 'X-Forwarded-For': '91.174.208.52', 'X-Forwarded-Proto': 'https', 'Connection': 'close', 'Content-Length': '79', 'Sec-Ch-Ua-Platform': '"Windows"', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36', 'Accept': 'application/json', 'Sec-Ch-Ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"', 'Content-Type': 'application/json', 'Sec-Ch-Ua-Mobile': '?0', 'Origin': 'https://www.sca.ovh', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'https://www.sca.ovh/login', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7'}
2025-07-09 16:35:01,958 - api.auth - INFO - Request content type: application/json
2025-07-09 16:35:01,958 - api.auth - INFO - Processing JSON request
2025-07-09 16:35:01,958 - api.auth - INFO - Attempting to authenticate user with wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:35:02,112 - api.auth - INFO - Authentication successful for wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:35:02,112 - flask_cors.extension - DEBUG - Request to ''/login'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:35:02,113 - flask_cors.core - DEBUG - CORS request received with 'Origin' https://www.sca.ovh
2025-07-09 16:35:02,113 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 16:35:02,113 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'https://www.sca.ovh'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:35:19,299 - api.contract - INFO - Received analyze request from wallet: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:35:19,300 - api.contract - INFO - Analyzing code snippet
2025-07-09 16:35:19,303 - api.contract - INFO - Starting contract analysis for user: 1
2025-07-09 16:35:19,304 - services.contract_service - INFO - Created temporary file for contract code: /tmp/tmpqz0fcs5p.sol
2025-07-09 16:35:19,305 - services.contract_service - INFO - Connected to Ganache at http://ganache:8545
2025-07-09 16:35:19,305 - services.contract_service - INFO - Compiling contract...
2025-07-09 16:35:19,586 - solcx - INFO - Downloading from https://solc-bin.ethereum.org/linux-amd64/solc-linux-amd64-v0.8.0+commit.c7dfd78e
2025-07-09 16:35:19,706 - solcx - INFO - solc 0.8.0 successfully installed at: /root/.solcx/solc-v0.8.0
2025-07-09 16:35:19,707 - solcx - INFO - Using solc version 0.8.0
2025-07-09 16:35:19,974 - services.contract_service - INFO - Compilation result: 1 contracts compiled
2025-07-09 16:35:19,974 - services.contract_service - INFO - Deploying 1 contracts...
2025-07-09 16:35:20,135 - services.contract_service - INFO - Contract VulnerableBank deployed at 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24
2025-07-09 16:35:20,135 - services.contract_service - INFO - Setting up contract VulnerableBank...
2025-07-09 16:35:20,297 - services.contract_service - INFO - Contract VulnerableBank setup completed
2025-07-09 16:35:20,298 - services.contract_service - INFO - Funding contract VulnerableBank for attack testing...
2025-07-09 16:35:20,462 - services.contract_service - INFO - Contract VulnerableBank funded
2025-07-09 16:35:20,465 - services.contract_service - INFO - Building contract observation...
2025-07-09 16:35:20,636 - services.contract_service - INFO - Contract observation built successfully
2025-07-09 16:35:20,636 - services.contract_service - INFO - Generating attack strategy...
2025-07-09 16:35:20,637 - services.contract_service - INFO - Running Slither analysis...
2025-07-09 16:35:23,351 - services.contract_service - WARNING - Failed to run Slither analysis: Command '['slither', '/tmp/tmpqz0fcs5p.sol', '--json', '/tmp/slither/tmpqz0fcs5p.json', '--ignore-compile']' returned non-zero exit status 1.
2025-07-09 16:35:23,354 - services.contract_service - WARNING - Traceback (most recent call last):
  File "/app/services/contract_service.py", line 192, in analyze_contract_from_code
    slith_result = slither_analyze(temp_path)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 155, in slither_analyze
    slither_result = run_slither(sol_path, json_path, solc_version)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/modules/slither_scan.py", line 106, in run_slither
    raise subprocess.CalledProcessError(result_json.returncode, cmd_json)
subprocess.CalledProcessError: Command '['slither', '/tmp/tmpqz0fcs5p.sol', '--json', '/tmp/slither/tmpqz0fcs5p.json', '--ignore-compile']' returned non-zero exit status 1.

2025-07-09 16:35:23,354 - modules.attack_generator - INFO - Starting complete attack strategy generation
2025-07-09 16:35:23,354 - modules.attack_generator - INFO - Contract name: VulnerableBank
2025-07-09 16:35:23,354 - modules.attack_generator - INFO - Using step number: 0 for model selection
2025-07-09 16:35:23,354 - modules.attack_generator - INFO - 🔍 Step 1: Analyzing contracts for vulnerabilities...
2025-07-09 16:35:23,355 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 16:35:23,355 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 16:35:23,355 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 16:35:25,414 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:25,415 - openai._base_client - INFO - Retrying request to /chat/completions in 0.439076 seconds
2025-07-09 16:35:28,561 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:28,562 - openai._base_client - INFO - Retrying request to /chat/completions in 0.849242 seconds
2025-07-09 16:35:29,951 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:29,952 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 16:35:29,961 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 16:35:29,961 - modules.attack_generator - INFO - Contract analysis completed in 6.61 seconds
2025-07-09 16:35:29,962 - modules.attack_generator - INFO - No vulnerabilities found in the contract
2025-07-09 16:35:29,962 - modules.attack_generator - INFO - ⚔️ Step 2: Generating attack code...
2025-07-09 16:35:29,962 - modules.attack_generator - INFO - [MODE] Utilisation du gros modèle (GPT-4)
2025-07-09 16:35:29,962 - modules.attack_generator - INFO - Querying OpenAI GPT-4 API with temperature=0.2, max_tokens=1800
2025-07-09 16:35:29,962 - modules.attack_generator - INFO - Sending request to OpenAI API...
2025-07-09 16:35:31,702 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:31,702 - openai._base_client - INFO - Retrying request to /chat/completions in 0.478769 seconds
2025-07-09 16:35:32,840 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:32,841 - openai._base_client - INFO - Retrying request to /chat/completions in 0.812375 seconds
2025-07-09 16:35:33,846 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-07-09 16:35:33,846 - modules.attack_generator - ERROR - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
Traceback (most recent call last):
  File "/app/modules/attack_generator.py", line 254, in query_gpt4
    response = openai.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_utils/_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/resources/chat/completions/completions.py", line 1087, in create
    return self._post(
           ^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1249, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.12/site-packages/openai/_base_client.py", line 1037, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 16:35:33,847 - modules.attack_generator - INFO - Error querying GPT-4: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-07-09 16:35:33,848 - modules.attack_generator - INFO - Attack code generation completed in 3.89 seconds
2025-07-09 16:35:33,848 - modules.attack_generator - INFO - No attack code was generated
2025-07-09 16:35:33,848 - modules.attack_generator - INFO - Total attack strategy generation completed in 10.49 seconds
2025-07-09 16:35:33,848 - modules.attack_generator - INFO - Attack strategy generation completed successfully
2025-07-09 16:35:33,848 - services.contract_service - INFO - Attack strategy generated successfully: {'analysis': {'analysis_prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpqz0fcs5p.sol",\n  "contracts": [\n    {\n      "contract_name": "VulnerableBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "deposit",\n          "outputs": [],\n          "stateMutability": "payable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deposit",\n          "signature": "deposit()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "payable",\n          "payable": true,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw(uint256)",\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99984355400000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 0\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 3000000000000000000\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getBalance": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VulnerableBank {\\n    mapping(address => uint256) public balances;\\n\\n    // D\\u00e9p\\u00f4t d\'Ether\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    // Retrait vuln\\u00e9rable\\n    function withdraw(uint256 _amount) public {\\n        require(balances[msg.sender] >= _amount, \\"Insufficient balance\\");\\n\\n        // \\u26a0\\ufe0f Transfert d\'abord\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\"\\");\\n        require(sent, \\"Failed to send Ether\\");\\n\\n        // \\u2705 Mise \\u00e0 jour APR\\u00c8S (c\'est le bug !)\\n        balances[msg.sender] -= _amount;\\n    }\\n\\n    // Voir son solde\\n    function getBalance() public view returns (uint256) {\\n        return balances[msg.sender];\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'analysis_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'contract_analysis': '', 'vulnerability_assessment': '', 'exploitation_requirements': '', 'analysis_duration': 6.605792045593262}, 'attack': {'attack_prompt': "\nYou are a Solidity exploit developer. Based on the security analysis, create ONLY executable Solidity attack code.\n\nSecurity Analysis:\n\nContract Analysis: \n\nVulnerability Assessment: \n\nExploitation Requirements: \n\n\nTarget Contract Address: 0x5b1869D9A4C187F2EAa108f3062412ecf0526b24\n\nRequirements:\n- Generate ONLY complete, compilable Solidity code\n- Include pragma solidity version \n- Create a contract that can be deployed and executed\n- Ensure to use the same solidity version as the target contract and respect the syntax rules for this version\n- Include an attack function (named 'attack', 'exploit', or 'run')\n- The constructor should take the target contract address as parameter\n- Focus on exploiting the identified vulnerabilities\n- NO explanations, NO comments, ONLY CODE\nReturn format: Pure Solidity code in ```solidity code blocks.\n```pragma solidity 0.8.0\n", 'attack_raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'code': '', 'code_type': 'solidity', 'attack_duration': 3.8857195377349854}, 'prompt': '\nYou are a world-class smart contract security auditor.\n\n**Ignore all contracts that are standard utilities (ERC20, SafeMath, Ownable, Math, Interface, Libraries, etc). Focus only on contracts that can hold ETH or user funds, or have business logic.**\n\nYour task is to analyze the contracts and identify vulnerabilities:\n- Analyze only the real targets (wallets, banks, DAOs, exchanges, casinos, crowdsales, games, proxies, funds, staking, etc.)\n- Identify **any vulnerability**: reentrancy, logic bugs, permission issues, math errors, unsafe calls, backdoors, economic exploits, etc.\n- Explain the vulnerability mechanism and potential impact\n- If an initial setup is required for exploitation, describe the setup process\n- Return the solidity version of the contracts (pragma solidity ^x.x.x)\n\nThe slither analyze :  \n\nContracts context (JSON):\n{\n  "filename": "tmpqz0fcs5p.sol",\n  "contracts": [\n    {\n      "contract_name": "VulnerableBank",\n      "address": "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24",\n      "abi": [\n        {\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "name": "balances",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "deposit",\n          "outputs": [],\n          "stateMutability": "payable",\n          "type": "function"\n        },\n        {\n          "inputs": [],\n          "name": "getBalance",\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "type": "function"\n        },\n        {\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "name": "withdraw",\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "type": "function"\n        }\n      ],\n      "functions": [\n        {\n          "name": "balances",\n          "signature": "balances(address)",\n          "inputs": [\n            {\n              "internalType": "address",\n              "name": "",\n              "type": "address"\n            }\n          ],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "deposit",\n          "signature": "deposit()",\n          "inputs": [],\n          "outputs": [],\n          "stateMutability": "payable",\n          "payable": true,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "getBalance",\n          "signature": "getBalance()",\n          "inputs": [],\n          "outputs": [\n            {\n              "internalType": "uint256",\n              "name": "",\n              "type": "uint256"\n            }\n          ],\n          "stateMutability": "view",\n          "payable": false,\n          "constant": true,\n          "visibility": "public",\n          "modifiers": []\n        },\n        {\n          "name": "withdraw",\n          "signature": "withdraw(uint256)",\n          "inputs": [\n            {\n              "internalType": "uint256",\n              "name": "_amount",\n              "type": "uint256"\n            }\n          ],\n          "outputs": [],\n          "stateMutability": "nonpayable",\n          "payable": false,\n          "constant": false,\n          "visibility": "public",\n          "modifiers": []\n        }\n      ],\n      "events": [],\n      "accounts_balances": {\n        "0x5b1869D9A4C187F2EAa108f3062412ecf0526b24": 3000000000000000000,\n        "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1": 99984355400000000000,\n        "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0": 96999153260000000000,\n        "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b": 100000000000000000000\n      },\n      "public_state": {\n        "_contract_eth_balance_wei": 3000000000000000000,\n        "_contract_eth_balance_eth": 3.0,\n        "balances": [\n          {\n            "address": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",\n            "value": 0\n          },\n          {\n            "address": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",\n            "value": 3000000000000000000\n          },\n          {\n            "address": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",\n            "value": 0\n          }\n        ],\n        "getBalance": 0\n      },\n      "source_code_snippet": "// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract VulnerableBank {\\n    mapping(address => uint256) public balances;\\n\\n    // D\\u00e9p\\u00f4t d\'Ether\\n    function deposit() public payable {\\n        balances[msg.sender] += msg.value;\\n    }\\n\\n    // Retrait vuln\\u00e9rable\\n    function withdraw(uint256 _amount) public {\\n        require(balances[msg.sender] >= _amount, \\"Insufficient balance\\");\\n\\n        // \\u26a0\\ufe0f Transfert d\'abord\\n        (bool sent, ) = msg.sender.call{value: _amount}(\\"\\");\\n        require(sent, \\"Failed to send Ether\\");\\n\\n        // \\u2705 Mise \\u00e0 jour APR\\u00c8S (c\'est le bug !)\\n        balances[msg.sender] -= _amount;\\n    }\\n\\n    // Voir son solde\\n    function getBalance() public view returns (uint256) {\\n        return balances[msg.sender];\\n    }\\n}",\n      "solc_version": "0.8.0"\n    }\n  ]\n}\n\nResponse format:\n1. Contract Analysis: ...\n2. Vulnerability Assessment: ...  \n3. Exploitation Requirements: ...\n---\n', 'raw_response': "ERROR: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}", 'reasoning': '', 'summary': '', 'code': '', 'code_type': 'solidity', 'duration': 10.491511583328247}
2025-07-09 16:35:33,849 - services.contract_service - INFO - Has exploit code: False
2025-07-09 16:35:33,849 - services.contract_service - INFO - No vulnerabilities mentioned: False
2025-07-09 16:35:33,849 - services.contract_service - INFO - Final vulnerability determination: False
2025-07-09 16:35:33,849 - services.contract_service - INFO - Attack strategy summary: 
2025-07-09 16:35:33,849 - services.contract_service - INFO - Analysis completed with status: OK
2025-07-09 16:35:33,849 - services.contract_service - INFO - Temporary file /tmp/tmpqz0fcs5p.sol removed
2025-07-09 16:35:33,866 - api.contract - INFO - Report saved with filename: VulnerableBank_2025-07-09_16-35, status: OK
2025-07-09 16:35:33,866 - api.contract - INFO - Analysis completed successfully, returning report
2025-07-09 16:35:33,866 - flask_cors.extension - DEBUG - Request to ''/analyze'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:35:33,866 - flask_cors.core - DEBUG - CORS request received with 'Origin' https://www.sca.ovh
2025-07-09 16:35:33,866 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 16:35:33,867 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'https://www.sca.ovh'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:35:35,398 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:35:35,398 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', '*'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type')])
2025-07-09 16:37:12,483 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:37:12,483 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', '*'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type')])
2025-07-09 16:37:12,503 - flask_cors.extension - DEBUG - Request to ''/history'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:37:12,503 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', '*'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type')])
2025-07-09 16:37:13,913 - api.feedback - INFO - Réception d'un retour depuis le portefeuille: 0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4
2025-07-09 16:37:13,935 - api.feedback - INFO - Retour sauvegardé avec ID: 1, statut: OK, poids de la requête: 3.0
2025-07-09 16:37:13,935 - flask_cors.extension - DEBUG - Request to ''/feedback'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:37:13,936 - flask_cors.core - DEBUG - CORS request received with 'Origin' https://www.sca.ovh
2025-07-09 16:37:13,936 - flask_cors.core - DEBUG - The request's Origin header matches. Sending CORS headers.
2025-07-09 16:37:13,936 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', 'https://www.sca.ovh'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type'), ('Vary', 'Origin')])
2025-07-09 16:37:16,816 - flask_cors.extension - DEBUG - Request to ''/report/0x9fB2C18D37a87b7e5172a1aA99F1e3B73D37A1b4/VulnerableBank_2025-07-09_16-35'' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': 'Authorization, Content-Disposition, Content-Length, Content-Type', 'supports_credentials': False, 'max_age': 86400, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*', 'methods': ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'], 'allow_headers': ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin', 'Access-Control-Request-Method', 'Access-Control-Request-Headers'], 'expose_headers': ['Content-Type', 'Content-Length', 'Content-Disposition', 'Authorization'], 'supports_credentials': False, 'max_age': 86400}}, 'intercept_exceptions': True, 'always_send': True, 'allow_private_network': False}
2025-07-09 16:37:16,816 - flask_cors.core - DEBUG - Settings CORS headers: MultiDict([('Access-Control-Allow-Origin', '*'), ('Access-Control-Expose-Headers', 'Authorization, Content-Disposition, Content-Length, Content-Type')])
