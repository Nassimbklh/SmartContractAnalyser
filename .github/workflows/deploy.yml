name: Test and Deploy

on:
  push:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Write .env file
      run: |
        set -e
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

    - name: Clean Docker before build
      run: |
        docker compose down || true
        docker system prune -f

    - name: Build and start Docker containers
      run: |
        docker compose up -d
        sleep 20

    - name: Log backend and PostgreSQL
      run: |
        docker logs smartcontractanalyser-db-1
        docker logs smartcontractanalyser-backend-1

    - name: Show running containers
      run: docker ps

    - name: Run simple service test
      run: |
        python test_env/test_services.py

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 98.66.153.29 >> ~/.ssh/known_hosts

    - name: Deploy on Azure VM
      run: |
        ssh -i ~/.ssh/id_rsa azureuser@98.66.153.29 << 'EOF'
          cd ~/SmartContractAnalyser
          git pull origin main
          docker compose down
          docker compose up -d --build
        EOF